                                                                      Page 1
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
Command Line: C:\GHS\V800.V2014.1.7\comp_201417\ease850.exe -w -elf -b0 -I../../../../../app/common/dhd -I../../../../../app/gfx_apps/simple_draw/src -I../../../../../app/gfx_apps/simple_draw/lib -I../../../../../bsp/board//config -I../../../../../bsp/board//src/gfx -I../../../../../bsp/board//src/hmi -I../../../../../bsp/board//src/stdio -I../../../../../bsp/board/d1mx_mango/config -I../../../../../bsp/board/d1mx_mango/src -I../../../../../bsp/board/d1mx_mango/src/gfx -I../../../../../bsp/board/d1mx_mango/src/hmi -I../../../../../bsp/board/d1mx_mango/src/stdio -I../../../../../bsp/gfx/lib -I../../../../../bsp/gfx/src -I../../../../../bsp/hmi/lib -I../../../../../bsp/hmi/src -I../../../../../bsp/lib -I../../../../../bsp/stdio/lib -I../../../../../bsp/stdio/src -I../../../../../cdi/lib -I../../../../../cdi/src -I../../../../../compiler/rh850_ghs/inc -I../../../../../device/d1mx/lib -I../../../../../device/d1mx/macro_cfg -I../../../../../device/d1mx/macro_cfg/csisw -I../../../../../device/d1mx/macro_cfg/davehd -I../../../../../device/d1mx/macro_cfg/ddb -I../../../../../device/d1mx/macro_cfg/drw2d -I../../../../../device/d1mx/macro_cfg/gfxbus -I../../../../../device/d1mx/macro_cfg/gpio -I../../../../../device/d1mx/macro_cfg/hypb -I../../../../../device/d1mx/macro_cfg/hypdb -I../../../../../device/d1mx/macro_cfg/jcua -I../../../../../device/d1mx/macro_cfg/nfmabare -I../../../../../device/d1mx/macro_cfg/octa -I../../../../../device/d1mx/macro_cfg/octacdb -I../../../../../device/d1mx/macro_cfg/ostm -I../../../../../device/d1mx/macro_cfg/pbg -I../../../../../device/d1mx/macro_cfg/riic -I../../../../../device/d1mx/macro_cfg/sfcdb -I../../../../../device/d1mx/macro_cfg/sfma -I../../../../../device/d1mx/macro_cfg/spea -I../../../../../device/d1mx/macro_cfg/tauj -I../../../../../device/d1mx/macro_cfg/tick -I../../../../../device/d1mx/macro_cfg/vdce -I../../../../../device/d1mx/macro_cfg/vowe -I../../../../../device/d1mx/macro_cfg/wm -I../../../../../device/d1mx/macro_cfg/xbus -I../../../../../device/d1mx/src/dev -I../../../../../device/d1mx/src/dhd -I../../../../../device/d1mx/src/hypb -I../../../../../device/d1mx/src/jcua -I../../../../../device/d1mx/src/nfmabare -I../../../../../device/d1mx/src/octa -I../../../../../device/d1mx/src/rh850_ghs -I../../../../../device/d1mx/src/vowe -I../../../../../device/d1x_common/macro_cfg -I../../../../../device/d1x_common/macro_cfg/csisw -I../../../../../device/d1x_common/macro_cfg/davehd -I../../../../../device/d1x_common/macro_cfg/ddb -I../../../../../device/d1x_common/macro_cfg/drw2d -I../../../../../device/d1x_common/macro_cfg/gfxbus -I../../../../../device/d1x_common/macro_cfg/gpio -I../../../../../device/d1x_common/macro_cfg/hypb -I../../../../../device/d1x_common/macro_cfg/hypdb -I../../../../../device/d1x_common/macro_cfg/jcua -I../../../../../device/d1x_common/macro_cfg/nfmabare -I../../../../../device/d1x_common/macro_cfg/octa -I../../../../../device/d1x_common/macro_cfg/octacdb -I../../../../../device/d1x_common/macro_cfg/ostm -I../../../../../device/d1x_common/macro_cfg/pbg -I../../../../../device/d1x_common/macro_cfg/riic -I../../../../../device/d1x_common/macro_cfg/sfcdb -I../../../../../device/d1x_common/macro_cfg/sfma -I../../../../../device/d1x_common/macro_cfg/spea -I../../../../../device/d1x_common/macro_cfg/tauj -I../../../../../device/d1x_common/macro_cfg/tick -I../../../../../device/d1x_common/macro_cfg/vdce -I../../../../../device/d1x_common/macro_cfg/vowe -I../../../../../device/d1x_common/macro_cfg/wm -I../../../../../device/d1x_common/macro_cfg/xbus -I../../../../../device/d1x_common/src/csisw -I../../../../../device/d1x_common/src/ddb -I../../../../../device/d1x_common/src/dev -I../../../../../device/d1x_common/src/gfxbus -I../../../../../device/d1x_common/src/gpio -I../../../../../device/d1x_common/src/ostm -I../../../../../device/d1x_common/src/pbg -I../../../../../device/d1x_common/src/riic -I../../../../../device/d1x_common/src/sfma -I../../../../../device/d1x_common/src/spea -I../../../../../device/d1x_common/src/tauj -I../../../../../device/d1x_common/src/tick -I../../../../../device/d1x_common/src/vdce -I../../../../../device/d1x_common/src/wm -I../../../../../device/d1x_common/src/xbus -I../../../../../device/lib -I../../../../../macro/bus/pbg/lib -I../../../../../macro/bus/pbg/src -I../../../../../macro/csi/csisw/lib -I../../../../../macro/csi/csisw/src -I../../../../../macro/drw2d/lib -I../../../../../macro/drw2d/platform/davehd -I../../../../../macro/drw2d/platform/os/no_os -I../../../../../macro/drw2d/src -I../../../../../macro/flashc/hypb/lib -I../../../../../macro/flashc/hypb/src -I../../../../../macro/flashc/hypdb/lib -I../../../../../macro/flashc/hypdb/src -I../../../../../macro/flashc/nfmabare/lib -I../../../../../macro/flashc/nfmabare/src -I../../../../../macro/flashc/octa/lib -I../../../../../macro/flashc/octa/src -I../../../../../macro/flashc/octacdb/lib -I../../../../../macro/flashc/octacdb/src -I../../../../../macro/flashc/sfcdb/lib -I../../../../../macro/flashc/sfcdb/src -I../../../../../macro/flashc/sfma/lib -I../../../../../macro/flashc/sfma/src -I../../../../../macro/gfxbus/lib -I../../../../../macro/gfxbus/src -I../../../../../macro/gfxbus/xbus/lib -I../../../../../macro/gfxbus/xbus/src -I../../../../../macro/gpio/lib -I../../../../../macro/gpio/src -I../../../../../macro/gpu/davehd/common/inc -I../../../../../macro/gpu/davehd/common/inc/platform -I../../../../../macro/gpu/davehd/common/inc/platform/d1mx -I../../../../../macro/gpu/davehd/docs -I../../../../../macro/gpu/davehd/kernel/inc -I../../../../../macro/gpu/davehd/kernel/platform/d1mx -I../../../../../macro/gpu/davehd/kernel/platform/d1mx/bridge -I../../../../../macro/gpu/davehd/kernel/platform/d1mx/non_threaded -I../../../../../macro/gpu/davehd/kernel/platform/ree -I../../../../../macro/gpu/davehd/kernel/src -I../../../../../macro/gpu/davehd/user/inc -I../../../../../macro/gpu/davehd/user/platform/d1mx/no_os -I../../../../../macro/gpu/davehd/user/src -I../../../../../macro/gpu/jcua/lib -I../../../../../macro/gpu/jcua/src -I../../../../../macro/i2c/riic/lib -I../../../../../macro/i2c/riic/src -I../../../../../macro/tick/lib -I../../../../../macro/tick/src -I../../../../../macro/timer/ostm/lib -I../../../../../macro/timer/ostm/src -I../../../../../macro/timer/tauj/lib -I../../../../../macro/timer/tauj/src -I../../../../../macro/vdce/lib -I../../../../../macro/vdce/src -I../../../../../macro/vo/ddb/lib -I../../../../../macro/vo/ddb/src -I../../../../../macro/vo/spea/lib -I../../../../../macro/vo/spea/src -I../../../../../macro/vo/vowe/lib -I../../../../../macro/vo/vowe/src -I../../../../../macro/wm/lib -I../../../../../macro/wm/src -I../../../../../macro/pwm/lib -I../../../../../macro/reset/lib -I../../../../../macro/rscan/lib -I../../../../../macro/uart/rlin3/lib -I../../../../../macro/uart/rlin3/src -I../../../../../device/d1x_common/macro_cfg/rlin3 -I../../../../../macro/stbc/lib -I../../../../../macro/adc/lib -I../../../../../device/d1x_common/macro_cfg/adc7010 -IC:\GHS\V800.V2014.1.7\comp_201417\lib\rh850_22 -cg_underscore -cpu=rh850g3m -no_v850_simd -rh850_fpsimd=none -nomacro -patch_dbo=C:\git\rh850\src\app\gfx_apps\simple_draw\target\d1mx_mango_ghs\obj\r_cdi_memory.dbo -source=r_cdi_memory.c -o .\obj\gh_0000pg41.o -list=.\obj\r_cdi_memory.lst C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si 
Original File: C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
Source File: r_cdi_memory.c
Directory: C:\git\rh850\src\app\gfx_apps\simple_draw\target\d1mx_mango_ghs
Host OS: Windows
EASE: Copyright (C) 1983-2014 Green Hills Software.  All Rights Reversed.
Release: Compiler v2014.1.7
Build Directory: [Directory] BTOWINBOX:c:/build_2014_1_bto/2014-09-04.2200-2014_1_bto/win32-comp-ecom
Revision: [VCInfo] http://toolsvc/branches/release-branch-2014-1-bto/src@515859 (built by build)
Revision Date: Fri Sep 05 14:05:06 2014

Release Date: Fri Sep 05 14:43:29 2014

                           1 --Driver Command: ccv850 -c -MD -I../../../../../app/common/dhd
                           2 --		-I../../../../../app/gfx_apps/simple_draw/src
                           3 --		-I../../../../../app/gfx_apps/simple_draw/lib
                           4 --		-I../../../../../bsp/board//config
                           5 --		-I../../../../../bsp/board//src/gfx
                           6 --		-I../../../../../bsp/board//src/hmi
                           7 --		-I../../../../../bsp/board//src/stdio
                           8 --		-I../../../../../bsp/board/d1mx_mango/config
                           9 --		-I../../../../../bsp/board/d1mx_mango/src
                          10 --		-I../../../../../bsp/board/d1mx_mango/src/gfx
                          11 --		-I../../../../../bsp/board/d1mx_mango/src/hmi
                          12 --		-I../../../../../bsp/board/d1mx_mango/src/stdio
                          13 --		-I../../../../../bsp/gfx/lib -I../../../../../bsp/gfx/src
                          14 --		-I../../../../../bsp/hmi/lib -I../../../../../bsp/hmi/src
                          15 --		-I../../../../../bsp/lib -I../../../../../bsp/stdio/lib
                          16 --		-I../../../../../bsp/stdio/src -I../../../../../cdi/lib
                          17 --		-I../../../../../cdi/src -I../../../../../compiler/rh850_ghs/inc
                          18 --		-I../../../../../device/d1mx/lib
                          19 --		-I../../../../../device/d1mx/macro_cfg
                          20 --		-I../../../../../device/d1mx/macro_cfg/csisw
                          21 --		-I../../../../../device/d1mx/macro_cfg/davehd
                          22 --		-I../../../../../device/d1mx/macro_cfg/ddb
                          23 --		-I../../../../../device/d1mx/macro_cfg/drw2d
                          24 --		-I../../../../../device/d1mx/macro_cfg/gfxbus
                          25 --		-I../../../../../device/d1mx/macro_cfg/gpio
                          26 --		-I../../../../../device/d1mx/macro_cfg/hypb
                          27 --		-I../../../../../device/d1mx/macro_cfg/hypdb
                          28 --		-I../../../../../device/d1mx/macro_cfg/jcua
                          29 --		-I../../../../../device/d1mx/macro_cfg/nfmabare
                          30 --		-I../../../../../device/d1mx/macro_cfg/octa
                          31 --		-I../../../../../device/d1mx/macro_cfg/octacdb
                          32 --		-I../../../../../device/d1mx/macro_cfg/ostm
                          33 --		-I../../../../../device/d1mx/macro_cfg/pbg
                          34 --		-I../../../../../device/d1mx/macro_cfg/riic
                          35 --		-I../../../../../device/d1mx/macro_cfg/sfcdb
                          36 --		-I../../../../../device/d1mx/macro_cfg/sfma
                          37 --		-I../../../../../device/d1mx/macro_cfg/spea
                          38 --		-I../../../../../device/d1mx/macro_cfg/tauj
                          39 --		-I../../../../../device/d1mx/macro_cfg/tick
                          40 --		-I../../../../../device/d1mx/macro_cfg/vdce
                          41 --		-I../../../../../device/d1mx/macro_cfg/vowe
                          42 --		-I../../../../../device/d1mx/macro_cfg/wm
                          43 --		-I../../../../../device/d1mx/macro_cfg/xbus
                          44 --		-I../../../../../device/d1mx/src/dev
                          45 --		-I../../../../../device/d1mx/src/dhd
                          46 --		-I../../../../../device/d1mx/src/hypb
                          47 --		-I../../../../../device/d1mx/src/jcua
                          48 --		-I../../../../../device/d1mx/src/nfmabare
                          49 --		-I../../../../../device/d1mx/src/octa
                          50 --		-I../../../../../device/d1mx/src/rh850_ghs

                                                                      Page 2
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                          51 --		-I../../../../../device/d1mx/src/vowe
                          52 --		-I../../../../../device/d1x_common/macro_cfg
                          53 --		-I../../../../../device/d1x_common/macro_cfg/csisw
                          54 --		-I../../../../../device/d1x_common/macro_cfg/davehd
                          55 --		-I../../../../../device/d1x_common/macro_cfg/ddb
                          56 --		-I../../../../../device/d1x_common/macro_cfg/drw2d
                          57 --		-I../../../../../device/d1x_common/macro_cfg/gfxbus
                          58 --		-I../../../../../device/d1x_common/macro_cfg/gpio
                          59 --		-I../../../../../device/d1x_common/macro_cfg/hypb
                          60 --		-I../../../../../device/d1x_common/macro_cfg/hypdb
                          61 --		-I../../../../../device/d1x_common/macro_cfg/jcua
                          62 --		-I../../../../../device/d1x_common/macro_cfg/nfmabare
                          63 --		-I../../../../../device/d1x_common/macro_cfg/octa
                          64 --		-I../../../../../device/d1x_common/macro_cfg/octacdb
                          65 --		-I../../../../../device/d1x_common/macro_cfg/ostm
                          66 --		-I../../../../../device/d1x_common/macro_cfg/pbg
                          67 --		-I../../../../../device/d1x_common/macro_cfg/riic
                          68 --		-I../../../../../device/d1x_common/macro_cfg/sfcdb
                          69 --		-I../../../../../device/d1x_common/macro_cfg/sfma
                          70 --		-I../../../../../device/d1x_common/macro_cfg/spea
                          71 --		-I../../../../../device/d1x_common/macro_cfg/tauj
                          72 --		-I../../../../../device/d1x_common/macro_cfg/tick
                          73 --		-I../../../../../device/d1x_common/macro_cfg/vdce
                          74 --		-I../../../../../device/d1x_common/macro_cfg/vowe
                          75 --		-I../../../../../device/d1x_common/macro_cfg/wm
                          76 --		-I../../../../../device/d1x_common/macro_cfg/xbus
                          77 --		-I../../../../../device/d1x_common/src/csisw
                          78 --		-I../../../../../device/d1x_common/src/ddb
                          79 --		-I../../../../../device/d1x_common/src/dev
                          80 --		-I../../../../../device/d1x_common/src/gfxbus
                          81 --		-I../../../../../device/d1x_common/src/gpio
                          82 --		-I../../../../../device/d1x_common/src/ostm
                          83 --		-I../../../../../device/d1x_common/src/pbg
                          84 --		-I../../../../../device/d1x_common/src/riic
                          85 --		-I../../../../../device/d1x_common/src/sfma
                          86 --		-I../../../../../device/d1x_common/src/spea
                          87 --		-I../../../../../device/d1x_common/src/tauj
                          88 --		-I../../../../../device/d1x_common/src/tick
                          89 --		-I../../../../../device/d1x_common/src/vdce
                          90 --		-I../../../../../device/d1x_common/src/wm
                          91 --		-I../../../../../device/d1x_common/src/xbus
                          92 --		-I../../../../../device/lib -I../../../../../macro/bus/pbg/lib
                          93 --		-I../../../../../macro/bus/pbg/src
                          94 --		-I../../../../../macro/csi/csisw/lib
                          95 --		-I../../../../../macro/csi/csisw/src
                          96 --		-I../../../../../macro/drw2d/lib
                          97 --		-I../../../../../macro/drw2d/platform/davehd
                          98 --		-I../../../../../macro/drw2d/platform/os/no_os
                          99 --		-I../../../../../macro/drw2d/src
                         100 --		-I../../../../../macro/flashc/hypb/lib
                         101 --		-I../../../../../macro/flashc/hypb/src
                         102 --		-I../../../../../macro/flashc/hypdb/lib
                         103 --		-I../../../../../macro/flashc/hypdb/src
                         104 --		-I../../../../../macro/flashc/nfmabare/lib
                         105 --		-I../../../../../macro/flashc/nfmabare/src
                         106 --		-I../../../../../macro/flashc/octa/lib
                         107 --		-I../../../../../macro/flashc/octa/src
                         108 --		-I../../../../../macro/flashc/octacdb/lib
                         109 --		-I../../../../../macro/flashc/octacdb/src
                         110 --		-I../../../../../macro/flashc/sfcdb/lib
                         111 --		-I../../../../../macro/flashc/sfcdb/src

                                                                      Page 3
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         112 --		-I../../../../../macro/flashc/sfma/lib
                         113 --		-I../../../../../macro/flashc/sfma/src
                         114 --		-I../../../../../macro/gfxbus/lib
                         115 --		-I../../../../../macro/gfxbus/src
                         116 --		-I../../../../../macro/gfxbus/xbus/lib
                         117 --		-I../../../../../macro/gfxbus/xbus/src
                         118 --		-I../../../../../macro/gpio/lib -I../../../../../macro/gpio/src
                         119 --		-I../../../../../macro/gpu/davehd/common/inc
                         120 --		-I../../../../../macro/gpu/davehd/common/inc/platform
                         121 --		-I../../../../../macro/gpu/davehd/common/inc/platform/d1mx
                         122 --		-I../../../../../macro/gpu/davehd/docs
                         123 --		-I../../../../../macro/gpu/davehd/kernel/inc
                         124 --		-I../../../../../macro/gpu/davehd/kernel/platform/d1mx
                         125 --		-I../../../../../macro/gpu/davehd/kernel/platform/d1mx/bridge
                         126 --		-I../../../../../macro/gpu/davehd/kernel/platform/d1mx/non_threaded
                         127 --		-I../../../../../macro/gpu/davehd/kernel/platform/ree
                         128 --		-I../../../../../macro/gpu/davehd/kernel/src
                         129 --		-I../../../../../macro/gpu/davehd/user/inc
                         130 --		-I../../../../../macro/gpu/davehd/user/platform/d1mx/no_os
                         131 --		-I../../../../../macro/gpu/davehd/user/src
                         132 --		-I../../../../../macro/gpu/jcua/lib
                         133 --		-I../../../../../macro/gpu/jcua/src
                         134 --		-I../../../../../macro/i2c/riic/lib
                         135 --		-I../../../../../macro/i2c/riic/src
                         136 --		-I../../../../../macro/tick/lib -I../../../../../macro/tick/src
                         137 --		-I../../../../../macro/timer/ostm/lib
                         138 --		-I../../../../../macro/timer/ostm/src
                         139 --		-I../../../../../macro/timer/tauj/lib
                         140 --		-I../../../../../macro/timer/tauj/src
                         141 --		-I../../../../../macro/vdce/lib -I../../../../../macro/vdce/src
                         142 --		-I../../../../../macro/vo/ddb/lib
                         143 --		-I../../../../../macro/vo/ddb/src
                         144 --		-I../../../../../macro/vo/spea/lib
                         145 --		-I../../../../../macro/vo/spea/src
                         146 --		-I../../../../../macro/vo/vowe/lib
                         147 --		-I../../../../../macro/vo/vowe/src -I../../../../../macro/wm/lib
                         148 --		-I../../../../../macro/wm/src -I../../../../../macro/pwm/lib
                         149 --		-I../../../../../macro/i2c/riic/lib
                         150 --		-I../../../../../macro/reset/lib -I../../../../../macro/rscan/lib
                         151 --		-I../../../../../macro/uart/rlin3/lib
                         152 --		-I../../../../../macro/uart/rlin3/src
                         153 --		-I../../../../../device/d1x_common/macro_cfg/rlin3
                         154 --		-I../../../../../macro/stbc/lib
                         155 --		-I../../../../../app/gfx_apps/simple_draw/lib
                         156 --		-I../../../../../macro/adc/lib
                         157 --		-I../../../../../device/d1x_common/macro_cfg/adc7010 -G
                         158 --		--no_commons --no_implicit_include --prototype_errors
                         159 --		-DRENESAS_D1X -DR_DRW2D_OS_NO_OS -DR_DRW2D_SYS_DHD
                         160 --		-DUSED_CPU=RH850G3M -DUSE_BSP_GFX -DUSE_BSP_HMI -DUSE_BSP_STDIO
                         161 --		-DUSE_CDI -DUSE_CSISW -DUSE_DAVEHD -DUSE_DDB -DUSE_DRW2D
                         162 --		-DUSE_GFXBUS -DUSE_GPIO -DUSE_HYPB -DUSE_HYPDB -DUSE_JCUA
                         163 --		-DUSE_NFMABARE -DUSE_OCTA -DUSE_OCTACDB -DUSE_OSTM -DUSE_PBG
                         164 --		-DUSE_RIIC -DUSE_SFCDB -DUSE_SFMA -DUSE_SPEA -DUSE_TAUJ
                         165 --		-DUSE_TICK -DUSE_VDCE -DUSE_WM -DUSE_XBUS -DMAG -MD -Zuse1bit
                         166 --		-allocate_ep -cpu=rh850g3m -large_sda -list -no_callt -notda
                         167 --		-passsource -preprocess_assembly_files -registermode=22
                         168 --		-reserve_r2 --diag_warning 1 -object_dir=./obj -DUSE_VDCE_OPENLDI
                         169 --		-gnu99 -filetype.c ..\..\..\..\..\cdi\src\r_cdi_memory.c -o
                         170 --		.\obj\r_cdi_memory.o
                         171 --Source File:   ..\..\..\..\..\cdi\src\r_cdi_memory.c
                         172 --Directory:     

                                                                      Page 4
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         173 --		C:\git\rh850\src\app\gfx_apps\simple_draw\target\d1mx_mango_ghs
                         174 --Compile Date:  Tue Oct 16 19:48:56 2018
                         175 --Host OS:       Win32
                         176 --Version:       C-RH850 2014.1.7 RELEASE VERSION
                         177 --Release:       Compiler v2014.1.7
                         178 --Revision Date: Fri Sep 05 14:10:46 2014
                         179 --Release Date:  Fri Sep 05 14:44:23 2014
                         180 -- ecom  -g -w
                         181 
                         182 --1: /*
                         183 --2: ****************************************************************************
                         184 --3: PROJECT : CDI
                         185 --4: FILE    : $Id: r_cdi_memory.c 11006 2016-11-07 16:32:44Z michael.golczewski $
                         186 --5: ============================================================================ 
                         187 --6: DESCRIPTION
                         188 --7: Common Driver Interface
                         189 --8: ============================================================================
                         190 --9:                             C O P Y R I G H T
                         191 --10: ============================================================================
                         192 --11:                        Copyright (c) 2013 - 2014
                         193 --12:                                   by 
                         194 --13:                        Renesas Electronics (Europe) GmbH. 
                         195 --14:                            Arcadiastrasse 10
                         196 --15:                           D-40472 Duesseldorf
                         197 --16:                                Germany
                         198 --17:                           All rights reserved.
                         199 --18: ============================================================================
                         200 --19: Purpose: only for testing, not for mass production
                         201 --21: DISCLAIMER
                         202 --23: LICENSEE has read, understood and accepted the terms and conditions defined in
                         203 --24: the license agreement, especially the usage rights. In any case, it is
                         204 --25: LICENSEE's responsibility to make sure that any user of the software complies
                         205 --26: with the terms and conditions of the signed license agreement.
                         206 --28: SAMPLE CODE is not part of the licensed software, as such it must not be used in
                         207 --29: mass-production applications. It can only be used for evaluation and
                         208 --30: demonstration purposes at customer's premises listed in the signed license
                         209 --31: agreement.
                         210 --33: ****************************************************************************
                         211 --34: */
                         212 --36: /*******************************************************************************
                         213 --37:   Section: Includes
                         214 --38: */
                         215 --40: #include "r_typedefs.h"
                         216 --41: #include "r_cdi_api.h"
                         217 --42: #ifdef USE_ROS
                         218 --43: #include "r_os_api.h"
                         219 --44: #endif
                         220 --46: #ifdef MEM_DEBUG
                         221 --47: #include <stdio.h>
                         222 --48: #endif
                         223 --51: /*******************************************************************************
                         224 --52:   Section: Local Variables
                         225 --53: */
                         226 --54: /*******************************************************************************
                         227 --55:   Variable: locCpuHeapMng
                         228 --57:   Local CPU heap manager
                         229 --58:   This local variable is initialised once in the function <eeCdi_InitCpuHeapManager>
                         230 --59:   with the given parameters.
                         231 --60:   This function must be called when initialising the hardware.
                         232 --61:   
                         233 --62: */                         

                                                                      Page 5
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         234 --63: static r_cdi_HeapMng_t locCpuHeapMng;
                         235 --65: /*******************************************************************************
                         236 --66:   Variable: locVidHeapMng
                         237 --68:   Local video heap manager
                         238 --69:   This local variable is initialised once in the function <eeCdi_InitVidHeapManager>
                         239 --70:   with the given parameters.
                         240 --71:   This function must be called when initialising the hardware.
                         241 --72:   
                         242 --73: */                         
                         243 --74: static r_cdi_HeapMng_t locVidHeapMng;
                         244 --76: /*******************************************************************************
                         245 --77:   Variable: locSpecialModeHeapMng
                         246 --79:   Local SPECIAL_MODE heap manager
                         247 --80:     SPECIAL_MODE is a special type of video memory. It is currently only used in DK4-H (-> VMEM).
                         248 --81:     If you use SPECIAL_MODE, make sure that your device supports this type of memory.
                         249 --82:     
                         250 --83:   This local variable is initialised once in the function <eeCdi_InitSpecialModeHeapManager>
                         251 --84:   with the given parameters.
                         252 --85:   This function must be called when initialising the hardware.
                         253 --86:   
                         254 --87: */                         
                         255 --88: static r_cdi_HeapMng_t locSpecialModeHeapMng;
                         256 --90: /*******************************************************************************
                         257 --91:   Variable: locNextCpuBlockIndex
                         258 --93:   
                         259 --94:   
                         260 --95: */                         
                         261 --96: static r_cdi_HpBlkIndex_t locNextCpuBlockIndex = 0u;
                         262 --98: /*******************************************************************************
                         263 --99:   Variable: locNextVidBlockIndex
                         264 --101:   
                         265 --102:   
                         266 --103: */                         
                         267 --104: static r_cdi_HpBlkIndex_t locNextVidBlockIndex = 0u;
                         268 --106: /*******************************************************************************
                         269 --107:   Variable: locNextSpecialModeBlockIndex
                         270 --109:   
                         271 --110:   
                         272 --111: */                         
                         273 --112: static r_cdi_HpBlkIndex_t locNextSpecialModeBlockIndex = 0u;
                         274 --114: #ifdef USE_ROS
                         275 --115: static R_OS_ThreadMutex_t locCdiMemLock;  
                         276 --116: #endif
                         277 --118: static uint32_t locFreeVideoBlocks = 0u;
                         278 --119: static uint32_t locFreeCPUBlocks = 0u;
                         279 --120: static uint32_t locFreeSpecialModeBlocks = 0u;
                         280 --121: static uint32_t locNextCPUFreeBlockNb = 0u;
                         281 --122: static uint32_t locNextVideoFreeBlockNb = 0u;
                         282 --123: static uint32_t locNextSpecialModeFreeBlockNb = 0u;
                         283 --126: /*******************************************************************************
                         284 --127:   Section: Global API Memory Controller Functions
                         285 --128: */
                         286 --130: /*******************************************************************************
                         287 --131:  Function: R_CDI_InitHeapManager
                         288 --132: */
                         289 --133: uint32_t R_CDI_InitHeapManager(
                         290 	.text
                         291 ..bof.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory...43.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs..5BC5D028..0::
                         292 	.align	2
                         293 	.global	_R_CDI_InitHeapManager
                         294 _R_CDI_InitHeapManager:

                                                                      Page 6
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000000 8007c170        295 	prepare	{r25,r26,r27,r28,r29},0
00000004 06d8            296 	mov	r6,r27
00000006 07f0            297 	mov	r7,ep
00000008 0808            298 	mov	r8,r1
0000000a 0970            299 	mov	r9,r14
0000000c 23671500        300 	ld.w	20[sp],r12
                         301 --	    .bf
                         302 .LDW01:
                         303 --134:         uint32_t            HeapAddr,
                         304 --135:         r_cdi_Heap_t        *HeapMng, 
                         305 --136:         r_cdi_HpBlkIndex_t  *HeapIdxList, 
                         306 --137:         uint32_t             NbBlocks, 
                         307 --138:         uint32_t             BlkSize)
                         308 --139: {
                         309 --141:     uint32_t err = 0u;
00000010 00e2            310 	mov	0,r28
                         311 --142:     uint32_t index;
                         312 --143:     
                         313 --144:     /* If the pointer HeapIdxList is NULL, then the index list will be placed 
                         314 --145:        into the memory whose heap we are initializing just now */
                         315 --146:     if (0 == HeapIdxList)
00000012 e009            316 	cmp	zero,r1
00000014 ba15*           317 	bne	.L4
                         318 --147:     {
                         319 --	    .bs
                         320 .LDW11:
                         321 --148:         /* How much memory is required for the HeapIdxList */
                         322 --149:         const uint32_t HeapIdxListSize = 
                         323 --line149
                         324 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.1::
                         325 .LDWlin1:
00000016 0e68            326 	mov	r14,r13
00000018 c16a            327 	shl	1,r13
0000001a 0dd0            328 	mov	r13,r26
                         329 --150:                     sizeof(r_cdi_HpBlkIndex_t) * NbBlocks;
                         330 --151:         /* Size of the HeapIdxList in terms of Blocks (Rounded UP) */
                         331 --152:         const uint32_t HeapIdxListSizeBlks = 
0000001c 0c6effff        332 	addi	-1,r12,r13
00000020 da69            333 	add	r26,r13
00000022 0d50            334 	mov	r13,r10
00000024 ec57fe02        335 	divqu	r12,r10,zero
                         336 --153:                     (HeapIdxListSize + (BlkSize-1)) / BlkSize;
                         337 --154:         /* Number of Blocks left for normal CDI operation */
                         338 --155:         const uint32_t NbBlocksInternal = 
00000028 0e68            339 	mov	r14,r13
0000002a aa69            340 	sub	r10,r13
                         341 --156:                     NbBlocks - HeapIdxListSizeBlks;
                         342 --157:         /* Starting point of integrated HeapIdxList */
                         343 --158:         r_cdi_HpBlkIndex_t *HeapIdxListInternal = 
0000002c 0c58            344 	mov	r12,r11
0000002e ed5f2202        345 	mulu	r13,r11,zero
00000032 0be8            346 	mov	r11,r29
00000034 dbe9            347 	add	r27,r29
                         348 --159:                     (r_cdi_HpBlkIndex_t*)(HeapAddr + (BlkSize*NbBlocksInternal));
                         349 --160:         
                         350 --161:         /* Transfer new information to existing variables */
                         351 --162:         HeapIdxList = HeapIdxListInternal;
00000036 1d08            352 	mov	r29,r1
                         353 --163:         NbBlocks =    NbBlocksInternal;
00000038 0d70            354 	mov	r13,r14
                         355 --	    .es

                                                                      Page 7
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         356 .LDW21:
                         357 .L4:
                         358 --164:     }
                         359 --165:     
                         360 --166:     /* test if the pointers different than NULL */
                         361 --167:     if ((0 != NbBlocks) && (0 != HeapAddr)  && ( 0 != HeapIdxList) && ( 0 != HeapMng))
0000003a e071            362 	cmp	zero,r14
0000003c a21d*           363 	be	.L6
0000003e e0d9            364 	cmp	zero,r27
00000040 821d*           365 	be	.L6
00000042 e009            366 	cmp	zero,r1
00000044 e215*           367 	be	.L6
00000046 e0f1            368 	cmp	zero,ep
00000048 c215*           369 	be	.L6
                         370 --168:     {
                         371 --169:         HeapMng->BaseAddr        = HeapAddr;
                         372 --line169
                         373 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.2::
                         374 .LDWlin2:
0000004a 01dd            375 	sst.w	r27,0[ep]
                         376 --170:         HeapMng->NbOfBlock       = NbBlocks;
0000004c 0375            377 	sst.w	r14,4[ep]
                         378 --171:         HeapMng->BlockSize       = BlkSize;
0000004e 0565            379 	sst.w	r12,8[ep]
                         380 --172:         HeapMng->BlockIdxList    = HeapIdxList;
00000050 070d            381 	sst.w	r1,12[ep]
                         382 --173:         HeapMng->FreeBlocks      = NbBlocks;
00000052 8974            383 	sst.h	r14,18[ep]
                         384 --174:         HeapMng->NextFreeBlockNb = 0u;
00000054 8a04            385 	sst.h	zero,20[ep]
                         386 --175:         HeapMng->NextBlockIdx    = 0u;
00000056 8804            387 	sst.h	zero,16[ep]
                         388 --176:         /* Initialise the block list */
                         389 --177:         for (index = 0u; index < NbBlocks; index++)
00000058 005a            390 	mov	0,r11
0000005a d505*           391 	br	.L14
                         392 .L13:
                         393 --178:         {
                         394 --179:             *HeapIdxList = 0u;
                         395 --line179
                         396 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.3::
                         397 .LDWlin3:
0000005c 61070000        398 	st.h	zero,0[r1]
                         399 --180:             HeapIdxList++;
00000060 420a            400 	add	2,r1
00000062 415a            401 	add	1,r11
                         402 .L14:
00000064 ee59            403 	cmp	r14,r11
00000066 b1fd*           404 	bl	.L13
                         405 --181:         }
                         406 --182:         HeapMng->NextBlockIdx++;
                         407 --line182
                         408 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.4::
                         409 .LDWlin4:
00000068 78c8            410 	sld.hu	16[ep],r25
0000006a 41ca            411 	add	1,r25
0000006c 88cc            412 	sst.h	r25,16[ep]
0000006e a505*           413 	br	.L15
                         414 .L6:
                         415 --183:     }
                         416 --184:     else 

                                                                      Page 8
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         417 --185:     {
                         418 --186:         err = 1u;
                         419 --line186
                         420 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.5::
                         421 .LDWlin5:
00000070 01e2            422 	mov	1,r28
                         423 .L15:
                         424 --187:     }
                         425 --188: #ifdef USE_ROS
                         426 --189:     R_OS_ThreadMutexInit(&locCdiMemLock, 0);
                         427 --190: #endif
                         428 --191:     return err;
00000072 0000            429 	nop
                         430 --	    .ef
                         431 .LDW31:
00000074 1c50            432 	mov	r28,r10
00000076 4006df70        433 	dispose	0,{r25,r26,r27,r28,r29},[lp]
                         434 	.type	_R_CDI_InitHeapManager,@function
                         435 	.size	_R_CDI_InitHeapManager,.-_R_CDI_InitHeapManager
                         436 	.align	2
                         437 .LDW41:
                         438 --_err	r28	local
                         439 --_index	r11	local
                         440 --_HeapIdxListSize	r26	local
                         441 --_HeapIdxListSizeBlks	r10	local
                         442 --_NbBlocksInternal	r13	local
                         443 --_HeapIdxListInternal	r29	local
                         444 
                         445 --_HeapAddr	r27	param
                         446 --_HeapMng	ep	param
                         447 --_HeapIdxList	r1	param
                         448 --_NbBlocks	r14	param
                         449 --_BlkSize	r12	param
                         450 
                         451 	.section ".bss","awb"
                         452 .L138:
                         453 	.type	.L138,@object
                         454 	.size	.L138,0
                         455 	.data
                         456 	.text
                         457 
                         458 --192: }
                         459 
                         460 --195: /*******************************************************************************
                         461 --196:  Function: R_CDI_InitCpuHeapManager
                         462 --197: */
                         463 --198: uint32_t R_CDI_InitCpuHeapManager(
                         464 	.align	2
                         465 	.align	2
                         466 	.align	2
                         467 	.global	_R_CDI_InitCpuHeapManager
                         468 _R_CDI_InitCpuHeapManager:
0000007a 8007db000000*   469 	prepare	{r28,r29},0,_locCpuHeapMng
00000080 0000*
00000082 0650            470 	mov	r6,r10
00000084 0770            471 	mov	r7,r14
00000086 0858            472 	mov	r8,r11
00000088 09e8            473 	mov	r9,r29
0000008a 210600000000*   474 	mov	.L326,r1
                         475 --	    .bf
                         476 .LDW51:

                                                                      Page 9
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         477 --199:         uint32_t hpaddr, 
                         478 --200:         r_cdi_HpBlkIndex_t *hpblkindexlist, 
                         479 --201:         uint32_t nbblk, 
                         480 --202:         uint32_t blksize)
                         481 --203: {
                         482 --205:     uint32_t err = 0u;
00000090 0062            483 	mov	0,r12
                         484 --206:     uint32_t index;
                         485 --207:     /* test if the pointers different than NULL */
                         486 --208:     if ((0 != hpaddr)  && ( 0 != hpblkindexlist))
00000092 e051            487 	cmp	zero,r10
00000094 c21d*           488 	be	.L233
00000096 e071            489 	cmp	zero,r14
00000098 a21d*           490 	be	.L233
                         491 --209:     {
                         492 --210:         locCpuHeapMng.BaseAddr  = hpaddr;
                         493 --line210
                         494 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.6::
                         495 .LDWlin6:
0000009a 0155            496 	sst.w	r10,0[ep]
                         497 --211:         locCpuHeapMng.NbOfBlock = nbblk;
0000009c 035d            498 	sst.w	r11,4[ep]
                         499 --212:         locCpuHeapMng.BlockSize = blksize;
0000009e 05ed            500 	sst.w	r29,8[ep]
                         501 --213:         locCpuHeapMng.Type      = CPU;
000000a0 0705            502 	sst.w	zero,12[ep]
                         503 --214:         locCpuHeapMng.BlockIndexList = hpblkindexlist;
000000a2 0975            504 	sst.w	r14,16[ep]
                         505 --215:         locFreeCPUBlocks = nbblk;
000000a4 615f0500        506 	st.w	r11,4[r1]
                         507 --216:         locNextCPUFreeBlockNb = 0u;
000000a8 61070d00        508 	st.w	zero,12[r1]
                         509 --217:         /* Initialise the block list */
                         510 --218:         for (index = 0u; index < nbblk; index++)
000000ac 006a            511 	mov	0,r13
000000ae d505*           512 	br	.L239
                         513 .L238:
                         514 --219:         {
                         515 --220:             *hpblkindexlist = 0u;
                         516 --line220
                         517 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.7::
                         518 .LDWlin7:
000000b0 6e070000        519 	st.h	zero,0[r14]
                         520 --221:             hpblkindexlist++;
000000b4 4272            521 	add	2,r14
000000b6 416a            522 	add	1,r13
                         523 .L239:
000000b8 eb69            524 	cmp	r11,r13
000000ba b1fd*           525 	bl	.L238
                         526 --222:         }
                         527 --223:         locNextCpuBlockIndex++;
                         528 --line223
                         529 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.8::
                         530 .LDWlin8:
000000bc 21e61800        531 	movea	24,r1,r28
000000c0 e10f1900        532 	ld.hu	24[r1],r1
000000c4 410a            533 	add	1,r1
000000c6 7c0f0000        534 	st.h	r1,0[r28]
000000ca a505*           535 	br	.L240
                         536 .L233:
                         537 --224:     }

                                                                      Page 10
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         538 --225:     else 
                         539 --226:     {
                         540 --227:         err = 1u;
                         541 --line227
                         542 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.9::
                         543 .LDWlin9:
000000cc 0162            544 	mov	1,r12
                         545 .L240:
                         546 --228:     }
                         547 --229: #ifdef USE_ROS
                         548 --230:     R_OS_ThreadMutexInit(&locCdiMemLock, 0);
                         549 --231: #endif
                         550 --232:     return err;
000000ce 0c08            551 	mov	r12,r1
                         552 --	    .ef
                         553 .LDW61:
000000d0 0150            554 	mov	r1,r10
000000d2 4006df00        555 	dispose	0,{r28,r29},[lp]
                         556 	.type	_R_CDI_InitCpuHeapManager,@function
                         557 	.size	_R_CDI_InitCpuHeapManager,.-_R_CDI_InitCpuHeapManager
                         558 	.align	2
                         559 .LDW71:
                         560 --_err	r12	local
                         561 --_index	r13	local
                         562 
                         563 --_hpaddr	r10	param
                         564 --_hpblkindexlist	r14	param
                         565 --_nbblk	r11	param
                         566 --_blksize	r29	param
                         567 
                         568 	.data
                         569 	.align	4
                         570 .L326:
                         571 	.type	.L326,@object
                         572 	.size	.L326,0
                         573 	.global	_locFreeVideoBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         574 _locFreeVideoBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000000 00000000        575 _locFreeVideoBlocks:	.byte	0,0,0,0
                         576 	.type	_locFreeVideoBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         577 	.size	_locFreeVideoBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,4
                         578 	.type	_locFreeVideoBlocks,@object
                         579 	.size	_locFreeVideoBlocks,4
                         580 	.global	_locFreeCPUBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         581 _locFreeCPUBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000004 00000000        582 _locFreeCPUBlocks:	.byte	0,0,0,0
                         583 	.type	_locFreeCPUBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         584 	.size	_locFreeCPUBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,4
                         585 	.type	_locFreeCPUBlocks,@object
                         586 	.size	_locFreeCPUBlocks,4
                         587 	.global	_locFreeSpecialModeBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         588 _locFreeSpecialModeBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000008 00000000        589 _locFreeSpecialModeBlocks:	.byte	0,0,0,0
                         590 	.type	_locFreeSpecialModeBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         591 	.size	_locFreeSpecialModeBlocks..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,4
                         592 	.type	_locFreeSpecialModeBlocks,@object
                         593 	.size	_locFreeSpecialModeBlocks,4
                         594 	.global	_locNextCPUFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         595 _locNextCPUFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
0000000c 00000000        596 _locNextCPUFreeBlockNb:	.byte	0,0,0,0
                         597 	.type	_locNextCPUFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         598 	.size	_locNextCPUFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,4

                                                                      Page 11
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         599 	.type	_locNextCPUFreeBlockNb,@object
                         600 	.size	_locNextCPUFreeBlockNb,4
                         601 	.global	_locNextVideoFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         602 _locNextVideoFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000010 00000000        603 _locNextVideoFreeBlockNb:	.byte	0,0,0,0
                         604 	.type	_locNextVideoFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         605 	.size	_locNextVideoFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,4
                         606 	.type	_locNextVideoFreeBlockNb,@object
                         607 	.size	_locNextVideoFreeBlockNb,4
                         608 	.global	_locNextSpecialModeFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         609 _locNextSpecialModeFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000014 00000000        610 _locNextSpecialModeFreeBlockNb:	.byte	0,0,0,0
                         611 	.type	_locNextSpecialModeFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         612 	.size	_locNextSpecialModeFreeBlockNb..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,4
                         613 	.type	_locNextSpecialModeFreeBlockNb,@object
                         614 	.size	_locNextSpecialModeFreeBlockNb,4
                         615 	.global	_locNextCpuBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         616 _locNextCpuBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000018 0000            617 _locNextCpuBlockIndex:	.byte	0,0
                         618 	.type	_locNextCpuBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         619 	.size	_locNextCpuBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,2
                         620 	.type	_locNextCpuBlockIndex,@object
                         621 	.size	_locNextCpuBlockIndex,2
                         622 	.global	_locNextVidBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         623 _locNextVidBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
0000001a 0000            624 _locNextVidBlockIndex:	.byte	0,0
                         625 	.type	_locNextVidBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         626 	.size	_locNextVidBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,2
                         627 	.type	_locNextVidBlockIndex,@object
                         628 	.size	_locNextVidBlockIndex,2
                         629 	.global	_locNextSpecialModeBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         630 _locNextSpecialModeBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
0000001c 0000            631 _locNextSpecialModeBlockIndex:	.byte	0,0
                         632 	.type	_locNextSpecialModeBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         633 	.size	_locNextSpecialModeBlockIndex..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,2
                         634 	.type	_locNextSpecialModeBlockIndex,@object
                         635 	.size	_locNextSpecialModeBlockIndex,2
                         636 	.section ".bss","awb"
                         637 	.align	4
                         638 	.global	_locCpuHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         639 _locCpuHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000000 000000000000    640 _locCpuHeapMng:	.space	20
00000006 000000000000 
0000000c 000000000000 
00000012 0000 
                         641 	.type	_locCpuHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         642 	.size	_locCpuHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,20
                         643 	.type	_locCpuHeapMng,@object
                         644 	.size	_locCpuHeapMng,20
                         645 	.global	_locVidHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         646 _locVidHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:
00000014 000000000000    647 _locVidHeapMng:	.space	20
0000001a 000000000000 
00000020 000000000000 
00000026 0000 
                         648 	.type	_locVidHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         649 	.size	_locVidHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,20
                         650 	.type	_locVidHeapMng,@object
                         651 	.size	_locVidHeapMng,20
                         652 	.global	_locSpecialModeHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.
                         653 _locSpecialModeHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.:

                                                                      Page 12
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000028 000000000000    654 _locSpecialModeHeapMng:	.space	20
0000002e 000000000000 
00000034 000000000000 
0000003a 0000 
                         655 	.type	_locSpecialModeHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,@object
                         656 	.size	_locSpecialModeHeapMng..C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.,20
                         657 	.type	_locSpecialModeHeapMng,@object
                         658 	.size	_locSpecialModeHeapMng,20
                         659 	.data
                         660 	.text
                         661 
                         662 --233: }
                         663 
                         664 --235: /*******************************************************************************
                         665 --236:  Function: R_CDI_InitVidHeapManager
                         666 --237: */
                         667 --239: uint32_t R_CDI_InitVidHeapManager(
                         668 	.align	2
                         669 	.align	2
                         670 	.global	_R_CDI_InitVidHeapManager
                         671 _R_CDI_InitVidHeapManager:
000000d6 8007db000000*   672 	prepare	{r28,r29},0,_locVidHeapMng
000000dc 0000*
000000de 0650            673 	mov	r6,r10
000000e0 0770            674 	mov	r7,r14
000000e2 0858            675 	mov	r8,r11
000000e4 09e8            676 	mov	r9,r29
000000e6 210600000000*   677 	mov	_locFreeVideoBlocks,r1
                         678 --	    .bf
                         679 .LDW81:
                         680 --240:         uint32_t hpaddr, 
                         681 --241:         r_cdi_HpBlkIndex_t * hpblkindexlist, 
                         682 --242:         uint32_t nbblock, 
                         683 --243:         uint32_t blksize)
                         684 --244: {
                         685 --246:     uint32_t err = 0u;
000000ec 0062            686 	mov	0,r12
                         687 --247:     uint32_t index;
                         688 --248:     /* test if the pointers different than NULL */
                         689 --249:     if ((0 != hpaddr)  && ( 0 != hpblkindexlist))
000000ee e051            690 	cmp	zero,r10
000000f0 8225*           691 	be	.L394
000000f2 e071            692 	cmp	zero,r14
000000f4 e21d*           693 	be	.L394
                         694 --250:     {
                         695 --251:         /* Initialise the heap manager */
                         696 --252:         locVidHeapMng.BaseAddr  = hpaddr;
                         697 --line252
                         698 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.10::
                         699 .LDWlin10:
000000f6 0155            700 	sst.w	r10,0[ep]
                         701 --253:         locVidHeapMng.NbOfBlock = nbblock;
000000f8 035d            702 	sst.w	r11,4[ep]
                         703 --254:         locVidHeapMng.BlockSize = blksize;
000000fa 05ed            704 	sst.w	r29,8[ep]
                         705 --255:         locVidHeapMng.Type      = VIDEO;
000000fc 016a            706 	mov	1,r13
000000fe 076d            707 	sst.w	r13,12[ep]
                         708 --256:         locFreeVideoBlocks      = nbblock;
00000100 2d0600000000*   709 	mov	_locFreeVideoBlocks,r13
00000106 6d5f0100        710 	st.w	r11,0[r13]

                                                                      Page 13
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         711 --257:         locNextVideoFreeBlockNb = 0u;
0000010a 61071100        712 	st.w	zero,16[r1]
                         713 --258:         locVidHeapMng.BlockIndexList = hpblkindexlist;
0000010e 0975            714 	sst.w	r14,16[ep]
                         715 --259:         /* Initialise the block list */
                         716 --260:         for (index = 0u; index < nbblock; index++)
00000110 006a            717 	mov	0,r13
00000112 d505*           718 	br	.L400
                         719 .L399:
                         720 --261:         {
                         721 --262:             *hpblkindexlist = 0u;
                         722 --line262
                         723 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.11::
                         724 .LDWlin11:
00000114 6e070000        725 	st.h	zero,0[r14]
                         726 --263:             hpblkindexlist++;
00000118 4272            727 	add	2,r14
0000011a 416a            728 	add	1,r13
                         729 .L400:
0000011c eb69            730 	cmp	r11,r13
0000011e b1fd*           731 	bl	.L399
                         732 --264:         }
                         733 --265:         locNextVidBlockIndex++; 
                         734 --line265
                         735 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.12::
                         736 .LDWlin12:
00000120 21e61a00        737 	movea	26,r1,r28
00000124 e10f1b00        738 	ld.hu	26[r1],r1
00000128 410a            739 	add	1,r1
0000012a 7c0f0000        740 	st.h	r1,0[r28]
0000012e a505*           741 	br	.L401
                         742 .L394:
                         743 --266:     }
                         744 --267:     else 
                         745 --268:     {
                         746 --269:         err = 1u;
                         747 --line269
                         748 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.13::
                         749 .LDWlin13:
00000130 0162            750 	mov	1,r12
                         751 .L401:
                         752 --270:     }
                         753 --271:     return err;
00000132 0c08            754 	mov	r12,r1
                         755 --	    .ef
                         756 .LDW91:
00000134 0150            757 	mov	r1,r10
00000136 4006df00        758 	dispose	0,{r28,r29},[lp]
                         759 	.type	_R_CDI_InitVidHeapManager,@function
                         760 	.size	_R_CDI_InitVidHeapManager,.-_R_CDI_InitVidHeapManager
                         761 	.align	2
                         762 .LDW02:
                         763 --_err	r12	local
                         764 --_index	r13	local
                         765 
                         766 --_hpaddr	r10	param
                         767 --_hpblkindexlist	r14	param
                         768 --_nbblock	r11	param
                         769 --_blksize	r29	param
                         770 
                         771 	.data

                                                                      Page 14
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         772 	.text
                         773 
                         774 --272: }
                         775 
                         776 --274: /*******************************************************************************
                         777 --275:  Function: R_CDI_InitSmHeapManager
                         778 --276: */
                         779 --278: uint32_t R_CDI_InitSmHeapManager(
                         780 	.align	2
                         781 	.align	2
                         782 	.global	_R_CDI_InitSmHeapManager
                         783 _R_CDI_InitSmHeapManager:
0000013a 8007db000000*   784 	prepare	{r28,r29},0,_locSpecialModeHeapMng
00000140 0000*
00000142 0650            785 	mov	r6,r10
00000144 0770            786 	mov	r7,r14
00000146 0858            787 	mov	r8,r11
00000148 09e8            788 	mov	r9,r29
0000014a 210600000000*   789 	mov	_locFreeSpecialModeBlocks,r1
                         790 --	    .bf
                         791 .LDW12:
                         792 --279:         uint32_t hpaddr, 
                         793 --280:         r_cdi_HpBlkIndex_t * hpblkindexlist, 
                         794 --281:         uint32_t nbblock, 
                         795 --282:         uint32_t blksize)
                         796 --283: {
                         797 --285:     uint32_t err = 0u;
00000150 0062            798 	mov	0,r12
                         799 --286:     uint32_t index;
                         800 --287:     /* test if the pointers different than NULL */
                         801 --288:     if ((0 != hpaddr)  && ( 0 != hpblkindexlist))
00000152 e051            802 	cmp	zero,r10
00000154 8225*           803 	be	.L569
00000156 e071            804 	cmp	zero,r14
00000158 e21d*           805 	be	.L569
                         806 --289:     {
                         807 --290:         /* Initialise the heap manager */
                         808 --291:         locSpecialModeHeapMng.BaseAddr  = hpaddr;
                         809 --line291
                         810 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.14::
                         811 .LDWlin14:
0000015a 0155            812 	sst.w	r10,0[ep]
                         813 --292:         locSpecialModeHeapMng.NbOfBlock = nbblock;
0000015c 035d            814 	sst.w	r11,4[ep]
                         815 --293:         locSpecialModeHeapMng.BlockSize = blksize;
0000015e 05ed            816 	sst.w	r29,8[ep]
                         817 --294:         locSpecialModeHeapMng.Type      = SPECIAL_MODE;
00000160 026a            818 	mov	2,r13
00000162 076d            819 	sst.w	r13,12[ep]
                         820 --295:         locFreeSpecialModeBlocks        = nbblock;
00000164 2d0600000000*   821 	mov	_locFreeSpecialModeBlocks,r13
0000016a 6d5f0100        822 	st.w	r11,0[r13]
                         823 --296:         locSpecialModeHeapMng.BlockIndexList = hpblkindexlist;
0000016e 0975            824 	sst.w	r14,16[ep]
                         825 --297:         locNextSpecialModeFreeBlockNb = 0u;
00000170 61070d00        826 	st.w	zero,12[r1]
                         827 --298:         /* Initialise the block list */
                         828 --299:         for (index = 0u; index < nbblock; index++)
00000174 006a            829 	mov	0,r13
00000176 d505*           830 	br	.L575
                         831 .L574:

                                                                      Page 15
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         832 --300:         {
                         833 --301:             *hpblkindexlist = 0u;
                         834 --line301
                         835 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.15::
                         836 .LDWlin15:
00000178 6e070000        837 	st.h	zero,0[r14]
                         838 --302:             hpblkindexlist++;
0000017c 4272            839 	add	2,r14
0000017e 416a            840 	add	1,r13
                         841 .L575:
00000180 eb69            842 	cmp	r11,r13
00000182 b1fd*           843 	bl	.L574
                         844 --303:         }
                         845 --304:         locNextSpecialModeBlockIndex++; 
                         846 --line304
                         847 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.16::
                         848 .LDWlin16:
00000184 21e61400        849 	movea	20,r1,r28
00000188 e10f1500        850 	ld.hu	20[r1],r1
0000018c 410a            851 	add	1,r1
0000018e 7c0f0000        852 	st.h	r1,0[r28]
00000192 a505*           853 	br	.L576
                         854 .L569:
                         855 --305:     }
                         856 --306:     else 
                         857 --307:     {
                         858 --308:         err = 1u;
                         859 --line308
                         860 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.17::
                         861 .LDWlin17:
00000194 0162            862 	mov	1,r12
                         863 .L576:
                         864 --309:     }
                         865 --310:     return err;
00000196 0c08            866 	mov	r12,r1
                         867 --	    .ef
                         868 .LDW22:
00000198 0150            869 	mov	r1,r10
0000019a 4006df00        870 	dispose	0,{r28,r29},[lp]
                         871 	.type	_R_CDI_InitSmHeapManager,@function
                         872 	.size	_R_CDI_InitSmHeapManager,.-_R_CDI_InitSmHeapManager
                         873 	.align	2
                         874 .LDW32:
                         875 --_err	r12	local
                         876 --_index	r13	local
                         877 
                         878 --_hpaddr	r10	param
                         879 --_hpblkindexlist	r14	param
                         880 --_nbblock	r11	param
                         881 --_blksize	r29	param
                         882 
                         883 	.data
                         884 	.text
                         885 
                         886 --311: }
                         887 
                         888 --313: /*******************************************************************************
                         889 --314:  Function: R_CDI_HeapAlloc
                         890 --315: */
                         891 --316: uint32_t R_CDI_HeapAlloc(uint32_t size, r_cdi_HpType_t type)
                         892 	.align	2

                                                                      Page 16
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         893 	.align	2
                         894 	.global	_R_CDI_HeapAlloc
                         895 _R_CDI_HeapAlloc:
0000019e 8c07e170        896 	prepare	{r25,r26,r27,r28,r29,r31},6
000001a2 63371100        897 	st.w	r6,16[sp]
000001a6 07c8            898 	mov	r7,r25
000001a8 210600000000*   899 	mov	_locFreeVideoBlocks,r1
                         900 --	    .bf
                         901 .LDW42:
                         902 --317: {
                         903 --318:     uint32_t addr = 1u;
000001ae 0172            904 	mov	1,r14
                         905 --319:     uint32_t allocnbblk = 0u;
000001b0 00ea            906 	mov	0,r29
                         907 --320:     uint32_t adjfreeblk = 0u;
000001b2 006a            908 	mov	0,r13
                         909 --321:     int32_t tmp;
                         910 --322:     uint32_t i;
                         911 --323:     r_cdi_HeapMng_t *lochpmng;
                         912 --324:     r_cdi_HpBlkIndex_t   *locblkindexlist;
                         913 --325:     r_cdi_HpBlkIndex_t   startblk;
                         914 --326:     r_cdi_HpBlkIndex_t   *currentindex;
                         915 --327:     uint32_t  *freeCount;
                         916 --328:     uint32_t  *nextBlock;
                         917 --329:     uint8_t leave = 0u; 
000001b4 0042            918 	mov	0,r8
                         919 --330:     r_cdi_HpBlkIndex_t prevBlkIndex = 0;
000001b6 00da            920 	mov	0,r27
                         921 --331:     r_cdi_HpBlkIndex_t nextBlkIndex = 0;
000001b8 00d2            922 	mov	0,r26
                         923 --333:     
                         924 --334: #ifdef USE_ROS
                         925 --335:     R_OS_ThreadMutexLock(&locCdiMemLock);
                         926 --336: #endif
                         927 --337:     /* Check memory type and get the pointer to the corresponding heap manager.*/
                         928 --338:     /* if the type is incorrect then 0 is returned */
                         929 --339:     if((type == CPU) && (0 != locCpuHeapMng.BaseAddr))
000001ba e0c9            930 	cmp	zero,r25
000001bc aa15*           931 	bne	.L729
000001be 2c0600000000*   932 	mov	_locCpuHeapMng,r12
000001c4 2c670100        933 	ld.w	0[r12],r12
000001c8 e061            934 	cmp	zero,r12
000001ca b20d*           935 	be	.L729
                         936 --340:     {
                         937 --341:         lochpmng   = &locCpuHeapMng;
                         938 --line341
                         939 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.18::
                         940 .LDWlin18:
000001cc 3e0600000000*   941 	mov	_locCpuHeapMng,ep
                         942 --342:         currentindex = &locNextCpuBlockIndex;
000001d2 21661800        943 	movea	24,r1,r12
                         944 --343:         freeCount = &locFreeCPUBlocks;
000001d6 21560400        945 	movea	4,r1,r10
                         946 --344:         nextBlock = &locNextCPUFreeBlockNb;
000001da 214e0c00        947 	movea	12,r1,r9
000001de 952d*           948 	br	.L732
                         949 .L729:
                         950 --345:     } 
                         951 --346:     else if((type == SPECIAL_MODE) && (0 != locSpecialModeHeapMng.BaseAddr))
                         952 --line346
                         953 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.19::

                                                                      Page 17
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                         954 .LDWlin19:
000001e0 62ca            955 	cmp	2,r25
000001e2 aa15*           956 	bne	.L733
000001e4 2c0600000000*   957 	mov	_locSpecialModeHeapMng,r12
000001ea 2c670100        958 	ld.w	0[r12],r12
000001ee e061            959 	cmp	zero,r12
000001f0 b20d*           960 	be	.L733
                         961 --347:     {
                         962 --348:         lochpmng = &locSpecialModeHeapMng;
                         963 --line348
                         964 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.20::
                         965 .LDWlin20:
000001f2 3e0600000000*   966 	mov	_locSpecialModeHeapMng,ep
                         967 --349:         currentindex = &locNextSpecialModeBlockIndex;
000001f8 21661c00        968 	movea	28,r1,r12
                         969 --350:         freeCount = &locFreeSpecialModeBlocks;  
000001fc 21560800        970 	movea	8,r1,r10
                         971 --351:         nextBlock = &locNextSpecialModeFreeBlockNb; 
00000200 214e1400        972 	movea	20,r1,r9
00000204 e515*           973 	br	.L732
                         974 .L733:
                         975 --352:     }
                         976 --353:     else 
                         977 --354:     {
                         978 --355:         if((type == VIDEO) && (0 != locVidHeapMng.BaseAddr) )
                         979 --line355
                         980 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.21::
                         981 .LDWlin21:
00000206 61ca            982 	cmp	1,r25
00000208 ba15*           983 	bne	.L737
0000020a 2c0600000000*   984 	mov	_locVidHeapMng,r12
00000210 2c670100        985 	ld.w	0[r12],r12
00000214 e061            986 	cmp	zero,r12
00000216 c20d*           987 	be	.L737
                         988 --356:         {
                         989 --357:             lochpmng = &locVidHeapMng;
                         990 --line357
                         991 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.22::
                         992 .LDWlin22:
00000218 3e0600000000*   993 	mov	_locVidHeapMng,ep
                         994 --358:             currentindex = &locNextVidBlockIndex;
0000021e 21661a00        995 	movea	26,r1,r12
                         996 --359:             freeCount = &locFreeVideoBlocks;
00000222 2a0600000000*   997 	mov	_locFreeVideoBlocks,r10
                         998 --360:             nextBlock = &locNextVideoFreeBlockNb;
00000228 214e1000        999 	movea	16,r1,r9
0000022c a505*          1000 	br	.L732
                        1001 .L737:
                        1002 --361:         } 
                        1003 --362:         else 
                        1004 --363:         {
                        1005 --364:             addr = 0u;
                        1006 --line364
                        1007 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.23::
                        1008 .LDWlin23:
0000022e 0072           1009 	mov	0,r14
                        1010 .L732:
                        1011 --365:         }
                        1012 --366:     }
                        1013 --367:     if((*freeCount) <= 0)
00000230 2a0f0100       1014 	ld.w	0[r10],r1

                                                                      Page 18
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000234 e009           1015 	cmp	zero,r1
00000236 ab05*          1016 	bh	.L741
                        1017 --368:     {
                        1018 --369:         addr = 0u;
                        1019 --line369
                        1020 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.24::
                        1021 .LDWlin24:
00000238 0072           1022 	mov	0,r14
                        1023 .L741:
                        1024 --370:     }
                        1025 --371:     
                        1026 --372:     /* Calculate number of required blocks*/
                        1027 --373:     if (addr != 0u)
0000023a e071           1028 	cmp	zero,r14
0000023c e20d*          1029 	be	.L743
                        1030 --374:     {
                        1031 --375:         
                        1032 --376:         tmp = size;
                        1033 --line376
                        1034 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.25::
                        1035 .LDWlin25:
0000023e 23e71100       1036 	ld.w	16[sp],r28
                        1037 --377:         /* calculate number of blocks needed*/
                        1038 --378:         while (tmp > 0)
00000242 c505*          1039 	br	.L745
                        1040 .L747:
                        1041 --379:         {
                        1042 --380:             allocnbblk++;
                        1043 --line380
                        1044 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.26::
                        1045 .LDWlin26:
00000244 41ea           1046 	add	1,r29
                        1047 --381:             tmp -= lochpmng->BlockSize;;
00000246 040d           1048 	sld.w	8[ep],r1
00000248 a1e1           1049 	sub	r1,r28
                        1050 .L745:
0000024a e0e1           1051 	cmp	zero,r28
0000024c cffd*          1052 	bgt	.L747
                        1053 --382:         }
                        1054 --383:         /* if not enough blocks left */
                        1055 --384:         if((*freeCount) <= allocnbblk)
                        1056 --line384
                        1057 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.27::
                        1058 .LDWlin27:
0000024e 2a0f0100       1059 	ld.w	0[r10],r1
00000252 fd09           1060 	cmp	r29,r1
00000254 ab05*          1061 	bh	.L743
                        1062 --385:         {
                        1063 --386:             addr = 0u;
                        1064 --line386
                        1065 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.28::
                        1066 .LDWlin28:
00000256 0072           1067 	mov	0,r14
                        1068 .L743:
                        1069 --387:         }
                        1070 --388:     }
                        1071 --389:     
                        1072 --390:     if(addr != 0u) 
00000258 e071           1073 	cmp	zero,r14
0000025a e207cb02*      1074 	be	.L750
                        1075 --391:     {

                                                                      Page 19
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        1076 --392:         /* Search for n free adjacent blocks */
                        1077 --393:         locblkindexlist = lochpmng->BlockIndexList;
                        1078 --line393
                        1079 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.29::
                        1080 .LDWlin29:
0000025e 08fd           1081 	sld.w	16[ep],lp
                        1082 --394:         addr = 0u;
00000260 0072           1083 	mov	0,r14
                        1084 --395:         i = *nextBlock;
00000262 295f0100       1085 	ld.w	0[r9],r11
                        1086 --396:         while (i != ((*nextBlock) - 1)) 
00000266 8007a402*      1087 	br	.L752
                        1088 .L754:
                        1089 --397:         {
                        1090 --398:             if (*nextBlock == 0u) 
                        1091 --line398
                        1092 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.30::
                        1093 .LDWlin30:
0000026a 5c1a           1094 	add	-4,sp
0000026c 63ff0100       1095 	st.w	lp,0[sp]
00000270 29ff0100       1096 	ld.w	0[r9],lp
00000274 e0f9           1097 	cmp	zero,lp
00000276 23ff0100       1098 	ld.w	0[sp],lp
0000027a 231e0400       1099 	movea	4,sp,sp
0000027e da0d*          1100 	bne	.L755
                        1101 --399:             {
                        1102 --400:                 if (i == (lochpmng->NbOfBlock - 1)) 
                        1103 --line400
                        1104 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.31::
                        1105 .LDWlin31:
00000280 5c1a           1106 	add	-4,sp
00000282 63ff0100       1107 	st.w	lp,0[sp]
00000286 02fd           1108 	sld.w	4[ep],lp
00000288 5ffa           1109 	add	-1,lp
0000028a ff59           1110 	cmp	lp,r11
0000028c 23ff0100       1111 	ld.w	0[sp],lp
00000290 231e0400       1112 	movea	4,sp,sp
00000294 aa05*          1113 	bne	.L755
                        1114 --401:                 {
                        1115 --402:                     leave = 1u; 
                        1116 --line402
                        1117 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.32::
                        1118 .LDWlin32:
00000296 0142           1119 	mov	1,r8
                        1120 .L755:
                        1121 --403:                 }
                        1122 --404:             }
                        1123 --405:             if (0u == leave) 
00000298 e041           1124 	cmp	zero,r8
0000029a ea076b02*      1125 	bne	.L759
                        1126 --406:             {
                        1127 --407:                 if (*(locblkindexlist + i ) == 0u) 
                        1128 --line407
                        1129 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.33::
                        1130 .LDWlin33:
0000029e 635f1500       1131 	st.w	r11,20[sp]
000002a2 5c1a           1132 	add	-4,sp
000002a4 63ff0100       1133 	st.w	lp,0[sp]
000002a8 23ff1900       1134 	ld.w	24[sp],lp
000002ac c1fa           1135 	shl	1,lp
000002ae 63ff1900       1136 	st.w	lp,24[sp]

                                                                      Page 20
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
000002b2 23ff0100       1137 	ld.w	0[sp],lp
000002b6 441a           1138 	add	4,sp
000002b8 fe4760f9       1139 	pushsp	ep-lp
000002bc 23f71d00       1140 	ld.w	28[sp],ep
000002c0 dff1           1141 	add	lp,ep
000002c2 70f8           1142 	sld.hu	0[ep],lp
000002c4 e0f9           1143 	cmp	zero,lp
000002c6 fe6760f9       1144 	popsp	ep-lp
000002ca fa05*          1145 	bne	.L761
                        1146 --408:                 {
                        1147 --409:                     if (adjfreeblk == 0u) 
                        1148 --line409
                        1149 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.34::
                        1150 .LDWlin34:
000002cc e069           1151 	cmp	zero,r13
000002ce ba05*          1152 	bne	.L763
                        1153 --410:                     {
                        1154 --411:                         startblk = i;
                        1155 --line411
                        1156 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.35::
                        1157 .LDWlin35:
000002d0 cb0effff       1158 	andi	65535,r11,r1
                        1159 .L763:
                        1160 --412:                     }
                        1161 --413:                     adjfreeblk++;
000002d4 416a           1162 	add	1,r13
000002d6 b505*          1163 	br	.L765
                        1164 .L761:
                        1165 --414:                 } 
                        1166 --415:                 else 
                        1167 --416:                 {
                        1168 --417:                     adjfreeblk = 0u;
                        1169 --line417
                        1170 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.36::
                        1171 .LDWlin36:
000002d8 006a           1172 	mov	0,r13
                        1173 --418:                     startblk   = 0u;
000002da 000a           1174 	mov	0,r1
                        1175 .L765:
                        1176 --419:                 }
                        1177 --420:     
                        1178 --421:                 /* When n free adjacent block are found, all blocks' status are set to used */
                        1179 --422:                 /* Start address is then returned */
                        1180 --423:                 if (adjfreeblk == allocnbblk) 
000002dc fd69           1181 	cmp	r29,r13
000002de ea07ed01*      1182 	bne	.L766
                        1183 --424:                 {
                        1184 --425:                     /* If there are blocks before and/or after the current block to be allocated,
                        1185 --426:                        check their indices and adapt the current block index if necessary. */
                        1186 --427:                     /* We don't need to check for a previous block, if we are at the start of the list */
                        1187 --428:                     if (startblk > 0)
                        1188 --line428
                        1189 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.37::
                        1190 .LDWlin37:
000002e2 e009           1191 	cmp	zero,r1
000002e4 a315*          1192 	bnh	.L768
                        1193 --429:                     {
                        1194 --430:                         prevBlkIndex = *(lochpmng->BlockIndexList + (startblk - 1));
                        1195 --line430
                        1196 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.38::
                        1197 .LDWlin38:

                                                                      Page 21
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
000002e6 01deffff       1198 	addi	-1,r1,r27
000002ea c1da           1199 	shl	1,r27
000002ec 63df0d00       1200 	st.w	r27,12[sp]
000002f0 08dd           1201 	sld.w	16[ep],r27
000002f2 5c1a           1202 	add	-4,sp
000002f4 63ff0100       1203 	st.w	lp,0[sp]
000002f8 23ff1100       1204 	ld.w	16[sp],lp
000002fc dbf9           1205 	add	r27,lp
000002fe ffdf0100       1206 	ld.hu	0[lp],r27
00000302 23ff0100       1207 	ld.w	0[sp],lp
00000306 441a           1208 	add	4,sp
                        1209 .L768:
                        1210 --431:                     }
                        1211 --432:                     /* We don't need to check for a next block, if we are at the end of the list */
                        1212 --433:                     if ((startblk + adjfreeblk) < lochpmng->NbOfBlock)
00000308 636f0d00       1213 	st.w	r13,12[sp]
0000030c 5c1a           1214 	add	-4,sp
0000030e 63ff0100       1215 	st.w	lp,0[sp]
00000312 23ff1100       1216 	ld.w	16[sp],lp
00000316 c1f9           1217 	add	r1,lp
00000318 63ff1100       1218 	st.w	lp,16[sp]
0000031c 02fd           1219 	sld.w	4[ep],lp
0000031e 5c1a           1220 	add	-4,sp
00000320 63f70100       1221 	st.w	ep,0[sp]
00000324 23f71500       1222 	ld.w	20[sp],ep
00000328 fff1           1223 	cmp	lp,ep
0000032a 23f70100       1224 	ld.w	0[sp],ep
0000032e 231e0400       1225 	movea	4,sp,sp
00000332 23ff0100       1226 	ld.w	0[sp],lp
00000336 231e0400       1227 	movea	4,sp,sp
0000033a a915*          1228 	bnl	.L770
                        1229 --434:                     {
                        1230 --435:                         nextBlkIndex = *(lochpmng->BlockIndexList + (startblk + adjfreeblk));
                        1231 --line435
                        1232 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.39::
                        1233 .LDWlin39:
0000033c 0dd0           1234 	mov	r13,r26
0000033e c1d1           1235 	add	r1,r26
00000340 c1d2           1236 	shl	1,r26
00000342 63d70d00       1237 	st.w	r26,12[sp]
00000346 08d5           1238 	sld.w	16[ep],r26
00000348 5c1a           1239 	add	-4,sp
0000034a 63ff0100       1240 	st.w	lp,0[sp]
0000034e 23ff1100       1241 	ld.w	16[sp],lp
00000352 daf9           1242 	add	r26,lp
00000354 ffd70100       1243 	ld.hu	0[lp],r26
00000358 23ff0100       1244 	ld.w	0[sp],lp
0000035c 441a           1245 	add	4,sp
                        1246 .L770:
                        1247 --436:                     }
                        1248 --437:                     
                        1249 --438:                     /* Increment the index to be used for allocation if it is already used by the 
                        1250 --439:                        neighboring blocks */  /* This loop will be executed two times at maximum */
                        1251 --440:                     while ( ((*currentindex) == prevBlkIndex) || ((*currentindex) == nextBlkIndex) )
0000035e 8525*          1252 	br	.L772
                        1253 .L774:
                        1254 --441:                     {
                        1255 --442:                         (*currentindex)++;
                        1256 --line442
                        1257 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.40::
                        1258 .LDWlin40:

                                                                      Page 22
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000360 5c1a           1259 	add	-4,sp
00000362 63ff0100       1260 	st.w	lp,0[sp]
00000366 ecff0100       1261 	ld.hu	0[r12],lp
0000036a 41fa           1262 	add	1,lp
0000036c 6cff0000       1263 	st.h	lp,0[r12]
00000370 23ff0100       1264 	ld.w	0[sp],lp
00000374 441a           1265 	add	4,sp
                        1266 --443:                         if ( 0 == (*currentindex))
00000376 5c1a           1267 	add	-4,sp
00000378 63ff0100       1268 	st.w	lp,0[sp]
0000037c ecff0100       1269 	ld.hu	0[r12],lp
00000380 e0f9           1270 	cmp	zero,lp
00000382 23ff0100       1271 	ld.w	0[sp],lp
00000386 231e0400       1272 	movea	4,sp,sp
0000038a aa0d*          1273 	bne	.L772
                        1274 --444:                         {
                        1275 --445:                             (*currentindex) = 1;
                        1276 --line445
                        1277 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.41::
                        1278 .LDWlin41:
0000038c 5c1a           1279 	add	-4,sp
0000038e 63ff0100       1280 	st.w	lp,0[sp]
00000392 01fa           1281 	mov	1,lp
00000394 6cff0000       1282 	st.h	lp,0[r12]
00000398 23ff0100       1283 	ld.w	0[sp],lp
0000039c 441a           1284 	add	4,sp
                        1285 .L772:
0000039e 5c1a           1286 	add	-4,sp
000003a0 63ff0100       1287 	st.w	lp,0[sp]
000003a4 ecff0100       1288 	ld.hu	0[r12],lp
000003a8 fbf9           1289 	cmp	r27,lp
000003aa 23ff0100       1290 	ld.w	0[sp],lp
000003ae 231e0400       1291 	movea	4,sp,sp
000003b2 f2d5*          1292 	be	.L774
000003b4 5c1a           1293 	add	-4,sp
000003b6 63ff0100       1294 	st.w	lp,0[sp]
000003ba ecff0100       1295 	ld.hu	0[r12],lp
000003be faf9           1296 	cmp	r26,lp
000003c0 23ff0100       1297 	ld.w	0[sp],lp
000003c4 231e0400       1298 	movea	4,sp,sp
000003c8 c2cd*          1299 	be	.L774
                        1300 --446:                         }
                        1301 --447:                     }
                        1302 --448:                     
                        1303 --449:                     /* Calculate address of allocated memory */
                        1304 --450:                     addr = lochpmng->BaseAddr + (startblk * lochpmng->BlockSize);
                        1305 --line450
                        1306 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.42::
                        1307 .LDWlin42:
000003ca 0475           1308 	sld.w	8[ep],r14
000003cc 630f1500       1309 	st.w	r1,20[sp]
000003d0 5c1a           1310 	add	-4,sp
000003d2 63ff0100       1311 	st.w	lp,0[sp]
000003d6 23ff1900       1312 	ld.w	24[sp],lp
000003da eeff2202       1313 	mulu	r14,lp,zero
000003de 0075           1314 	sld.w	0[ep],r14
000003e0 63771900       1315 	st.w	r14,24[sp]
000003e4 1f70           1316 	mov	lp,r14
000003e6 23ff1900       1317 	ld.w	24[sp],lp
000003ea df71           1318 	add	lp,r14
000003ec 23ff0100       1319 	ld.w	0[sp],lp

                                                                      Page 23
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
000003f0 441a           1320 	add	4,sp
                        1321 --451:                     /* For the blocks that have been found to be free by above searching pass, 
                        1322 --452:                        allocate them for this operation by writing the current block index into them. */
                        1323 --453:                     while(adjfreeblk != 0u) 
000003f2 952d*          1324 	br	.L778
                        1325 .L780:
                        1326 --454:                     {
                        1327 --455:                         *(lochpmng->BlockIndexList + startblk) = *currentindex;
                        1328 --line455
                        1329 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.43::
                        1330 .LDWlin43:
000003f4 630f1500       1331 	st.w	r1,20[sp]
000003f8 5c1a           1332 	add	-4,sp
000003fa 63ff0100       1333 	st.w	lp,0[sp]
000003fe 23ff1900       1334 	ld.w	24[sp],lp
00000402 c1fa           1335 	shl	1,lp
00000404 63ff1100       1336 	st.w	lp,16[sp]
00000408 08fd           1337 	sld.w	16[ep],lp
0000040a 5c1a           1338 	add	-4,sp
0000040c 63f70100       1339 	st.w	ep,0[sp]
00000410 23f71500       1340 	ld.w	20[sp],ep
00000414 dff1           1341 	add	lp,ep
00000416 ecff0100       1342 	ld.hu	0[r12],lp
0000041a 80fc           1343 	sst.h	lp,0[ep]
0000041c 23f70100       1344 	ld.w	0[sp],ep
00000420 441a           1345 	add	4,sp
00000422 23ff0100       1346 	ld.w	0[sp],lp
00000426 441a           1347 	add	4,sp
                        1348 --456:                         startblk++;
00000428 410a           1349 	add	1,r1
0000042a c100           1350 	zxh	r1
                        1351 --457:                         adjfreeblk--;
0000042c 5f6a           1352 	add	-1,r13
                        1353 --458:                         (*freeCount)--;
0000042e 5c1a           1354 	add	-4,sp
00000430 63ff0100       1355 	st.w	lp,0[sp]
00000434 2aff0100       1356 	ld.w	0[r10],lp
00000438 5ffa           1357 	add	-1,lp
0000043a 6aff0100       1358 	st.w	lp,0[r10]
0000043e 23ff0100       1359 	ld.w	0[sp],lp
00000442 441a           1360 	add	4,sp
                        1361 .L778:
00000444 e069           1362 	cmp	zero,r13
00000446 fad5*          1363 	bne	.L780
                        1364 --459:                     }
                        1365 --460:                     
                        1366 --461:                     /* Increment index for next allocation operation. 
                        1367 --462:                        In case of an overflow, set index to 1, as zero is reserved for empty blocks. */
                        1368 --463:                     (*currentindex)++;
                        1369 --line463
                        1370 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.44::
                        1371 .LDWlin44:
00000448 5c1a           1372 	add	-4,sp
0000044a 63ff0100       1373 	st.w	lp,0[sp]
0000044e ecff0100       1374 	ld.hu	0[r12],lp
00000452 41fa           1375 	add	1,lp
00000454 6cff0000       1376 	st.h	lp,0[r12]
00000458 23ff0100       1377 	ld.w	0[sp],lp
0000045c 441a           1378 	add	4,sp
                        1379 --464:                     if ( 0 == (*currentindex))
0000045e 5c1a           1380 	add	-4,sp

                                                                      Page 24
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000460 63ff0100       1381 	st.w	lp,0[sp]
00000464 ecff0100       1382 	ld.hu	0[r12],lp
00000468 e0f9           1383 	cmp	zero,lp
0000046a 23ff0100       1384 	ld.w	0[sp],lp
0000046e 231e0400       1385 	movea	4,sp,sp
00000472 aa0d*          1386 	bne	.L781
                        1387 --465:                     {
                        1388 --466:                         (*currentindex) = 1;
                        1389 --line466
                        1390 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.45::
                        1391 .LDWlin45:
00000474 5c1a           1392 	add	-4,sp
00000476 63ff0100       1393 	st.w	lp,0[sp]
0000047a 01fa           1394 	mov	1,lp
0000047c 6cff0000       1395 	st.h	lp,0[r12]
00000480 23ff0100       1396 	ld.w	0[sp],lp
00000484 441a           1397 	add	4,sp
                        1398 .L781:
                        1399 --467:                     }
                        1400 --468:                     
                        1401 --469:                     (*nextBlock) = startblk  % lochpmng->NbOfBlock;
00000486 630f0d00       1402 	st.w	r1,12[sp]
0000048a 5c1a           1403 	add	-4,sp
0000048c 63ff0100       1404 	st.w	lp,0[sp]
00000490 02fd           1405 	sld.w	4[ep],lp
00000492 63ff1900       1406 	st.w	lp,24[sp]
00000496 5c1a           1407 	add	-4,sp
00000498 63f70100       1408 	st.w	ep,0[sp]
0000049c 23f71500       1409 	ld.w	20[sp],ep
000004a0 5c1a           1410 	add	-4,sp
000004a2 63ef0100       1411 	st.w	r29,0[sp]
000004a6 fff7feea       1412 	divqu	lp,ep,r29
000004aa 63ef2100       1413 	st.w	r29,32[sp]
000004ae 23ef0100       1414 	ld.w	0[sp],r29
000004b2 441a           1415 	add	4,sp
000004b4 23f70100       1416 	ld.w	0[sp],ep
000004b8 441a           1417 	add	4,sp
000004ba 23ff1900       1418 	ld.w	24[sp],lp
000004be 69ff0100       1419 	st.w	lp,0[r9]
000004c2 23ff0100       1420 	ld.w	0[sp],lp
000004c6 441a           1421 	add	4,sp
                        1422 --470:                     leave = 1u; 
000004c8 0142           1423 	mov	1,r8
                        1424 .L766:
                        1425 --471:                 }
                        1426 --472:                 
                        1427 --473:                 if (0u == leave) 
000004ca e041           1428 	cmp	zero,r8
000004cc ca1d*          1429 	bne	.L759
                        1430 --474:                 {    
                        1431 --475:                     i = (i + 1) % lochpmng->NbOfBlock;
                        1432 --line475
                        1433 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.46::
                        1434 .LDWlin46:
000004ce 5c1a           1435 	add	-4,sp
000004d0 63ff0100       1436 	st.w	lp,0[sp]
000004d4 0bfe0100       1437 	addi	1,r11,lp
000004d8 025d           1438 	sld.w	4[ep],r11
000004da 635f1900       1439 	st.w	r11,24[sp]
000004de 5c1a           1440 	add	-4,sp
000004e0 63f70100       1441 	st.w	ep,0[sp]

                                                                      Page 25
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
000004e4 ebfffef2       1442 	divqu	r11,lp,ep
000004e8 63f71d00       1443 	st.w	ep,28[sp]
000004ec 23f70100       1444 	ld.w	0[sp],ep
000004f0 441a           1445 	add	4,sp
000004f2 23ff0100       1446 	ld.w	0[sp],lp
000004f6 441a           1447 	add	4,sp
000004f8 235f1500       1448 	ld.w	20[sp],r11
                        1449 --476:                     if(i == 0u) 
000004fc e059           1450 	cmp	zero,r11
000004fe ba05*          1451 	bne	.L759
                        1452 --477:                     {
                        1453 --478:                         /* we are back to the beginning of the heap */
                        1454 --479:                         /* then reset the startblock and the adjfreeblk variable*/
                        1455 --480:                         /* We do not want to have an allocation divided
                        1456 --481:                            between the end and the start of the heap */
                        1457 --482:                         
                        1458 --483:                         adjfreeblk = 0u;
                        1459 --line483
                        1460 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.47::
                        1461 .LDWlin47:
00000500 006a           1462 	mov	0,r13
                        1463 --484:                         startblk   = 0u;
00000502 000a           1464 	mov	0,r1
                        1465 .L759:
                        1466 --485:                     }
                        1467 --486:                 }
                        1468 --487:             } /* end: if (0u == leave)*/
                        1469 --488:             
                        1470 --489:             /* check for break conditions */
                        1471 --490:             if (0 != leave) 
00000504 e041           1472 	cmp	zero,r8
00000506 a205*          1473 	be	.L752
                        1474 --491:             {
                        1475 --492:                 break; 
                        1476 --line492
                        1477 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.48::
                        1478 .LDWlin48:
00000508 e50d*          1479 	br	.L750
                        1480 .L752:
                        1481 --line396
                        1482 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.49::
                        1483 .LDWlin49:
0000050a 5c1a           1484 	add	-4,sp
0000050c 63ff0100       1485 	st.w	lp,0[sp]
00000510 29ff0100       1486 	ld.w	0[r9],lp
00000514 5ffa           1487 	add	-1,lp
00000516 ff59           1488 	cmp	lp,r11
00000518 23ff0100       1489 	ld.w	0[sp],lp
0000051c 231e0400       1490 	movea	4,sp,sp
00000520 fa074bfd*      1491 	bne	.L754
                        1492 .L750:
                        1493 --493:             } 
                        1494 --494:         } /* end: while (i != ((*nextBlock) - 1))  */
                        1495 --495:     }
                        1496 --498:     
                        1497 --499: #ifdef MEM_DEBUG    
                        1498 --500:     /*  debug code to make a breakpoint32_t on out of memory possible */
                        1499 --501:     if(!addr)
                        1500 --502:     {
                        1501 --503:       if(type==VIDEO)
                        1502 --504:       {

                                                                      Page 26
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        1503 --505:         addr = 0u; /* break here */
                        1504 --506:       }
                        1505 --507:     }
                        1506 --508: #endif
                        1507 --509: #ifdef USE_ROS
                        1508 --510:     R_OS_ThreadMutexUnlock(&locCdiMemLock);
                        1509 --511: #endif
                        1510 --512:     return addr;
                        1511 --line512
                        1512 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.50::
                        1513 .LDWlin50:
00000524 0000           1514 	nop
                        1515 --	    .ef
                        1516 .LDW52:
00000526 0e50           1517 	mov	r14,r10
00000528 4c06ff70       1518 	dispose	6,{r25,r26,r27,r28,r29,r31},[lp]
                        1519 	.type	_R_CDI_HeapAlloc,@function
                        1520 	.size	_R_CDI_HeapAlloc,.-_R_CDI_HeapAlloc
                        1521 	.align	2
                        1522 .LDW62:
                        1523 --_addr	r14	local
                        1524 --_allocnbblk	r29	local
                        1525 --_adjfreeblk	r13	local
                        1526 --_tmp	r28	local
                        1527 --_i	r11	local
                        1528 --_lochpmng	ep	local
                        1529 --_locblkindexlist	lp	local
                        1530 --_startblk	r1	local
                        1531 --_currentindex	r12	local
                        1532 --_freeCount	r10	local
                        1533 --_nextBlock	r9	local
                        1534 --_leave	r8	local
                        1535 --_prevBlkIndex	r27	local
                        1536 --_nextBlkIndex	r26	local
                        1537 
                        1538 --_size	16[sp]	param
                        1539 --_type	r25	param
                        1540 
                        1541 	.data
                        1542 	.text
                        1543 
                        1544 --513: }
                        1545 
                        1546 --517: /*******************************************************************************
                        1547 --518:  Function: R_CDI_Alloc
                        1548 --519: */
                        1549 --520: void * R_CDI_Alloc(r_cdi_Heap_t *HeapMng, uint32_t Size)
                        1550 	.align	2
                        1551 	.align	2
                        1552 	.global	_R_CDI_Alloc
                        1553 _R_CDI_Alloc:
0000052c 8607e170       1554 	prepare	{r25,r26,r27,r28,r29,r31},3
00000530 0650           1555 	mov	r6,r10
00000532 07f8           1556 	mov	r7,lp
                        1557 --	    .bf
                        1558 .LDW72:
                        1559 --521: {
                        1560 --522:     uint32_t            addr           = 1u;
00000534 010a           1561 	mov	1,r1
                        1562 --523:     uint32_t            allocNbBlocks  = 0u;
00000536 0042           1563 	mov	0,r8

                                                                      Page 27
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        1564 --524:     uint32_t            adjfreeblk     = 0u;
00000538 006a           1565 	mov	0,r13
                        1566 --525:     int32_t             tmp;
                        1567 --526:     uint32_t            i;
                        1568 --527:     r_cdi_Heap_t       *lochpmng;
                        1569 --528:     r_cdi_HpBlkIndex_t  *locblkindexlist;
                        1570 --529:     r_cdi_HpBlkIndex_t  startblk;
                        1571 --530:     r_cdi_HpBlkIndex_t *currentindex;
                        1572 --531:     r_cdi_HpBlkIndex_t *freeCount;
                        1573 --532:     r_cdi_HpBlkIndex_t *nextBlock;
                        1574 --533:     uint8_t             leave = 0u; 
0000053a 004a           1575 	mov	0,r9
                        1576 --534:     r_cdi_HpBlkIndex_t prevBlkIndex = 0;
0000053c 00d2           1577 	mov	0,r26
                        1578 --535:     r_cdi_HpBlkIndex_t nextBlkIndex = 0;
0000053e 00ca           1579 	mov	0,r25
                        1580 --536:     
                        1581 --537: #ifdef USE_ROS
                        1582 --538:     R_OS_ThreadMutexLock(&locCdiMemLock);
                        1583 --539: #endif
                        1584 --540:     if(0 != HeapMng->BaseAddr)
00000540 2a770100       1585 	ld.w	0[r10],r14
00000544 e071           1586 	cmp	zero,r14
00000546 920d*          1587 	be	.L1408
                        1588 --541:     {
                        1589 --542:         lochpmng        = HeapMng;
                        1590 --line542
                        1591 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.51::
                        1592 .LDWlin51:
00000548 0af0           1593 	mov	r10,ep
                        1594 --543:         currentindex    = &(HeapMng->NextBlockIdx);
0000054a 0a661000       1595 	addi	16,r10,r12
                        1596 --544:         freeCount       = &(HeapMng->FreeBlocks);
0000054e 0ae61200       1597 	addi	18,r10,r28
                        1598 --545:         nextBlock       = &(HeapMng->NextFreeBlockNb);
00000552 0ade1400       1599 	addi	20,r10,r27
00000556 a505*          1600 	br	.L1410
                        1601 .L1408:
                        1602 --546:     } 
                        1603 --547:     else 
                        1604 --548:     {
                        1605 --549:         addr = 0u;
                        1606 --line549
                        1607 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.52::
                        1608 .LDWlin52:
00000558 000a           1609 	mov	0,r1
                        1610 .L1410:
                        1611 --550:     }
                        1612 --551:     if((*freeCount) <= 0)
0000055a fc770100       1613 	ld.hu	0[r28],r14
0000055e e071           1614 	cmp	zero,r14
00000560 aa05*          1615 	bne	.L1411
                        1616 --552:     {
                        1617 --553:         addr = 0u;
                        1618 --line553
                        1619 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.53::
                        1620 .LDWlin53:
00000562 000a           1621 	mov	0,r1
                        1622 .L1411:
                        1623 --554:     }
                        1624 --555:     

                                                                      Page 28
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        1625 --556:     if (0 == Size)
00000564 e0f9           1626 	cmp	zero,lp
00000566 aa05*          1627 	bne	.L1413
                        1628 --557:     {
                        1629 --558:         addr = 0u;
                        1630 --line558
                        1631 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.54::
                        1632 .LDWlin54:
00000568 000a           1633 	mov	0,r1
                        1634 .L1413:
                        1635 --559:     }
                        1636 --560:     
                        1637 --561:     /* Calculate number of required blocks*/
                        1638 --562:     if (addr != 0u)
0000056a e009           1639 	cmp	zero,r1
0000056c d20d*          1640 	be	.L1415
                        1641 --563:     {
                        1642 --564:         tmp = Size;
                        1643 --line564
                        1644 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.55::
                        1645 .LDWlin55:
0000056e 1fe8           1646 	mov	lp,r29
                        1647 --565:         /* calculate number of blocks needed*/
                        1648 --566:         while (tmp > 0)
00000570 c505*          1649 	br	.L1417
                        1650 .L1419:
                        1651 --567:         {
                        1652 --568:             allocNbBlocks++;
                        1653 --line568
                        1654 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.56::
                        1655 .LDWlin56:
00000572 4142           1656 	add	1,r8
                        1657 --569:             tmp -= lochpmng->BlockSize;
00000574 0475           1658 	sld.w	8[ep],r14
00000576 aee9           1659 	sub	r14,r29
                        1660 .L1417:
00000578 e0e9           1661 	cmp	zero,r29
0000057a cffd*          1662 	bgt	.L1419
                        1663 --570:         }
                        1664 --571:         /* if not enough blocks left */
                        1665 --572:         if((*freeCount) <= allocNbBlocks)
                        1666 --line572
                        1667 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.57::
                        1668 .LDWlin57:
0000057c fc770100       1669 	ld.hu	0[r28],r14
00000580 e871           1670 	cmp	r8,r14
00000582 ab05*          1671 	bh	.L1415
                        1672 --573:         {
                        1673 --574:             addr = 0u;
                        1674 --line574
                        1675 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.58::
                        1676 .LDWlin58:
00000584 000a           1677 	mov	0,r1
                        1678 .L1415:
                        1679 --575:         }
                        1680 --576:     }
                        1681 --577:     
                        1682 --578:     if(addr != 0u) 
00000586 e009           1683 	cmp	zero,r1
00000588 e207e302*      1684 	be	.L1422
                        1685 --579:     {

                                                                      Page 29
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        1686 --580:         /* Search for n free adjacent blocks */
                        1687 --581:         locblkindexlist = lochpmng->BlockIdxList;
                        1688 --line581
                        1689 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.59::
                        1690 .LDWlin59:
0000058c 065d           1691 	sld.w	12[ep],r11
0000058e 635f0100       1692 	st.w	r11,0[sp]
                        1693 --582:         addr = 0u;
00000592 000a           1694 	mov	0,r1
                        1695 --583:         i = *nextBlock;
00000594 fb5f0100       1696 	ld.hu	0[r27],r11
                        1697 --584:         /* Search through the block index until we are at the starting point again */
                        1698 --585:         while (i != ((*nextBlock) - 1)) 
00000598 8007b802*      1699 	br	.L1424
                        1700 .L1426:
                        1701 --586:         {
                        1702 --587:             /* Special case: When the starting point was zero, stop when we reach the end of the index */
                        1703 --588:             if (*nextBlock == 0u) 
                        1704 --line588
                        1705 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.60::
                        1706 .LDWlin60:
0000059c 5c1a           1707 	add	-4,sp
0000059e 63ff0100       1708 	st.w	lp,0[sp]
000005a2 fbff0100       1709 	ld.hu	0[r27],lp
000005a6 e0f9           1710 	cmp	zero,lp
000005a8 23ff0100       1711 	ld.w	0[sp],lp
000005ac 231e0400       1712 	movea	4,sp,sp
000005b0 da0d*          1713 	bne	.L1427
                        1714 --589:             {
                        1715 --590:                 if (i == (lochpmng->NbOfBlock - 1)) 
                        1716 --line590
                        1717 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.61::
                        1718 .LDWlin61:
000005b2 5c1a           1719 	add	-4,sp
000005b4 63ff0100       1720 	st.w	lp,0[sp]
000005b8 02fd           1721 	sld.w	4[ep],lp
000005ba 5ffa           1722 	add	-1,lp
000005bc ff59           1723 	cmp	lp,r11
000005be 23ff0100       1724 	ld.w	0[sp],lp
000005c2 231e0400       1725 	movea	4,sp,sp
000005c6 aa05*          1726 	bne	.L1427
                        1727 --591:                 {
                        1728 --592:                    leave = 1u; 
                        1729 --line592
                        1730 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.62::
                        1731 .LDWlin62:
000005c8 014a           1732 	mov	1,r9
                        1733 .L1427:
                        1734 --593:                 }
                        1735 --594:             }
                        1736 --595:             if (0u == leave) 
000005ca e049           1737 	cmp	zero,r9
000005cc ea077f02*      1738 	bne	.L1431
                        1739 --596:             {
                        1740 --597:                 /* If block index states that the current block is free, take it as starting point */
                        1741 --598:                 /* With the following iterations, check that the adjacent block are also free */
                        1742 --599:                 if (*(locblkindexlist + i ) == 0u) 
                        1743 --line599
                        1744 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.63::
                        1745 .LDWlin63:
000005d0 635f0900       1746 	st.w	r11,8[sp]

                                                                      Page 30
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
000005d4 5c1a           1747 	add	-4,sp
000005d6 63ff0100       1748 	st.w	lp,0[sp]
000005da 23ff0d00       1749 	ld.w	12[sp],lp
000005de c1fa           1750 	shl	1,lp
000005e0 63ff0d00       1751 	st.w	lp,12[sp]
000005e4 23ff0500       1752 	ld.w	4[sp],lp
000005e8 5c1a           1753 	add	-4,sp
000005ea 63f70100       1754 	st.w	ep,0[sp]
000005ee 23f71100       1755 	ld.w	16[sp],ep
000005f2 dff1           1756 	add	lp,ep
000005f4 63f71100       1757 	st.w	ep,16[sp]
000005f8 23f70100       1758 	ld.w	0[sp],ep
000005fc 441a           1759 	add	4,sp
000005fe 23ff0d00       1760 	ld.w	12[sp],lp
00000602 ffff0100       1761 	ld.hu	0[lp],lp
00000606 e0f9           1762 	cmp	zero,lp
00000608 23ff0100       1763 	ld.w	0[sp],lp
0000060c 231e0400       1764 	movea	4,sp,sp
00000610 fa05*          1765 	bne	.L1433
                        1766 --600:                 {
                        1767 --601:                     if (adjfreeblk == 0u) 
                        1768 --line601
                        1769 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.64::
                        1770 .LDWlin64:
00000612 e069           1771 	cmp	zero,r13
00000614 ba05*          1772 	bne	.L1435
                        1773 --602:                     {
                        1774 --603:                         startblk = i;
                        1775 --line603
                        1776 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.65::
                        1777 .LDWlin65:
00000616 cb76ffff       1778 	andi	65535,r11,r14
                        1779 .L1435:
                        1780 --604:                     }
                        1781 --605:                     adjfreeblk++;
0000061a 416a           1782 	add	1,r13
0000061c b505*          1783 	br	.L1437
                        1784 .L1433:
                        1785 --606:                 } 
                        1786 --607:                 else 
                        1787 --608:                 {
                        1788 --609:                     adjfreeblk = 0u;
                        1789 --line609
                        1790 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.66::
                        1791 .LDWlin66:
0000061e 006a           1792 	mov	0,r13
                        1793 --610:                     startblk   = 0u;
00000620 0072           1794 	mov	0,r14
                        1795 .L1437:
                        1796 --611:                 }
                        1797 --612:     
                        1798 --613:                 /* When n free adjacent block are found, all blocks' status are set to used*/
                        1799 --614:                 /* Start address is then returned */
                        1800 --615:                 if (adjfreeblk == allocNbBlocks) 
00000622 e869           1801 	cmp	r8,r13
00000624 ea07ed01*      1802 	bne	.L1438
                        1803 --616:                 {
                        1804 --617:                     /* If there are blocks before and/or after the current block to be allocated,
                        1805 --618:                        check their indices and adapt the current block index if necessary. */
                        1806 --619:                     /* We don't need to check for a previous block, if we are at the start of the list */
                        1807 --620:                     if (startblk > 0)

                                                                      Page 31
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        1808 --line620
                        1809 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.67::
                        1810 .LDWlin67:
00000628 e071           1811 	cmp	zero,r14
0000062a a315*          1812 	bnh	.L1440
                        1813 --621:                     {
                        1814 --622:                         prevBlkIndex = *(lochpmng->BlockIdxList + (startblk - 1));
                        1815 --line622
                        1816 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.68::
                        1817 .LDWlin68:
0000062c 0ed6ffff       1818 	addi	-1,r14,r26
00000630 c1d2           1819 	shl	1,r26
00000632 63d70500       1820 	st.w	r26,4[sp]
00000636 06d5           1821 	sld.w	12[ep],r26
00000638 5c1a           1822 	add	-4,sp
0000063a 63ff0100       1823 	st.w	lp,0[sp]
0000063e 23ff0900       1824 	ld.w	8[sp],lp
00000642 daf9           1825 	add	r26,lp
00000644 ffd70100       1826 	ld.hu	0[lp],r26
00000648 23ff0100       1827 	ld.w	0[sp],lp
0000064c 441a           1828 	add	4,sp
                        1829 .L1440:
                        1830 --623:                     }
                        1831 --624:                     /* We don't need to check for a next block, if we are at the end of the list */
                        1832 --625:                     if ((startblk + adjfreeblk) < lochpmng->NbOfBlock)
0000064e 636f0500       1833 	st.w	r13,4[sp]
00000652 5c1a           1834 	add	-4,sp
00000654 63ff0100       1835 	st.w	lp,0[sp]
00000658 23ff0900       1836 	ld.w	8[sp],lp
0000065c cef9           1837 	add	r14,lp
0000065e 63ff0900       1838 	st.w	lp,8[sp]
00000662 02fd           1839 	sld.w	4[ep],lp
00000664 5c1a           1840 	add	-4,sp
00000666 63f70100       1841 	st.w	ep,0[sp]
0000066a 23f70d00       1842 	ld.w	12[sp],ep
0000066e fff1           1843 	cmp	lp,ep
00000670 23f70100       1844 	ld.w	0[sp],ep
00000674 231e0400       1845 	movea	4,sp,sp
00000678 23ff0100       1846 	ld.w	0[sp],lp
0000067c 231e0400       1847 	movea	4,sp,sp
00000680 a915*          1848 	bnl	.L1442
                        1849 --626:                     {
                        1850 --627:                         nextBlkIndex = *(lochpmng->BlockIdxList + (startblk + adjfreeblk));
                        1851 --line627
                        1852 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.69::
                        1853 .LDWlin69:
00000682 0dc8           1854 	mov	r13,r25
00000684 cec9           1855 	add	r14,r25
00000686 c1ca           1856 	shl	1,r25
00000688 63cf0500       1857 	st.w	r25,4[sp]
0000068c 06cd           1858 	sld.w	12[ep],r25
0000068e 5c1a           1859 	add	-4,sp
00000690 63ff0100       1860 	st.w	lp,0[sp]
00000694 23ff0900       1861 	ld.w	8[sp],lp
00000698 d9f9           1862 	add	r25,lp
0000069a ffcf0100       1863 	ld.hu	0[lp],r25
0000069e 23ff0100       1864 	ld.w	0[sp],lp
000006a2 441a           1865 	add	4,sp
                        1866 .L1442:
                        1867 --628:                     }
                        1868 --629:                     

                                                                      Page 32
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        1869 --630:                     /* Increment the index to be used for allocation if it is already used by the 
                        1870 --631:                        neighboring blocks */  /* This loop will be executed two times at maximum */
                        1871 --632:                     while ( ((*currentindex) == prevBlkIndex) || ((*currentindex) == nextBlkIndex) )
000006a4 8525*          1872 	br	.L1444
                        1873 .L1446:
                        1874 --633:                     {
                        1875 --634:                         (*currentindex)++;
                        1876 --line634
                        1877 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.70::
                        1878 .LDWlin70:
000006a6 5c1a           1879 	add	-4,sp
000006a8 63ff0100       1880 	st.w	lp,0[sp]
000006ac ecff0100       1881 	ld.hu	0[r12],lp
000006b0 41fa           1882 	add	1,lp
000006b2 6cff0000       1883 	st.h	lp,0[r12]
000006b6 23ff0100       1884 	ld.w	0[sp],lp
000006ba 441a           1885 	add	4,sp
                        1886 --635:                         if ( 0 == (*currentindex))
000006bc 5c1a           1887 	add	-4,sp
000006be 63ff0100       1888 	st.w	lp,0[sp]
000006c2 ecff0100       1889 	ld.hu	0[r12],lp
000006c6 e0f9           1890 	cmp	zero,lp
000006c8 23ff0100       1891 	ld.w	0[sp],lp
000006cc 231e0400       1892 	movea	4,sp,sp
000006d0 aa0d*          1893 	bne	.L1444
                        1894 --636:                         {
                        1895 --637:                             (*currentindex) = 1;
                        1896 --line637
                        1897 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.71::
                        1898 .LDWlin71:
000006d2 5c1a           1899 	add	-4,sp
000006d4 63ff0100       1900 	st.w	lp,0[sp]
000006d8 01fa           1901 	mov	1,lp
000006da 6cff0000       1902 	st.h	lp,0[r12]
000006de 23ff0100       1903 	ld.w	0[sp],lp
000006e2 441a           1904 	add	4,sp
                        1905 .L1444:
000006e4 5c1a           1906 	add	-4,sp
000006e6 63ff0100       1907 	st.w	lp,0[sp]
000006ea ecff0100       1908 	ld.hu	0[r12],lp
000006ee faf9           1909 	cmp	r26,lp
000006f0 23ff0100       1910 	ld.w	0[sp],lp
000006f4 231e0400       1911 	movea	4,sp,sp
000006f8 f2d5*          1912 	be	.L1446
000006fa 5c1a           1913 	add	-4,sp
000006fc 63ff0100       1914 	st.w	lp,0[sp]
00000700 ecff0100       1915 	ld.hu	0[r12],lp
00000704 f9f9           1916 	cmp	r25,lp
00000706 23ff0100       1917 	ld.w	0[sp],lp
0000070a 231e0400       1918 	movea	4,sp,sp
0000070e c2cd*          1919 	be	.L1446
                        1920 --638:                         }
                        1921 --639:                     }
                        1922 --641:                     /* Calculate address of allocated memory */
                        1923 --642:                     addr = lochpmng->BaseAddr + (startblk * lochpmng->BlockSize);
                        1924 --line642
                        1925 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.72::
                        1926 .LDWlin72:
00000710 040d           1927 	sld.w	8[ep],r1
00000712 63770900       1928 	st.w	r14,8[sp]
00000716 5c1a           1929 	add	-4,sp

                                                                      Page 33
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000718 63ff0100       1930 	st.w	lp,0[sp]
0000071c 23ff0d00       1931 	ld.w	12[sp],lp
00000720 e1ff2202       1932 	mulu	r1,lp,zero
00000724 000d           1933 	sld.w	0[ep],r1
00000726 630f0d00       1934 	st.w	r1,12[sp]
0000072a 1f08           1935 	mov	lp,r1
0000072c 23ff0d00       1936 	ld.w	12[sp],lp
00000730 df09           1937 	add	lp,r1
00000732 23ff0100       1938 	ld.w	0[sp],lp
00000736 441a           1939 	add	4,sp
                        1940 --643:                     /* Reserve allocated memory in the block index */
                        1941 --644:                     while(adjfreeblk != 0u) 
00000738 952d*          1942 	br	.L1450
                        1943 .L1452:
                        1944 --645:                     {
                        1945 --646:                         *(lochpmng->BlockIdxList + startblk) = *currentindex;
                        1946 --line646
                        1947 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.73::
                        1948 .LDWlin73:
0000073a 63770900       1949 	st.w	r14,8[sp]
0000073e 5c1a           1950 	add	-4,sp
00000740 63ff0100       1951 	st.w	lp,0[sp]
00000744 23ff0d00       1952 	ld.w	12[sp],lp
00000748 c1fa           1953 	shl	1,lp
0000074a 63ff0900       1954 	st.w	lp,8[sp]
0000074e 06fd           1955 	sld.w	12[ep],lp
00000750 5c1a           1956 	add	-4,sp
00000752 63f70100       1957 	st.w	ep,0[sp]
00000756 23f70d00       1958 	ld.w	12[sp],ep
0000075a dff1           1959 	add	lp,ep
0000075c ecff0100       1960 	ld.hu	0[r12],lp
00000760 80fc           1961 	sst.h	lp,0[ep]
00000762 23f70100       1962 	ld.w	0[sp],ep
00000766 441a           1963 	add	4,sp
00000768 23ff0100       1964 	ld.w	0[sp],lp
0000076c 441a           1965 	add	4,sp
                        1966 --647:                         startblk++;
0000076e 4172           1967 	add	1,r14
00000770 ce00           1968 	zxh	r14
                        1969 --648:                         adjfreeblk--;
00000772 5f6a           1970 	add	-1,r13
                        1971 --649:                         (*freeCount)--;
00000774 5c1a           1972 	add	-4,sp
00000776 63ff0100       1973 	st.w	lp,0[sp]
0000077a fcff0100       1974 	ld.hu	0[r28],lp
0000077e 5ffa           1975 	add	-1,lp
00000780 7cff0000       1976 	st.h	lp,0[r28]
00000784 23ff0100       1977 	ld.w	0[sp],lp
00000788 441a           1978 	add	4,sp
                        1979 .L1450:
0000078a e069           1980 	cmp	zero,r13
0000078c fad5*          1981 	bne	.L1452
                        1982 --650:                     }
                        1983 --651:                     /* Increase the index that uniquely identifies one allocation operation */
                        1984 --652:                     /* In case of an overflow, set index to 1, as zero is reserved for empty blocks. */
                        1985 --653:                     (*currentindex)++;
                        1986 --line653
                        1987 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.74::
                        1988 .LDWlin74:
0000078e 5c1a           1989 	add	-4,sp
00000790 63ff0100       1990 	st.w	lp,0[sp]

                                                                      Page 34
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000794 ecff0100       1991 	ld.hu	0[r12],lp
00000798 41fa           1992 	add	1,lp
0000079a 6cff0000       1993 	st.h	lp,0[r12]
0000079e 23ff0100       1994 	ld.w	0[sp],lp
000007a2 441a           1995 	add	4,sp
                        1996 --654:                     if ( 0 == (*currentindex))
000007a4 5c1a           1997 	add	-4,sp
000007a6 63ff0100       1998 	st.w	lp,0[sp]
000007aa ecff0100       1999 	ld.hu	0[r12],lp
000007ae e0f9           2000 	cmp	zero,lp
000007b0 23ff0100       2001 	ld.w	0[sp],lp
000007b4 231e0400       2002 	movea	4,sp,sp
000007b8 aa0d*          2003 	bne	.L1453
                        2004 --655:                     {
                        2005 --656:                         (*currentindex) = 1;
                        2006 --line656
                        2007 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.75::
                        2008 .LDWlin75:
000007ba 5c1a           2009 	add	-4,sp
000007bc 63ff0100       2010 	st.w	lp,0[sp]
000007c0 01fa           2011 	mov	1,lp
000007c2 6cff0000       2012 	st.h	lp,0[r12]
000007c6 23ff0100       2013 	ld.w	0[sp],lp
000007ca 441a           2014 	add	4,sp
                        2015 .L1453:
                        2016 --657:                     }
                        2017 --658:                     /* Set next free block number to be directly behind the just allocated memory */
                        2018 --659:                     (*nextBlock) = startblk  % lochpmng->NbOfBlock;
000007cc 63770500       2019 	st.w	r14,4[sp]
000007d0 5c1a           2020 	add	-4,sp
000007d2 63ff0100       2021 	st.w	lp,0[sp]
000007d6 02fd           2022 	sld.w	4[ep],lp
000007d8 63ff0d00       2023 	st.w	lp,12[sp]
000007dc 5c1a           2024 	add	-4,sp
000007de 63f70100       2025 	st.w	ep,0[sp]
000007e2 23f70d00       2026 	ld.w	12[sp],ep
000007e6 5c1a           2027 	add	-4,sp
000007e8 63ef0100       2028 	st.w	r29,0[sp]
000007ec fff7feea       2029 	divqu	lp,ep,r29
000007f0 63ef1500       2030 	st.w	r29,20[sp]
000007f4 23ef0100       2031 	ld.w	0[sp],r29
000007f8 441a           2032 	add	4,sp
000007fa 23f70100       2033 	ld.w	0[sp],ep
000007fe 441a           2034 	add	4,sp
00000800 23ff0d00       2035 	ld.w	12[sp],lp
00000804 7bff0000       2036 	st.h	lp,0[r27]
00000808 23ff0100       2037 	ld.w	0[sp],lp
0000080c 441a           2038 	add	4,sp
                        2039 --660:                     leave = 1u; 
0000080e 014a           2040 	mov	1,r9
                        2041 .L1438:
                        2042 --661:                 }
                        2043 --662:                 
                        2044 --663:                 /* Proceed to go through the block index with each iteration */
                        2045 --664:                 if (0u == leave) 
00000810 e049           2046 	cmp	zero,r9
00000812 ca1d*          2047 	bne	.L1431
                        2048 --665:                 {    
                        2049 --666:                     i = (i + 1) % lochpmng->NbOfBlock;
                        2050 --line666
                        2051 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.76::

                                                                      Page 35
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        2052 .LDWlin76:
00000814 5c1a           2053 	add	-4,sp
00000816 63ff0100       2054 	st.w	lp,0[sp]
0000081a 0bfe0100       2055 	addi	1,r11,lp
0000081e 025d           2056 	sld.w	4[ep],r11
00000820 635f0d00       2057 	st.w	r11,12[sp]
00000824 5c1a           2058 	add	-4,sp
00000826 63f70100       2059 	st.w	ep,0[sp]
0000082a ebfffef2       2060 	divqu	r11,lp,ep
0000082e 63f71100       2061 	st.w	ep,16[sp]
00000832 23f70100       2062 	ld.w	0[sp],ep
00000836 441a           2063 	add	4,sp
00000838 23ff0100       2064 	ld.w	0[sp],lp
0000083c 441a           2065 	add	4,sp
0000083e 235f0900       2066 	ld.w	8[sp],r11
                        2067 --667:                     if(i == 0u) 
00000842 e059           2068 	cmp	zero,r11
00000844 ba05*          2069 	bne	.L1431
                        2070 --668:                     {
                        2071 --669:                         /* we are back to the beginning of the heap */
                        2072 --670:                         /* then reset the startblock and the adjfreeblk variable*/
                        2073 --671:                         /* We do not want to have an allocation divided
                        2074 --672:                            between the end and the start of the heap */
                        2075 --673:                         
                        2076 --674:                         adjfreeblk = 0u;
                        2077 --line674
                        2078 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.77::
                        2079 .LDWlin77:
00000846 006a           2080 	mov	0,r13
                        2081 --675:                         startblk   = 0u;
00000848 0072           2082 	mov	0,r14
                        2083 .L1431:
                        2084 --676:                     }
                        2085 --677:                 }
                        2086 --678:             } /* if (0u == leave)*/
                        2087 --679:             /* check for break conditions */
                        2088 --680:             if (0 != leave) 
0000084a e049           2089 	cmp	zero,r9
0000084c a205*          2090 	be	.L1424
                        2091 --681:             {
                        2092 --682:                 break; 
                        2093 --line682
                        2094 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.78::
                        2095 .LDWlin78:
0000084e e50d*          2096 	br	.L1422
                        2097 .L1424:
                        2098 --line585
                        2099 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.79::
                        2100 .LDWlin79:
00000850 5c1a           2101 	add	-4,sp
00000852 63ff0100       2102 	st.w	lp,0[sp]
00000856 fbff0100       2103 	ld.hu	0[r27],lp
0000085a 5ffa           2104 	add	-1,lp
0000085c ff59           2105 	cmp	lp,r11
0000085e 23ff0100       2106 	ld.w	0[sp],lp
00000862 231e0400       2107 	movea	4,sp,sp
00000866 fa0737fd*      2108 	bne	.L1426
                        2109 .L1422:
                        2110 --683:             } 
                        2111 --684:         } /* while (i != ((*nextBlock) - 1))  */
                        2112 --685:     }

                                                                      Page 36
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        2113 --686:     
                        2114 --687: #ifdef MEM_DEBUG    
                        2115 --688:     /*  debug code to make a breakpoint32_t on out of memory possible */
                        2116 --689:     if(!addr)
                        2117 --690:     {
                        2118 --691:         addr = 0u; /* break here */
                        2119 --692:     }
                        2120 --693: #endif
                        2121 --694: #ifdef USE_ROS
                        2122 --695:     R_OS_ThreadMutexUnlock(&locCdiMemLock);
                        2123 --696: #endif
                        2124 --697:     return (void *)addr;
                        2125 --line697
                        2126 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.80::
                        2127 .LDWlin80:
0000086a 0000           2128 	nop
                        2129 --	    .ef
                        2130 .LDW82:
0000086c 0150           2131 	mov	r1,r10
0000086e 4606ff70       2132 	dispose	3,{r25,r26,r27,r28,r29,r31},[lp]
                        2133 	.type	_R_CDI_Alloc,@function
                        2134 	.size	_R_CDI_Alloc,.-_R_CDI_Alloc
                        2135 	.align	2
                        2136 .LDW92:
                        2137 --_addr	r1	local
                        2138 --_allocNbBlocks	r8	local
                        2139 --_adjfreeblk	r13	local
                        2140 --_tmp	r29	local
                        2141 --_i	r11	local
                        2142 --_lochpmng	ep	local
                        2143 --_locblkindexlist	0[sp]	local
                        2144 --_startblk	r14	local
                        2145 --_currentindex	r12	local
                        2146 --_freeCount	r28	local
                        2147 --_nextBlock	r27	local
                        2148 --_leave	r9	local
                        2149 --_prevBlkIndex	r26	local
                        2150 --_nextBlkIndex	r25	local
                        2151 
                        2152 --_HeapMng	r10	param
                        2153 --_Size	lp	param
                        2154 
                        2155 	.section ".bss","awb"
                        2156 .L1774:
                        2157 	.type	.L1774,@object
                        2158 	.size	.L1774,0
                        2159 	.data
                        2160 	.text
                        2161 
                        2162 --698: }
                        2163 
                        2164 --700: /*******************************************************************************
                        2165 --701:  Function: R_CDI_AllocAlign
                        2166 --702:  */
                        2167 --703: void * R_CDI_AllocAlign(r_cdi_Heap_t *HeapMng, uint32_t Size, uint32_t Alignment)
                        2168 	.align	2
                        2169 	.align	2
                        2170 	.global	_R_CDI_AllocAlign
                        2171 _R_CDI_AllocAlign:
00000872 8e07e170       2172 	prepare	{r25,r26,r27,r28,r29,r31},7
00000876 633f1500       2173 	st.w	r7,20[sp]

                                                                      Page 37
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
0000087a 0650           2174 	mov	r6,r10
0000087c 63471100       2175 	st.w	r8,16[sp]
                        2176 --	    .bf
                        2177 .LDW03:
                        2178 --704: {
                        2179 --705:     uint32_t            addr           = 1u;
00000880 0172           2180 	mov	1,r14
                        2181 --706:     uint32_t            allocNbBlocks  = 0u;
00000882 00e2           2182 	mov	0,r28
                        2183 --707:     uint32_t            adjfreeblk     = 0u;
00000884 006a           2184 	mov	0,r13
                        2185 --708:     int32_t             tmp;
                        2186 --709:     uint32_t            i;
                        2187 --710:     uint32_t            align          = 1u;
00000886 014a           2188 	mov	1,r9
                        2189 --711:     uint32_t            alignOffset    = 0u;
00000888 63070100       2190 	st.w	zero,0[sp]
0000088c 005a           2191 	mov	0,r11
                        2192 --712:     r_cdi_Heap_t       *lochpmng;
                        2193 --713:     r_cdi_HpBlkIndex_t  *locblkindexlist;
                        2194 --714:     r_cdi_HpBlkIndex_t  startblk       = 0u;
0000088e 000a           2195 	mov	0,r1
                        2196 --715:     r_cdi_HpBlkIndex_t *currentindex;
                        2197 --716:     r_cdi_HpBlkIndex_t *freeCount;
                        2198 --717:     r_cdi_HpBlkIndex_t *nextBlock;
                        2199 --718:     uint8_t             leave = 0u; 
00000890 00ea           2200 	mov	0,r29
                        2201 --719:     r_cdi_HpBlkIndex_t prevBlkIndex = 0;
00000892 63070400       2202 	st.h	zero,4[sp]
00000896 005a           2203 	mov	0,r11
                        2204 --720:     r_cdi_HpBlkIndex_t nextBlkIndex = 0;
00000898 63070600       2205 	st.h	zero,6[sp]
0000089c 005a           2206 	mov	0,r11
                        2207 --721:     
                        2208 --722: #ifdef USE_ROS
                        2209 --723:     R_OS_ThreadMutexLock(&locCdiMemLock);
                        2210 --724: #endif
                        2211 --725:     if(0 != HeapMng->BaseAddr)
0000089e 2a670100       2212 	ld.w	0[r10],r12
000008a2 e061           2213 	cmp	zero,r12
000008a4 920d*          2214 	be	.L2004
                        2215 --726:     {
                        2216 --727:         lochpmng        = HeapMng;
                        2217 --line727
                        2218 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.81::
                        2219 .LDWlin81:
000008a6 0af0           2220 	mov	r10,ep
                        2221 --728:         currentindex    = &(HeapMng->NextBlockIdx);
000008a8 0a661000       2222 	addi	16,r10,r12
                        2223 --729:         freeCount       = &(HeapMng->FreeBlocks);
000008ac 0ad61200       2224 	addi	18,r10,r26
                        2225 --730:         nextBlock       = &(HeapMng->NextFreeBlockNb);
000008b0 0ace1400       2226 	addi	20,r10,r25
000008b4 a505*          2227 	br	.L2006
                        2228 .L2004:
                        2229 --731:     } 
                        2230 --732:     else 
                        2231 --733:     {
                        2232 --734:         addr = 0u;
                        2233 --line734
                        2234 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.82::

                                                                      Page 38
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        2235 .LDWlin82:
000008b6 0072           2236 	mov	0,r14
                        2237 .L2006:
                        2238 --735:     }
                        2239 --736:     if((*freeCount) <= 0)
000008b8 fa5f0100       2240 	ld.hu	0[r26],r11
000008bc e059           2241 	cmp	zero,r11
000008be aa05*          2242 	bne	.L2007
                        2243 --737:     {
                        2244 --738:         addr = 0u;
                        2245 --line738
                        2246 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.83::
                        2247 .LDWlin83:
000008c0 0072           2248 	mov	0,r14
                        2249 .L2007:
                        2250 --739:     }
                        2251 --740:     
                        2252 --741:     /* Calculate number of required blocks*/
                        2253 --742:     if (addr != 0u)
000008c2 e071           2254 	cmp	zero,r14
000008c4 e20d*          2255 	be	.L2009
                        2256 --743:     {
                        2257 --744:         tmp = Size;
                        2258 --line744
                        2259 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.84::
                        2260 .LDWlin84:
000008c6 23df1500       2261 	ld.w	20[sp],r27
                        2262 --745:         /* calculate number of blocks needed*/
                        2263 --746:         while (tmp > 0)
000008ca c505*          2264 	br	.L2011
                        2265 .L2013:
                        2266 --747:         {
                        2267 --748:             allocNbBlocks++;
                        2268 --line748
                        2269 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.85::
                        2270 .LDWlin85:
000008cc 41e2           2271 	add	1,r28
                        2272 --749:             tmp -= lochpmng->BlockSize;
000008ce 045d           2273 	sld.w	8[ep],r11
000008d0 abd9           2274 	sub	r11,r27
                        2275 .L2011:
000008d2 e0d9           2276 	cmp	zero,r27
000008d4 cffd*          2277 	bgt	.L2013
                        2278 --750:         }
                        2279 --751:         /* if not enough blocks left */
                        2280 --752:         if((*freeCount) <= allocNbBlocks)
                        2281 --line752
                        2282 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.86::
                        2283 .LDWlin86:
000008d6 fa5f0100       2284 	ld.hu	0[r26],r11
000008da fc59           2285 	cmp	r28,r11
000008dc ab05*          2286 	bh	.L2009
                        2287 --753:         {
                        2288 --754:             addr = 0u;
                        2289 --line754
                        2290 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.87::
                        2291 .LDWlin87:
000008de 0072           2292 	mov	0,r14
                        2293 .L2009:
                        2294 --755:         }
                        2295 --756:     }

                                                                      Page 39
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        2296 --757:     
                        2297 --758:     /* Calculate alignment of block index number to mathc required alignment */
                        2298 --759:     if (Alignment != 0)
000008e0 235f1100       2299 	ld.w	16[sp],r11
000008e4 e059           2300 	cmp	zero,r11
000008e6 b21d*          2301 	be	.L2016
                        2302 --760:     {
                        2303 --761:         /* If <Alignment> is smaller than <BlockSize>, the alignment is given inherently. */
                        2304 --762:         /* <Alignment> and <BlockSize> are expected to be powers of two, 
                        2305 --763:            otherwise a correct alignment might be technically imposssible */
                        2306 --764:         /* The requested <Alignment> can be bigger than the alignment of <BaseAddr>.
                        2307 --765:            As long as the <BaseAddr> is aligned to <BlockSize>, this function will 
                        2308 --766:            find an address which is aligned to the system's address space. */
                        2309 --767:         if (Alignment >= lochpmng->BlockSize)
                        2310 --line767
                        2311 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.88::
                        2312 .LDWlin88:
000008e8 045d           2313 	sld.w	8[ep],r11
000008ea 23ff1100       2314 	ld.w	16[sp],lp
000008ee ebf9           2315 	cmp	r11,lp
000008f0 e115*          2316 	bl	.L2016
                        2317 --768:         {
                        2318 --	    .bs
                        2319 .LDW13:
                        2320 --769:             uint32_t virtualIndex;
                        2321 --770:             
                        2322 --771:             align = Alignment / lochpmng->BlockSize;
                        2323 --line771
                        2324 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.89::
                        2325 .LDWlin89:
000008f2 234f1100       2326 	ld.w	16[sp],r9
000008f6 045d           2327 	sld.w	8[ep],r11
000008f8 eb4ffe02       2328 	divqu	r11,r9,zero
                        2329 --772:             
                        2330 --773:             /* What "virtual index" would the first block of our index list have 
                        2331 --774:                if we started counting at the address 0x00000000 ? */
                        2332 --775:             virtualIndex = lochpmng->BaseAddr / lochpmng->BlockSize;
000008fc 005d           2333 	sld.w	0[ep],r11
000008fe 0bf8           2334 	mov	r11,lp
00000900 045d           2335 	sld.w	8[ep],r11
00000902 ebfffe02       2336 	divqu	r11,lp,zero
                        2337 --776:             
                        2338 --777:             /* If the virtual index is not a multiple of our alignment <align>, 
                        2339 --778:                we need to add an offset. */
                        2340 --779:             alignOffset = (virtualIndex % align);
00000906 5c1a           2341 	add	-4,sp
00000908 1f58           2342 	mov	lp,r11
0000090a 63ff0100       2343 	st.w	lp,0[sp]
0000090e e95ffefa       2344 	divqu	r9,r11,lp
00000912 63ff0500       2345 	st.w	lp,4[sp]
00000916 23ff0100       2346 	ld.w	0[sp],lp
0000091a 441a           2347 	add	4,sp
                        2348 --	    .es
                        2349 .LDW23:
                        2350 .L2016:
                        2351 --780:         }
                        2352 --781:     }
                        2353 --782:     if(addr != 0u) 
0000091c e071           2354 	cmp	zero,r14
0000091e e2078503*      2355 	be	.L2020
                        2356 --783:     {

                                                                      Page 40
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        2357 --784:         /* Search for n free adjacent blocks */
                        2358 --785:         locblkindexlist = lochpmng->BlockIdxList;
                        2359 --line785
                        2360 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.90::
                        2361 .LDWlin90:
00000922 065d           2362 	sld.w	12[ep],r11
00000924 635f0900       2363 	st.w	r11,8[sp]
                        2364 --786:         addr = 0u;
00000928 0072           2365 	mov	0,r14
                        2366 --787:         i = *nextBlock;
0000092a f95f0100       2367 	ld.hu	0[r25],r11
                        2368 --788:         /* Search through the block index until we are at the starting point again */
                        2369 --789:         while (i != ((*nextBlock) - 1)) 
0000092e 80075a03*      2370 	br	.L2022
                        2371 .L2024:
                        2372 --790:         {
                        2373 --791:             /* Special case: When the starting point was zero, stop when we reach the end of the index */
                        2374 --792:             if (*nextBlock == 0u) 
                        2375 --line792
                        2376 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.91::
                        2377 .LDWlin91:
00000932 5c1a           2378 	add	-4,sp
00000934 63ff0100       2379 	st.w	lp,0[sp]
00000938 f9ff0100       2380 	ld.hu	0[r25],lp
0000093c e0f9           2381 	cmp	zero,lp
0000093e 23ff0100       2382 	ld.w	0[sp],lp
00000942 231e0400       2383 	movea	4,sp,sp
00000946 da0d*          2384 	bne	.L2025
                        2385 --793:             {
                        2386 --794:                 if (i == (lochpmng->NbOfBlock - 1)) 
                        2387 --line794
                        2388 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.92::
                        2389 .LDWlin92:
00000948 5c1a           2390 	add	-4,sp
0000094a 63ff0100       2391 	st.w	lp,0[sp]
0000094e 02fd           2392 	sld.w	4[ep],lp
00000950 5ffa           2393 	add	-1,lp
00000952 ff59           2394 	cmp	lp,r11
00000954 23ff0100       2395 	ld.w	0[sp],lp
00000958 231e0400       2396 	movea	4,sp,sp
0000095c aa05*          2397 	bne	.L2025
                        2398 --795:                 {
                        2399 --796:                    leave = 1u; 
                        2400 --line796
                        2401 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.93::
                        2402 .LDWlin93:
0000095e 01ea           2403 	mov	1,r29
                        2404 .L2025:
                        2405 --797:                 }
                        2406 --798:             }
                        2407 --799:             if (0u == leave) 
00000960 e0e9           2408 	cmp	zero,r29
00000962 ea072103*      2409 	bne	.L2029
                        2410 --800:             {
                        2411 --801:                 /* If block index states that the current block is free, take it as starting point */
                        2412 --802:                 /* With the following iterations, check that the adjacent block are also free */
                        2413 --803:                 if (*(locblkindexlist + i ) == 0u) 
                        2414 --line803
                        2415 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.94::
                        2416 .LDWlin94:
00000966 635f1900       2417 	st.w	r11,24[sp]

                                                                      Page 41
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
0000096a 5c1a           2418 	add	-4,sp
0000096c 63ff0100       2419 	st.w	lp,0[sp]
00000970 23ff1d00       2420 	ld.w	28[sp],lp
00000974 c1fa           2421 	shl	1,lp
00000976 63ff1d00       2422 	st.w	lp,28[sp]
0000097a 23ff0d00       2423 	ld.w	12[sp],lp
0000097e 5c1a           2424 	add	-4,sp
00000980 63f70100       2425 	st.w	ep,0[sp]
00000984 23f72100       2426 	ld.w	32[sp],ep
00000988 dff1           2427 	add	lp,ep
0000098a 63f72100       2428 	st.w	ep,32[sp]
0000098e 23f70100       2429 	ld.w	0[sp],ep
00000992 441a           2430 	add	4,sp
00000994 23ff1d00       2431 	ld.w	28[sp],lp
00000998 ffff0100       2432 	ld.hu	0[lp],lp
0000099c e0f9           2433 	cmp	zero,lp
0000099e 23ff0100       2434 	ld.w	0[sp],lp
000009a2 231e0400       2435 	movea	4,sp,sp
000009a6 ba25*          2436 	bne	.L2031
                        2437 --804:                 {
                        2438 --805:                     /* Only take it as a starting point if it matches our alignment requirement */
                        2439 --806:                     /*  .. or if a starting point was already found */
                        2440 --807:                     if ((startblk != 0) || (((i+alignOffset) % align) == 0u))
                        2441 --line807
                        2442 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.95::
                        2443 .LDWlin95:
000009a8 e009           2444 	cmp	zero,r1
000009aa ba1d*          2445 	bne	.L2034
000009ac 5c1a           2446 	add	-4,sp
000009ae 63ff0100       2447 	st.w	lp,0[sp]
000009b2 23ff0500       2448 	ld.w	4[sp],lp
000009b6 cbf9           2449 	add	r11,lp
000009b8 63ff1d00       2450 	st.w	lp,28[sp]
000009bc 5c1a           2451 	add	-4,sp
000009be 63f70100       2452 	st.w	ep,0[sp]
000009c2 e9fffef2       2453 	divqu	r9,lp,ep
000009c6 63f72100       2454 	st.w	ep,32[sp]
000009ca 23f70100       2455 	ld.w	0[sp],ep
000009ce 441a           2456 	add	4,sp
000009d0 23ff1d00       2457 	ld.w	28[sp],lp
000009d4 e0f9           2458 	cmp	zero,lp
000009d6 23ff0100       2459 	ld.w	0[sp],lp
000009da 231e0400       2460 	movea	4,sp,sp
000009de 9a0d*          2461 	bne	.L2038
                        2462 .L2034:
                        2463 --808:                     {
                        2464 --809:                         if (adjfreeblk == 0u) 
                        2465 --line809
                        2466 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.96::
                        2467 .LDWlin96:
000009e0 e069           2468 	cmp	zero,r13
000009e2 ba05*          2469 	bne	.L2036
                        2470 --810:                         {
                        2471 --811:                             startblk = i;
                        2472 --line811
                        2473 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.97::
                        2474 .LDWlin97:
000009e4 cb0effff       2475 	andi	65535,r11,r1
                        2476 .L2036:
                        2477 --812:                         }
                        2478 --813:                         

                                                                      Page 42
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        2479 --814:                         adjfreeblk++;
000009e8 416a           2480 	add	1,r13
000009ea b505*          2481 	br	.L2038
                        2482 .L2031:
                        2483 --815:                     }
                        2484 --816:                 } 
                        2485 --817:                 else 
                        2486 --818:                 {
                        2487 --819:                     adjfreeblk = 0u;
                        2488 --line819
                        2489 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.98::
                        2490 .LDWlin98:
000009ec 006a           2491 	mov	0,r13
                        2492 --820:                     startblk   = 0u;
000009ee 000a           2493 	mov	0,r1
                        2494 .L2038:
                        2495 --821:                 }
                        2496 --822:     
                        2497 --823:                 /* When n free adjacent block are found, all blocks' status are set to used*/
                        2498 --824:                 /* Start address is then returned */
                        2499 --825:                 if (adjfreeblk == allocNbBlocks) 
000009f0 fc69           2500 	cmp	r28,r13
000009f2 ea075702*      2501 	bne	.L2039
                        2502 --826:                 {
                        2503 --827:                     /* If there are blocks before and/or after the current block to be allocated,
                        2504 --828:                        check their indices and adapt the current block index if necessary. */
                        2505 --829:                     /* We don't need to check for a previous block, if we are at the start of the list */
                        2506 --830:                     if (startblk > 0)
                        2507 --line830
                        2508 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.99::
                        2509 .LDWlin99:
000009f6 e009           2510 	cmp	zero,r1
000009f8 e31d*          2511 	bnh	.L2041
                        2512 --831:                     {
                        2513 --832:                         prevBlkIndex = *(lochpmng->BlockIdxList + (startblk - 1));
                        2514 --line832
                        2515 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.100::
                        2516 .LDWlin100:
000009fa 5c1a           2517 	add	-4,sp
000009fc 63ff0100       2518 	st.w	lp,0[sp]
00000a00 01feffff       2519 	addi	-1,r1,lp
00000a04 c1fa           2520 	shl	1,lp
00000a06 63ff1100       2521 	st.w	lp,16[sp]
00000a0a 06fd           2522 	sld.w	12[ep],lp
00000a0c 5c1a           2523 	add	-4,sp
00000a0e 63f70100       2524 	st.w	ep,0[sp]
00000a12 23f71500       2525 	ld.w	20[sp],ep
00000a16 dff1           2526 	add	lp,ep
00000a18 63f71500       2527 	st.w	ep,20[sp]
00000a1c 23f70100       2528 	ld.w	0[sp],ep
00000a20 441a           2529 	add	4,sp
00000a22 23ff1100       2530 	ld.w	16[sp],lp
00000a26 ffff0100       2531 	ld.hu	0[lp],lp
00000a2a 63ff0800       2532 	st.h	lp,8[sp]
00000a2e 23ff0100       2533 	ld.w	0[sp],lp
00000a32 441a           2534 	add	4,sp
                        2535 .L2041:
                        2536 --833:                     }
                        2537 --834:                     /* We don't need to check for a next block, if we are at the end of the list */
                        2538 --835:                     if ((startblk + adjfreeblk) < lochpmng->NbOfBlock)
00000a34 636f0d00       2539 	st.w	r13,12[sp]

                                                                      Page 43
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000a38 5c1a           2540 	add	-4,sp
00000a3a 63ff0100       2541 	st.w	lp,0[sp]
00000a3e 23ff1100       2542 	ld.w	16[sp],lp
00000a42 c1f9           2543 	add	r1,lp
00000a44 63ff1100       2544 	st.w	lp,16[sp]
00000a48 02fd           2545 	sld.w	4[ep],lp
00000a4a 5c1a           2546 	add	-4,sp
00000a4c 63f70100       2547 	st.w	ep,0[sp]
00000a50 23f71500       2548 	ld.w	20[sp],ep
00000a54 fff1           2549 	cmp	lp,ep
00000a56 23f70100       2550 	ld.w	0[sp],ep
00000a5a 231e0400       2551 	movea	4,sp,sp
00000a5e 23ff0100       2552 	ld.w	0[sp],lp
00000a62 231e0400       2553 	movea	4,sp,sp
00000a66 9925*          2554 	bnl	.L2043
                        2555 --836:                     {
                        2556 --837:                         nextBlkIndex = *(lochpmng->BlockIdxList + (startblk + adjfreeblk));
                        2557 --line837
                        2558 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.101::
                        2559 .LDWlin101:
00000a68 636f1900       2560 	st.w	r13,24[sp]
00000a6c 5c1a           2561 	add	-4,sp
00000a6e 63ff0100       2562 	st.w	lp,0[sp]
00000a72 23ff1d00       2563 	ld.w	28[sp],lp
00000a76 c1f9           2564 	add	r1,lp
00000a78 c1fa           2565 	shl	1,lp
00000a7a 63ff1100       2566 	st.w	lp,16[sp]
00000a7e 06fd           2567 	sld.w	12[ep],lp
00000a80 5c1a           2568 	add	-4,sp
00000a82 63f70100       2569 	st.w	ep,0[sp]
00000a86 23f71500       2570 	ld.w	20[sp],ep
00000a8a dff1           2571 	add	lp,ep
00000a8c 63f71500       2572 	st.w	ep,20[sp]
00000a90 23f70100       2573 	ld.w	0[sp],ep
00000a94 441a           2574 	add	4,sp
00000a96 23ff1100       2575 	ld.w	16[sp],lp
00000a9a ffff0100       2576 	ld.hu	0[lp],lp
00000a9e 63ff0a00       2577 	st.h	lp,10[sp]
00000aa2 23ff0100       2578 	ld.w	0[sp],lp
00000aa6 441a           2579 	add	4,sp
                        2580 .L2043:
                        2581 --838:                     }
                        2582 --839:                     
                        2583 --840:                     /* Increment the index to be used for allocation if it is already used by the 
                        2584 --841:                        neighboring blocks */  /* This loop will be executed two times at maximum */
                        2585 --842:                     while ( ((*currentindex) == prevBlkIndex) || ((*currentindex) == nextBlkIndex) )
00000aa8 8525*          2586 	br	.L2045
                        2587 .L2047:
                        2588 --843:                     {
                        2589 --844:                         (*currentindex)++;
                        2590 --line844
                        2591 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.102::
                        2592 .LDWlin102:
00000aaa 5c1a           2593 	add	-4,sp
00000aac 63ff0100       2594 	st.w	lp,0[sp]
00000ab0 ecff0100       2595 	ld.hu	0[r12],lp
00000ab4 41fa           2596 	add	1,lp
00000ab6 6cff0000       2597 	st.h	lp,0[r12]
00000aba 23ff0100       2598 	ld.w	0[sp],lp
00000abe 441a           2599 	add	4,sp
                        2600 --845:                         if ( 0 == (*currentindex))

                                                                      Page 44
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000ac0 5c1a           2601 	add	-4,sp
00000ac2 63ff0100       2602 	st.w	lp,0[sp]
00000ac6 ecff0100       2603 	ld.hu	0[r12],lp
00000aca e0f9           2604 	cmp	zero,lp
00000acc 23ff0100       2605 	ld.w	0[sp],lp
00000ad0 231e0400       2606 	movea	4,sp,sp
00000ad4 aa0d*          2607 	bne	.L2045
                        2608 --846:                         {
                        2609 --847:                             (*currentindex) = 1;
                        2610 --line847
                        2611 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.103::
                        2612 .LDWlin103:
00000ad6 5c1a           2613 	add	-4,sp
00000ad8 63ff0100       2614 	st.w	lp,0[sp]
00000adc 01fa           2615 	mov	1,lp
00000ade 6cff0000       2616 	st.h	lp,0[r12]
00000ae2 23ff0100       2617 	ld.w	0[sp],lp
00000ae6 441a           2618 	add	4,sp
                        2619 .L2045:
00000ae8 5c1a           2620 	add	-4,sp
00000aea 63ff0100       2621 	st.w	lp,0[sp]
00000aee ecff0100       2622 	ld.hu	0[r12],lp
00000af2 63ff1d00       2623 	st.w	lp,28[sp]
00000af6 e3ff0900       2624 	ld.hu	8[sp],lp
00000afa 5c1a           2625 	add	-4,sp
00000afc 63f70100       2626 	st.w	ep,0[sp]
00000b00 23f72100       2627 	ld.w	32[sp],ep
00000b04 fff1           2628 	cmp	lp,ep
00000b06 23f70100       2629 	ld.w	0[sp],ep
00000b0a 231e0400       2630 	movea	4,sp,sp
00000b0e 23ff0100       2631 	ld.w	0[sp],lp
00000b12 231e0400       2632 	movea	4,sp,sp
00000b16 a2cd*          2633 	be	.L2047
00000b18 5c1a           2634 	add	-4,sp
00000b1a 63ff0100       2635 	st.w	lp,0[sp]
00000b1e ecff0100       2636 	ld.hu	0[r12],lp
00000b22 63ff1d00       2637 	st.w	lp,28[sp]
00000b26 e3ff0b00       2638 	ld.hu	10[sp],lp
00000b2a 5c1a           2639 	add	-4,sp
00000b2c 63f70100       2640 	st.w	ep,0[sp]
00000b30 23f72100       2641 	ld.w	32[sp],ep
00000b34 fff1           2642 	cmp	lp,ep
00000b36 23f70100       2643 	ld.w	0[sp],ep
00000b3a 231e0400       2644 	movea	4,sp,sp
00000b3e 23ff0100       2645 	ld.w	0[sp],lp
00000b42 231e0400       2646 	movea	4,sp,sp
00000b46 a2b5*          2647 	be	.L2047
                        2648 --848:                         }
                        2649 --849:                     }
                        2650 --851:                     /* Calculate address of allocated memory */
                        2651 --852:                     addr = lochpmng->BaseAddr + (startblk * lochpmng->BlockSize);
                        2652 --line852
                        2653 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.104::
                        2654 .LDWlin104:
00000b48 0475           2655 	sld.w	8[ep],r14
00000b4a 630f1900       2656 	st.w	r1,24[sp]
00000b4e 5c1a           2657 	add	-4,sp
00000b50 63ff0100       2658 	st.w	lp,0[sp]
00000b54 23ff1d00       2659 	ld.w	28[sp],lp
00000b58 eeff2202       2660 	mulu	r14,lp,zero
00000b5c 0075           2661 	sld.w	0[ep],r14

                                                                      Page 45
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000b5e 63771d00       2662 	st.w	r14,28[sp]
00000b62 1f70           2663 	mov	lp,r14
00000b64 23ff1d00       2664 	ld.w	28[sp],lp
00000b68 df71           2665 	add	lp,r14
00000b6a 23ff0100       2666 	ld.w	0[sp],lp
00000b6e 441a           2667 	add	4,sp
                        2668 --853:                     /* Reserve allocated memory in the block index */
                        2669 --854:                     while(adjfreeblk != 0u) 
00000b70 952d*          2670 	br	.L2051
                        2671 .L2053:
                        2672 --855:                     {
                        2673 --856:                         *(lochpmng->BlockIdxList + startblk) = *currentindex;
                        2674 --line856
                        2675 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.105::
                        2676 .LDWlin105:
00000b72 630f1900       2677 	st.w	r1,24[sp]
00000b76 5c1a           2678 	add	-4,sp
00000b78 63ff0100       2679 	st.w	lp,0[sp]
00000b7c 23ff1d00       2680 	ld.w	28[sp],lp
00000b80 c1fa           2681 	shl	1,lp
00000b82 63ff1100       2682 	st.w	lp,16[sp]
00000b86 06fd           2683 	sld.w	12[ep],lp
00000b88 5c1a           2684 	add	-4,sp
00000b8a 63f70100       2685 	st.w	ep,0[sp]
00000b8e 23f71500       2686 	ld.w	20[sp],ep
00000b92 dff1           2687 	add	lp,ep
00000b94 ecff0100       2688 	ld.hu	0[r12],lp
00000b98 80fc           2689 	sst.h	lp,0[ep]
00000b9a 23f70100       2690 	ld.w	0[sp],ep
00000b9e 441a           2691 	add	4,sp
00000ba0 23ff0100       2692 	ld.w	0[sp],lp
00000ba4 441a           2693 	add	4,sp
                        2694 --857:                         startblk++;
00000ba6 410a           2695 	add	1,r1
00000ba8 c100           2696 	zxh	r1
                        2697 --858:                         adjfreeblk--;
00000baa 5f6a           2698 	add	-1,r13
                        2699 --859:                         (*freeCount)--;
00000bac 5c1a           2700 	add	-4,sp
00000bae 63ff0100       2701 	st.w	lp,0[sp]
00000bb2 faff0100       2702 	ld.hu	0[r26],lp
00000bb6 5ffa           2703 	add	-1,lp
00000bb8 7aff0000       2704 	st.h	lp,0[r26]
00000bbc 23ff0100       2705 	ld.w	0[sp],lp
00000bc0 441a           2706 	add	4,sp
                        2707 .L2051:
00000bc2 e069           2708 	cmp	zero,r13
00000bc4 fad5*          2709 	bne	.L2053
                        2710 --860:                     }
                        2711 --861:                     /* Increase the index that uniquely identifies one allocation operation */
                        2712 --862:                     /* In case of an overflow, set index to 1, as zero is reserved for empty blocks. */
                        2713 --863:                     (*currentindex)++;
                        2714 --line863
                        2715 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.106::
                        2716 .LDWlin106:
00000bc6 5c1a           2717 	add	-4,sp
00000bc8 63ff0100       2718 	st.w	lp,0[sp]
00000bcc ecff0100       2719 	ld.hu	0[r12],lp
00000bd0 41fa           2720 	add	1,lp
00000bd2 6cff0000       2721 	st.h	lp,0[r12]
00000bd6 23ff0100       2722 	ld.w	0[sp],lp

                                                                      Page 46
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000bda 441a           2723 	add	4,sp
                        2724 --864:                     if ( 0 == (*currentindex))
00000bdc 5c1a           2725 	add	-4,sp
00000bde 63ff0100       2726 	st.w	lp,0[sp]
00000be2 ecff0100       2727 	ld.hu	0[r12],lp
00000be6 e0f9           2728 	cmp	zero,lp
00000be8 23ff0100       2729 	ld.w	0[sp],lp
00000bec 231e0400       2730 	movea	4,sp,sp
00000bf0 aa0d*          2731 	bne	.L2054
                        2732 --865:                     {
                        2733 --866:                         (*currentindex) = 1;
                        2734 --line866
                        2735 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.107::
                        2736 .LDWlin107:
00000bf2 5c1a           2737 	add	-4,sp
00000bf4 63ff0100       2738 	st.w	lp,0[sp]
00000bf8 01fa           2739 	mov	1,lp
00000bfa 6cff0000       2740 	st.h	lp,0[r12]
00000bfe 23ff0100       2741 	ld.w	0[sp],lp
00000c02 441a           2742 	add	4,sp
                        2743 .L2054:
                        2744 --867:                     }
                        2745 --868:                     /* Set next free block number to be directly behind the just allocated memory */
                        2746 --869:                     (*nextBlock) = startblk  % lochpmng->NbOfBlock;
00000c04 630f0d00       2747 	st.w	r1,12[sp]
00000c08 5c1a           2748 	add	-4,sp
00000c0a 63ff0100       2749 	st.w	lp,0[sp]
00000c0e 02fd           2750 	sld.w	4[ep],lp
00000c10 63ff1d00       2751 	st.w	lp,28[sp]
00000c14 5c1a           2752 	add	-4,sp
00000c16 63f70100       2753 	st.w	ep,0[sp]
00000c1a 23f71500       2754 	ld.w	20[sp],ep
00000c1e 5c1a           2755 	add	-4,sp
00000c20 63ef0100       2756 	st.w	r29,0[sp]
00000c24 fff7feea       2757 	divqu	lp,ep,r29
00000c28 63ef2500       2758 	st.w	r29,36[sp]
00000c2c 23ef0100       2759 	ld.w	0[sp],r29
00000c30 441a           2760 	add	4,sp
00000c32 23f70100       2761 	ld.w	0[sp],ep
00000c36 441a           2762 	add	4,sp
00000c38 23ff1d00       2763 	ld.w	28[sp],lp
00000c3c 79ff0000       2764 	st.h	lp,0[r25]
00000c40 23ff0100       2765 	ld.w	0[sp],lp
00000c44 441a           2766 	add	4,sp
                        2767 --870:                     leave = 1u; 
00000c46 01ea           2768 	mov	1,r29
                        2769 .L2039:
                        2770 --871:                 }
                        2771 --872:                 
                        2772 --873:                 /* Proceed to go through the block index with each iteration */
                        2773 --874:                 if (0u == leave) 
00000c48 e0e9           2774 	cmp	zero,r29
00000c4a ca1d*          2775 	bne	.L2029
                        2776 --875:                 {    
                        2777 --876:                     i = (i + 1) % lochpmng->NbOfBlock;
                        2778 --line876
                        2779 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.108::
                        2780 .LDWlin108:
00000c4c 5c1a           2781 	add	-4,sp
00000c4e 63ff0100       2782 	st.w	lp,0[sp]
00000c52 0bfe0100       2783 	addi	1,r11,lp

                                                                      Page 47
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000c56 025d           2784 	sld.w	4[ep],r11
00000c58 635f1d00       2785 	st.w	r11,28[sp]
00000c5c 5c1a           2786 	add	-4,sp
00000c5e 63f70100       2787 	st.w	ep,0[sp]
00000c62 ebfffef2       2788 	divqu	r11,lp,ep
00000c66 63f72100       2789 	st.w	ep,32[sp]
00000c6a 23f70100       2790 	ld.w	0[sp],ep
00000c6e 441a           2791 	add	4,sp
00000c70 23ff0100       2792 	ld.w	0[sp],lp
00000c74 441a           2793 	add	4,sp
00000c76 235f1900       2794 	ld.w	24[sp],r11
                        2795 --877:                     if(i == 0u) 
00000c7a e059           2796 	cmp	zero,r11
00000c7c ba05*          2797 	bne	.L2029
                        2798 --878:                     {
                        2799 --879:                         /* we are back to the beginning of the heap */
                        2800 --880:                         /* then reset the startblock and the adjfreeblk variable*/
                        2801 --881:                         /* We do not want to have an allocation divided
                        2802 --882:                            between the end and the start of the heap */
                        2803 --883:                         
                        2804 --884:                         adjfreeblk = 0u;
                        2805 --line884
                        2806 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.109::
                        2807 .LDWlin109:
00000c7e 006a           2808 	mov	0,r13
                        2809 --885:                         startblk   = 0u;
00000c80 000a           2810 	mov	0,r1
                        2811 .L2029:
                        2812 --886:                     }
                        2813 --887:                 }
                        2814 --888:             } /* if (0u == leave)*/
                        2815 --889:             /* check for break conditions */
                        2816 --890:             if (0 != leave) 
00000c82 e0e9           2817 	cmp	zero,r29
00000c84 a205*          2818 	be	.L2022
                        2819 --891:             {
                        2820 --892:                 break; 
                        2821 --line892
                        2822 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.110::
                        2823 .LDWlin110:
00000c86 e50d*          2824 	br	.L2020
                        2825 .L2022:
                        2826 --line789
                        2827 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.111::
                        2828 .LDWlin111:
00000c88 5c1a           2829 	add	-4,sp
00000c8a 63ff0100       2830 	st.w	lp,0[sp]
00000c8e f9ff0100       2831 	ld.hu	0[r25],lp
00000c92 5ffa           2832 	add	-1,lp
00000c94 ff59           2833 	cmp	lp,r11
00000c96 23ff0100       2834 	ld.w	0[sp],lp
00000c9a 231e0400       2835 	movea	4,sp,sp
00000c9e fa0795fc*      2836 	bne	.L2024
                        2837 .L2020:
                        2838 --893:             } 
                        2839 --894:         } /* while (i != ((*nextBlock) - 1))  */
                        2840 --895:     }
                        2841 --896:     
                        2842 --897: #ifdef MEM_DEBUG    
                        2843 --898:     /*  debug code to make a breakpoint on out of memory possible */
                        2844 --899:     if(!addr)

                                                                      Page 48
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        2845 --900:     {
                        2846 --901:         addr = 0u; /* break here */
                        2847 --902:     }
                        2848 --903: #endif
                        2849 --904: #ifdef USE_ROS
                        2850 --905:     R_OS_ThreadMutexUnlock(&locCdiMemLock);
                        2851 --906: #endif
                        2852 --907:     
                        2853 --908:     return (void *)addr;
                        2854 --line908
                        2855 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.112::
                        2856 .LDWlin112:
00000ca2 0000           2857 	nop
                        2858 --	    .ef
                        2859 .LDW33:
00000ca4 0e50           2860 	mov	r14,r10
00000ca6 4e06ff70       2861 	dispose	7,{r25,r26,r27,r28,r29,r31},[lp]
                        2862 	.type	_R_CDI_AllocAlign,@function
                        2863 	.size	_R_CDI_AllocAlign,.-_R_CDI_AllocAlign
                        2864 	.align	2
                        2865 .LDW43:
                        2866 --_addr	r14	local
                        2867 --_allocNbBlocks	r28	local
                        2868 --_adjfreeblk	r13	local
                        2869 --_tmp	r27	local
                        2870 --_i	r11	local
                        2871 --_align	r9	local
                        2872 --_alignOffset	0[sp]	local
                        2873 --_lochpmng	ep	local
                        2874 --_locblkindexlist	8[sp]	local
                        2875 --_startblk	r1	local
                        2876 --_currentindex	r12	local
                        2877 --_freeCount	r26	local
                        2878 --_nextBlock	r25	local
                        2879 --_leave	r29	local
                        2880 --_prevBlkIndex	4[sp]	local
                        2881 --_nextBlkIndex	6[sp]	local
                        2882 --_virtualIndex	lp	local
                        2883 
                        2884 --_HeapMng	r10	param
                        2885 --_Size	20[sp]	param
                        2886 --_Alignment	16[sp]	param
                        2887 
                        2888 	.section ".bss","awb"
                        2889 .L2398:
                        2890 	.type	.L2398,@object
                        2891 	.size	.L2398,0
                        2892 	.data
                        2893 	.text
                        2894 
                        2895 --909: }
                        2896 
                        2897 --911: /*******************************************************************************
                        2898 --912:  Function: R_CDI_HeapResetNextFreeBlockNb
                        2899 --913: */
                        2900 --914: uint32_t R_CDI_HeapResetNextFreeBlockNb(r_cdi_HpType_t type)
                        2901 	.align	2
                        2902 	.align	2
                        2903 	.global	_R_CDI_HeapResetNextFreeBlockNb
                        2904 _R_CDI_HeapResetNextFreeBlockNb:
00000caa 0668           2905 	mov	r6,r13

                                                                      Page 49
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000cac 210600000000*  2906 	mov	_locNextCPUFreeBlockNb,r1
                        2907 --	    .bf
                        2908 .LDW53:
                        2909 --915: {
                        2910 --916:     uint32_t err = 0u;
00000cb2 0072           2911 	mov	0,r14
                        2912 --917:     
                        2913 --918:     switch (type)
00000cb4 616a           2914 	cmp	1,r13
00000cb6 d105*          2915 	bl	.L2654
00000cb8 f20d*          2916 	be	.L2656
00000cba 626a           2917 	cmp	2,r13
00000cbc 9a15*          2918 	bne	.L2657
00000cbe 850d*          2919 	br	.L2655
                        2920 .L2654:
                        2921 --919:     {
                        2922 --920:     case CPU:
                        2923 --921:         locNextCPUFreeBlockNb = 1u;
                        2924 --line921
                        2925 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.113::
                        2926 .LDWlin113:
00000cc0 2b0600000000*  2927 	mov	_locNextCPUFreeBlockNb,r11
00000cc6 0162           2928 	mov	1,r12
00000cc8 6b670100       2929 	st.w	r12,0[r11]
00000ccc b50d*          2930 	br	.L2652
                        2931 .L2655:
                        2932 --922:         break;
                        2933 --923:     case SPECIAL_MODE:
                        2934 --924:         locNextSpecialModeFreeBlockNb = 1u;
                        2935 --line924
                        2936 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.114::
                        2937 .LDWlin114:
00000cce 0162           2938 	mov	1,r12
00000cd0 61670900       2939 	st.w	r12,8[r1]
00000cd4 f505*          2940 	br	.L2652
                        2941 .L2656:
                        2942 --925:         break;
                        2943 --926:     case VIDEO:
                        2944 --927:         locNextVideoFreeBlockNb = 1u;
                        2945 --line927
                        2946 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.115::
                        2947 .LDWlin115:
00000cd6 0162           2948 	mov	1,r12
00000cd8 61670500       2949 	st.w	r12,4[r1]
00000cdc b505*          2950 	br	.L2652
                        2951 .L2657:
                        2952 --928:         break;
                        2953 --929:     default:
                        2954 --930:         err = 1u;
                        2955 --line930
                        2956 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.116::
                        2957 .LDWlin116:
00000cde 0172           2958 	mov	1,r14
00000ce0 0000           2959 	nop
                        2960 .L2652:
                        2961 --931:         break;
                        2962 --932:     }
                        2963 --933:     return err;
00000ce2 0e50           2964 	mov	r14,r10
                        2965 --	    .ef
                        2966 .LDW63:

                                                                      Page 50
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000ce4 7f00           2967 	jmp	[lp]
                        2968 	.type	_R_CDI_HeapResetNextFreeBlockNb,@function
                        2969 	.size	_R_CDI_HeapResetNextFreeBlockNb,.-_R_CDI_HeapResetNextFreeBlockNb
                        2970 	.align	2
                        2971 .LDW73:
                        2972 --_err	r14	local
                        2973 
                        2974 --_type	r13	param
                        2975 
                        2976 	.data
                        2977 	.text
                        2978 
                        2979 --934: }
                        2980 
                        2981 --936: /*******************************************************************************
                        2982 --937:  Function: R_CDI_Free
                        2983 --938: */
                        2984 --939:  uint32_t R_CDI_Free(uint32_t Addr, r_cdi_Heap_t *HeapMng)
                        2985 	.align	2
                        2986 	.align	2
                        2987 	.global	_R_CDI_Free
                        2988 _R_CDI_Free:
00000ce6 8007c110       2989 	prepare	{r27,r28,r29},0
00000cea 0658           2990 	mov	r6,r11
00000cec 0770           2991 	mov	r7,r14
                        2992 --	    .bf
                        2993 .LDW83:
                        2994 --940: {
                        2995 --941:     
                        2996 --942:     uint32_t            i;
                        2997 --943:     uint32_t            err = 0u;
00000cee 000a           2998 	mov	0,r1
                        2999 --944:     int32_t             blknb;
                        3000 --945:     r_cdi_Heap_t        *lochpmng;
                        3001 --946:     r_cdi_HpBlkIndex_t  *locblkindexlist;
                        3002 --947:     r_cdi_HpBlkIndex_t  blkindex;
                        3003 --948:     r_cdi_HpBlkIndex_t  *freeCount;
                        3004 --949:     r_cdi_HpBlkIndex_t  *nextBlock;
                        3005 --951: #ifdef USE_ROS
                        3006 --952:     R_OS_ThreadMutexLock(&locCdiMemLock);
                        3007 --953: #endif
                        3008 --954:     if(Addr != 0u)
00000cf0 e059           3009 	cmp	zero,r11
00000cf2 e245*          3010 	be	.L2776
                        3011 --955:     {
                        3012 --956:         lochpmng  = HeapMng;
                        3013 --line956
                        3014 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.117::
                        3015 .LDWlin117:
00000cf4 0ef0           3016 	mov	r14,ep
                        3017 --957:         freeCount = &(HeapMng->FreeBlocks);
00000cf6 0e461200       3018 	addi	18,r14,r8
                        3019 --958:         nextBlock = &(HeapMng->NextFreeBlockNb);
00000cfa 0eee1400       3020 	addi	20,r14,r29
                        3021 --959:     
                        3022 --960:         /* Calculate block number from addr */
                        3023 --961:         blknb =  (Addr - (lochpmng->BaseAddr)) / (lochpmng->BlockSize);
00000cfe 006d           3024 	sld.w	0[ep],r13
00000d00 8b69           3025 	subr	r11,r13
00000d02 0d60           3026 	mov	r13,r12
00000d04 046d           3027 	sld.w	8[ep],r13

                                                                      Page 51
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000d06 ed67fe02       3028 	divqu	r13,r12,zero
                        3029 --962:         locblkindexlist = lochpmng->BlockIdxList;
00000d0a 0655           3030 	sld.w	12[ep],r10
                        3031 --963:         blkindex = locblkindexlist[blknb];
00000d0c 0c68           3032 	mov	r12,r13
00000d0e c16a           3033 	shl	1,r13
00000d10 ca69           3034 	add	r10,r13
00000d12 ed4f0100       3035 	ld.hu	0[r13],r9
                        3036 --964:         
                        3037 --965:         /* If this memory manager is used in an environment, 
                        3038 --966:            where the pointer of the allocated memory are aligned upwards outside of the CDI, 
                        3039 --967:            the resulting pointer might leaved the first block of several that are assigned to this allocation operation. */
                        3040 --968:         /* In such an environment, the "Free" routine must first seach the lowest index number 
                        3041 --969:            with the same Block ID before starting the cleanup. */
                        3042 --971:         if(Addr < lochpmng->BaseAddr)
00000d16 006d           3043 	sld.w	0[ep],r13
00000d18 ed59           3044 	cmp	r13,r11
00000d1a b905*          3045 	bnl	.L2778
                        3046 --972:         {
                        3047 --973:             err = 2u;   /* address is below managed range of this Heap */
                        3048 --line973
                        3049 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.118::
                        3050 .LDWlin118:
00000d1c 020a           3051 	mov	2,r1
00000d1e 8535*          3052 	br	.L2776
                        3053 .L2778:
                        3054 --974:         }
                        3055 --975:         else if (Addr >= (lochpmng->BaseAddr + (lochpmng->BlockSize*lochpmng->NbOfBlock)))
                        3056 --line975
                        3057 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.119::
                        3058 .LDWlin119:
00000d20 026d           3059 	sld.w	4[ep],r13
00000d22 04e5           3060 	sld.w	8[ep],r28
00000d24 fc6f2202       3061 	mulu	r28,r13,zero
00000d28 00e5           3062 	sld.w	0[ep],r28
00000d2a dc69           3063 	add	r28,r13
00000d2c ed59           3064 	cmp	r13,r11
00000d2e b105*          3065 	bl	.L2781
                        3066 --976:         {
                        3067 --977:             err = 2u;   /* address is above managed range of this Heap */
                        3068 --line977
                        3069 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.120::
                        3070 .LDWlin120:
00000d30 020a           3071 	mov	2,r1
00000d32 e525*          3072 	br	.L2776
                        3073 .L2781:
                        3074 --978:         }
                        3075 --979:         else if (blkindex == 0u)
                        3076 --line979
                        3077 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.121::
                        3078 .LDWlin121:
00000d34 e049           3079 	cmp	zero,r9
00000d36 ba05*          3080 	bne	.L2784
                        3081 --980:         {
                        3082 --981:             err = 2u;   /* already free */
                        3083 --line981
                        3084 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.122::
                        3085 .LDWlin122:
00000d38 020a           3086 	mov	2,r1
00000d3a a525*          3087 	br	.L2776
                        3088 .L2784:

                                                                      Page 52
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3089 --982:         }
                        3090 --983:         else
                        3091 --984:         {
                        3092 --985:             (*nextBlock) = blknb;
                        3093 --line985
                        3094 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.123::
                        3095 .LDWlin123:
00000d3c 7d670000       3096 	st.h	r12,0[r29]
                        3097 --986:             i = blknb;
00000d40 0c68           3098 	mov	r12,r13
                        3099 --987:             while (locblkindexlist[i] == blkindex)
00000d42 8515*          3100 	br	.L2787
                        3101 .L2789:
                        3102 --988:             {
                        3103 --989:                 locblkindexlist[i] = 0u;
                        3104 --line989
                        3105 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.124::
                        3106 .LDWlin124:
00000d44 0de0           3107 	mov	r13,r28
00000d46 c1e2           3108 	shl	1,r28
00000d48 cae1           3109 	add	r10,r28
00000d4a 7c070000       3110 	st.h	zero,0[r28]
                        3111 --990:                 i++;
00000d4e 416a           3112 	add	1,r13
                        3113 --991:                 (*freeCount)++;
00000d50 e8e70100       3114 	ld.hu	0[r8],r28
00000d54 41e2           3115 	add	1,r28
00000d56 68e70000       3116 	st.h	r28,0[r8]
                        3117 --993:                 /* Stop deallocation if we leave the range of the block index list */
                        3118 --994:                 if (i>lochpmng->NbOfBlock)
00000d5a 02e5           3119 	sld.w	4[ep],r28
00000d5c fc69           3120 	cmp	r28,r13
00000d5e a305*          3121 	bnh	.L2787
                        3122 --995:                 {
                        3123 --996:                     break;
                        3124 --line996
                        3125 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.125::
                        3126 .LDWlin125:
00000d60 850d*          3127 	br	.L2792
                        3128 .L2787:
                        3129 --line987
                        3130 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.126::
                        3131 .LDWlin126:
00000d62 0de0           3132 	mov	r13,r28
00000d64 c1e2           3133 	shl	1,r28
00000d66 cae1           3134 	add	r10,r28
00000d68 fce70100       3135 	ld.hu	0[r28],r28
00000d6c e9e1           3136 	cmp	r9,r28
00000d6e b2ed*          3137 	be	.L2789
                        3138 .L2792:
                        3139 --997:                 }
                        3140 --998:             }
                        3141 --999:             /* Reset block index to zero, if all blocks are deallocated */
                        3142 --1000:             if (lochpmng->NbOfBlock == HeapMng->FreeBlocks)
                        3143 --line1000
                        3144 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.127::
                        3145 .LDWlin127:
00000d70 eee71300       3146 	ld.hu	18[r14],r28
00000d74 02dd           3147 	sld.w	4[ep],r27
00000d76 fcd9           3148 	cmp	r28,r27
00000d78 ba05*          3149 	bne	.L2776

                                                                      Page 53
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3150 --1001:             {
                        3151 --1002:                 HeapMng->NextFreeBlockNb = 0u;
                        3152 --line1002
                        3153 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.128::
                        3154 .LDWlin128:
00000d7a 6e071400       3155 	st.h	zero,20[r14]
                        3156 .L2776:
                        3157 --1003:             }
                        3158 --1004:         } 
                        3159 --1005:     }
                        3160 --1006: #ifdef USE_ROS
                        3161 --1007:     R_OS_ThreadMutexUnlock(&locCdiMemLock);
                        3162 --1008: #endif
                        3163 --1010:     return err;
00000d7e 0000           3164 	nop
                        3165 --	    .ef
                        3166 .LDW93:
00000d80 0150           3167 	mov	r1,r10
00000d82 4006df10       3168 	dispose	0,{r27,r28,r29},[lp]
                        3169 	.type	_R_CDI_Free,@function
                        3170 	.size	_R_CDI_Free,.-_R_CDI_Free
                        3171 	.align	2
                        3172 .LDW04:
                        3173 --_i	r13	local
                        3174 --_err	r1	local
                        3175 --_blknb	r12	local
                        3176 --_lochpmng	ep	local
                        3177 --_locblkindexlist	r10	local
                        3178 --_blkindex	r9	local
                        3179 --_freeCount	r8	local
                        3180 --_nextBlock	r29	local
                        3181 
                        3182 --_Addr	r11	param
                        3183 --_HeapMng	r14	param
                        3184 
                        3185 	.section ".bss","awb"
                        3186 .L2914:
                        3187 	.type	.L2914,@object
                        3188 	.size	.L2914,0
                        3189 	.data
                        3190 	.text
                        3191 
                        3192 --1011: }
                        3193 
                        3194 --1014: /*******************************************************************************
                        3195 --1015:  Function: R_CDI_HeapFree
                        3196 --1016: */
                        3197 --1017: uint32_t R_CDI_HeapFree(uint32_t addr, r_cdi_HpType_t type)
                        3198 	.align	2
                        3199 	.align	2
                        3200 	.global	_R_CDI_HeapFree
                        3201 _R_CDI_HeapFree:
00000d86 8007c110       3202 	prepare	{r27,r28,r29},0
00000d8a 210600000000*  3203 	mov	_locCpuHeapMng,r1
00000d90 06e8           3204 	mov	r6,r29
00000d92 07e0           3205 	mov	r7,r28
00000d94 21de1400       3206 	movea	20,r1,r27
                        3207 --	    .bf
                        3208 .LDW14:
                        3209 --1018: {
                        3210 --1019:     

                                                                      Page 54
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3211 --1020:     uint32_t i, vidsize;
                        3212 --1021:     uint32_t err = 0u;
00000d98 0052           3213 	mov	0,r10
                        3214 --1022:     int32_t blknb;
                        3215 --1023:     r_cdi_HeapMng_t      *lochpmng;
                        3216 --1024:     r_cdi_HpBlkIndex_t   *locblkindexlist;
                        3217 --1025:     r_cdi_HpBlkIndex_t   blkindex;
                        3218 --1026:     uint32_t           *freeCount;
                        3219 --1027:     uint32_t           *nextBlock;
                        3220 --1029: #ifdef USE_ROS
                        3221 --1030:     R_OS_ThreadMutexLock(&locCdiMemLock);
                        3222 --1031: #endif
                        3223 --1032:     if(addr != 0u)
00000d9a e0e9           3224 	cmp	zero,r29
00000d9c a275*          3225 	be	.L3003
                        3226 --1033:     {
                        3227 --1034:         
                        3228 --1035:         /* Check memory type and get the pointer to the corresponding heap manager.*/
                        3229 --1036:         /* if the type is incorrect then 1 is returned */
                        3230 --1037:         /* Have to add check on addr, because if short in CPU memory Video is allocated*/
                        3231 --1038:         /* No other way to know it... */
                        3232 --1039:         vidsize = locVidHeapMng.BlockSize*locVidHeapMng.NbOfBlock;
                        3233 --line1039
                        3234 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.129::
                        3235 .LDWlin129:
00000d9e 21371900       3236 	ld.w	24[r1],r6
00000da2 21771d00       3237 	ld.w	28[r1],r14
00000da6 e6772202       3238 	mulu	r6,r14,zero
00000daa 0e30           3239 	mov	r14,r6
                        3240 --1040:         if((type == VIDEO) || ((addr >= locVidHeapMng.BaseAddr) && (addr < (locVidHeapMng.BaseAddr + vidsize))))
00000dac 61e2           3241 	cmp	1,r28
00000dae a20d*          3242 	be	.L3006
00000db0 21771500       3243 	ld.w	20[r1],r14
00000db4 eee9           3244 	cmp	r14,r29
00000db6 e10d*          3245 	bl	.L3005
00000db8 21771500       3246 	ld.w	20[r1],r14
00000dbc c671           3247 	add	r6,r14
00000dbe eee9           3248 	cmp	r14,r29
00000dc0 990d*          3249 	bnl	.L3005
                        3250 .L3006:
                        3251 --1041:         {
                        3252 --1042:             lochpmng = &locVidHeapMng;
                        3253 --line1042
                        3254 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.130::
                        3255 .LDWlin130:
00000dc2 1bf0           3256 	mov	r27,ep
                        3257 --1043:             freeCount = &locFreeVideoBlocks;
00000dc4 2c0600000000*  3258 	mov	_locFreeVideoBlocks,r12
                        3259 --1044:             nextBlock = &locNextVideoFreeBlockNb;
00000dca 270600000000*  3260 	mov	_locNextVideoFreeBlockNb,r7
00000dd0 951d*          3261 	br	.L3009
                        3262 .L3005:
                        3263 --1045:         } 
                        3264 --1046:         else if(type == SPECIAL_MODE)
                        3265 --line1046
                        3266 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.131::
                        3267 .LDWlin131:
00000dd2 62e2           3268 	cmp	2,r28
00000dd4 aa0d*          3269 	bne	.L3010
                        3270 --1047:         {
                        3271 --1048:             lochpmng = &locSpecialModeHeapMng;

                                                                      Page 55
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3272 --line1048
                        3273 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.132::
                        3274 .LDWlin132:
00000dd6 21f62800       3275 	movea	40,r1,ep
                        3276 --1049:             freeCount = &locFreeSpecialModeBlocks;
00000dda 2c0600000000*  3277 	mov	_locFreeSpecialModeBlocks,r12
                        3278 --1050:             nextBlock = &locNextSpecialModeFreeBlockNb;
00000de0 270600000000*  3279 	mov	_locNextSpecialModeFreeBlockNb,r7
00000de6 e50d*          3280 	br	.L3009
                        3281 .L3010:
                        3282 --1051:         } 
                        3283 --1052:         else 
                        3284 --1053:         {
                        3285 --1054:             if(type == CPU)
                        3286 --line1054
                        3287 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.133::
                        3288 .LDWlin133:
00000de8 e0e1           3289 	cmp	zero,r28
00000dea ba0d*          3290 	bne	.L3013
                        3291 --1055: {
                        3292 --1056:                 lochpmng = &locCpuHeapMng;
                        3293 --line1056
                        3294 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.134::
                        3295 .LDWlin134:
00000dec 3e0600000000*  3296 	mov	_locCpuHeapMng,ep
                        3297 --1057:                 freeCount = &locFreeCPUBlocks;
00000df2 2c0600000000*  3298 	mov	_locFreeCPUBlocks,r12
                        3299 --1058:                 nextBlock = &locNextCPUFreeBlockNb;
00000df8 270600000000*  3300 	mov	_locNextCPUFreeBlockNb,r7
00000dfe a505*          3301 	br	.L3009
                        3302 .L3013:
                        3303 --1059:             } 
                        3304 --1060:             else 
                        3305 --1061:             {
                        3306 --1062:                 err = 1u;
                        3307 --line1062
                        3308 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.135::
                        3309 .LDWlin135:
00000e00 0152           3310 	mov	1,r10
                        3311 .L3009:
                        3312 --1063:             }
                        3313 --1064:         }
                        3314 --1065:         
                        3315 --1066:         if (err == 0u)
00000e02 e051           3316 	cmp	zero,r10
00000e04 ea3d*          3317 	bne	.L3003
                        3318 --1067:         {
                        3319 --1068:             /* Calculate block number from addr */
                        3320 --1069:             blknb =  (addr - (lochpmng->BaseAddr)) / (lochpmng->BlockSize);
                        3321 --line1069
                        3322 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.136::
                        3323 .LDWlin136:
00000e06 0075           3324 	sld.w	0[ep],r14
00000e08 9d71           3325 	subr	r29,r14
00000e0a 0e48           3326 	mov	r14,r9
00000e0c 0475           3327 	sld.w	8[ep],r14
00000e0e ee4ffe02       3328 	divqu	r14,r9,zero
                        3329 --1070:             locblkindexlist = lochpmng->BlockIndexList;
00000e12 085d           3330 	sld.w	16[ep],r11
                        3331 --1071:             blkindex = locblkindexlist[blknb];
00000e14 0970           3332 	mov	r9,r14

                                                                      Page 56
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000e16 c172           3333 	shl	1,r14
00000e18 cb71           3334 	add	r11,r14
00000e1a ee470100       3335 	ld.hu	0[r14],r8
                        3336 --1072:             
                        3337 --1073:             if(addr < lochpmng->BaseAddr)
00000e1e 0075           3338 	sld.w	0[ep],r14
00000e20 eee9           3339 	cmp	r14,r29
00000e22 b905*          3340 	bnl	.L3018
                        3341 --1074:             {
                        3342 --1075:                 err = 2u;   /* address is below managed range of this Heap */
                        3343 --line1075
                        3344 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.137::
                        3345 .LDWlin137:
00000e24 0252           3346 	mov	2,r10
00000e26 d52d*          3347 	br	.L3003
                        3348 .L3018:
                        3349 --1076:             }
                        3350 --1077:             else if (addr >= (lochpmng->BaseAddr + (lochpmng->BlockSize*lochpmng->NbOfBlock)))
                        3351 --line1077
                        3352 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.138::
                        3353 .LDWlin138:
00000e28 0275           3354 	sld.w	4[ep],r14
00000e2a 046d           3355 	sld.w	8[ep],r13
00000e2c ed772202       3356 	mulu	r13,r14,zero
00000e30 006d           3357 	sld.w	0[ep],r13
00000e32 cd71           3358 	add	r13,r14
00000e34 eee9           3359 	cmp	r14,r29
00000e36 b105*          3360 	bl	.L3021
                        3361 --1078:             {
                        3362 --1079:                 err = 2u;   /* address is above managed range of this Heap */
                        3363 --line1079
                        3364 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.139::
                        3365 .LDWlin139:
00000e38 0252           3366 	mov	2,r10
00000e3a b525*          3367 	br	.L3003
                        3368 .L3021:
                        3369 --1080:             }
                        3370 --1081:             else if (blkindex == 0u)
                        3371 --line1081
                        3372 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.140::
                        3373 .LDWlin140:
00000e3c e041           3374 	cmp	zero,r8
00000e3e ba05*          3375 	bne	.L3024
                        3376 --1082:             {
                        3377 --1083:                 err = 2u;   /* already free */
                        3378 --line1083
                        3379 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.141::
                        3380 .LDWlin141:
00000e40 0252           3381 	mov	2,r10
00000e42 f51d*          3382 	br	.L3003
                        3383 .L3024:
                        3384 --1084:             }
                        3385 --1085:             else
                        3386 --1086:             {
                        3387 --1087:                 if((*nextBlock)> (uint32_t)blknb)
                        3388 --line1087
                        3389 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.142::
                        3390 .LDWlin142:
00000e44 27770100       3391 	ld.w	0[r7],r14
00000e48 e971           3392 	cmp	r9,r14
00000e4a b305*          3393 	bnh	.L3027

                                                                      Page 57
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3394 --1088:                 {
                        3395 --1089:                     (*nextBlock) = blknb;
                        3396 --line1089
                        3397 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.143::
                        3398 .LDWlin143:
00000e4c 674f0100       3399 	st.w	r9,0[r7]
                        3400 .L3027:
                        3401 --1090:                 }
                        3402 --1091:                 
                        3403 --1092:                 i = blknb;
00000e50 0970           3404 	mov	r9,r14
                        3405 --1093:                 while (locblkindexlist[i] == blkindex)
00000e52 8515*          3406 	br	.L3029
                        3407 .L3031:
                        3408 --1094:                 {
                        3409 --1095:                     locblkindexlist[i] = 0u;
                        3410 --line1095
                        3411 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.144::
                        3412 .LDWlin144:
00000e54 0e68           3413 	mov	r14,r13
00000e56 c16a           3414 	shl	1,r13
00000e58 cb69           3415 	add	r11,r13
00000e5a 6d070000       3416 	st.h	zero,0[r13]
                        3417 --1096:                     i++;
00000e5e 4172           3418 	add	1,r14
                        3419 --1097:                     (*freeCount)++;
00000e60 2c6f0100       3420 	ld.w	0[r12],r13
00000e64 416a           3421 	add	1,r13
00000e66 6c6f0100       3422 	st.w	r13,0[r12]
                        3423 --1098:                     
                        3424 --1099:                     /* Stop deallocation if we leave the range of the block index list */
                        3425 --1100:                     if (i>lochpmng->NbOfBlock)
00000e6a 026d           3426 	sld.w	4[ep],r13
00000e6c ed71           3427 	cmp	r13,r14
00000e6e a305*          3428 	bnh	.L3029
                        3429 --1101:                     {
                        3430 --1102:                         break;
                        3431 --line1102
                        3432 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.145::
                        3433 .LDWlin145:
00000e70 850d*          3434 	br	.L3003
                        3435 .L3029:
                        3436 --line1093
                        3437 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.146::
                        3438 .LDWlin146:
00000e72 0e68           3439 	mov	r14,r13
00000e74 c16a           3440 	shl	1,r13
00000e76 cb69           3441 	add	r11,r13
00000e78 ed6f0100       3442 	ld.hu	0[r13],r13
00000e7c e869           3443 	cmp	r8,r13
00000e7e b2ed*          3444 	be	.L3031
                        3445 .L3003:
                        3446 --1103:                     }
                        3447 --1104:                 }
                        3448 --1105:                 
                        3449 --1106:             } 
                        3450 --1107:         }
                        3451 --1108:     }
                        3452 --1109: #ifdef USE_ROS
                        3453 --1110:     R_OS_ThreadMutexUnlock(&locCdiMemLock);
                        3454 --1111: #endif

                                                                      Page 58
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3455 --1113:     return err;
                        3456 --line1113
                        3457 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.147::
                        3458 .LDWlin147:
00000e80 0000           3459 	nop
                        3460 --	    .ef
                        3461 .LDW24:
00000e82 4006df10       3462 	dispose	0,{r27,r28,r29},[lp]
                        3463 	.type	_R_CDI_HeapFree,@function
                        3464 	.size	_R_CDI_HeapFree,.-_R_CDI_HeapFree
                        3465 	.align	2
                        3466 .LDW34:
                        3467 --_i	r14	local
                        3468 --_vidsize	r6	local
                        3469 --_err	r10	local
                        3470 --_blknb	r9	local
                        3471 --_lochpmng	ep	local
                        3472 --_locblkindexlist	r11	local
                        3473 --_blkindex	r8	local
                        3474 --_freeCount	r12	local
                        3475 --_nextBlock	r7	local
                        3476 
                        3477 --_addr	r29	param
                        3478 --_type	r28	param
                        3479 
                        3480 	.data
                        3481 	.text
                        3482 
                        3483 --1114: }
                        3484 
                        3485 --1116: /*******************************************************************************
                        3486 --1117:  Function: R_CDI_HeapFreeAll
                        3487 --1118: */
                        3488 --1119: uint32_t R_CDI_HeapFreeAll(r_cdi_HpType_t type)
                        3489 	.align	2
                        3490 	.align	2
                        3491 	.global	_R_CDI_HeapFreeAll
                        3492 _R_CDI_HeapFreeAll:
00000e86 0668           3493 	mov	r6,r13
00000e88 210600000000*  3494 	mov	_locCpuHeapMng,r1
                        3495 --	    .bf
                        3496 .LDW44:
                        3497 --1120: {
                        3498 --1121:     
                        3499 --1122:     uint32_t err = 0u;
00000e8e 0072           3500 	mov	0,r14
                        3501 --1123:     int32_t tmp;
                        3502 --1124:     r_cdi_HeapMng_t *lochpmng;
                        3503 --1125:     r_cdi_HpBlkIndex_t   *locblkindexlist;
                        3504 --1126:     
                        3505 --1127: #ifdef USE_ROS
                        3506 --1128:     R_OS_ThreadMutexLock(&locCdiMemLock);
                        3507 --1129: #endif
                        3508 --1130:     /* Check memory type and get the pointer to the corresponding heap manager.*/
                        3509 --1131:     /* if the type is incorrect then 1 is returned */
                        3510 --1132:     if(type == CPU)
00000e90 e069           3511 	cmp	zero,r13
00000e92 ba0d*          3512 	bne	.L3333
                        3513 --1133:     {
                        3514 --1134:         lochpmng   = &locCpuHeapMng;
                        3515 --line1134

                                                                      Page 59
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3516 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.148::
                        3517 .LDWlin148:
00000e94 3e0600000000*  3518 	mov	_locCpuHeapMng,ep
                        3519 --1135:         locNextCpuBlockIndex = 1u;
00000e9a 2b0600000000*  3520 	mov	_locNextCpuBlockIndex,r11
00000ea0 010a           3521 	mov	1,r1
00000ea2 6b0f0000       3522 	st.h	r1,0[r11]
00000ea6 851d*          3523 	br	.L3335
                        3524 .L3333:
                        3525 --1136:     } 
                        3526 --1137:     else if(type == SPECIAL_MODE)
                        3527 --line1137
                        3528 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.149::
                        3529 .LDWlin149:
00000ea8 626a           3530 	cmp	2,r13
00000eaa aa0d*          3531 	bne	.L3336
                        3532 --1138:     {
                        3533 --1139:         lochpmng = &locSpecialModeHeapMng;
                        3534 --line1139
                        3535 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.150::
                        3536 .LDWlin150:
00000eac 21f62800       3537 	movea	40,r1,ep
                        3538 --1140:         locNextSpecialModeBlockIndex = 1u;
00000eb0 2b0600000000*  3539 	mov	_locNextSpecialModeBlockIndex,r11
00000eb6 010a           3540 	mov	1,r1
00000eb8 6b0f0000       3541 	st.h	r1,0[r11]
00000ebc d50d*          3542 	br	.L3335
                        3543 .L3336:
                        3544 --1141:     
                        3545 --1142:     } 
                        3546 --1143:     else 
                        3547 --1144:     {
                        3548 --1145:         if(type == VIDEO)
                        3549 --line1145
                        3550 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.151::
                        3551 .LDWlin151:
00000ebe 616a           3552 	cmp	1,r13
00000ec0 aa0d*          3553 	bne	.L3339
                        3554 --1146:         {
                        3555 --1147:             lochpmng = &locVidHeapMng;
                        3556 --line1147
                        3557 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.152::
                        3558 .LDWlin152:
00000ec2 21f61400       3559 	movea	20,r1,ep
                        3560 --1148:             locNextVidBlockIndex = 1u;
00000ec6 2b0600000000*  3561 	mov	_locNextVidBlockIndex,r11
00000ecc 010a           3562 	mov	1,r1
00000ece 6b0f0000       3563 	st.h	r1,0[r11]
00000ed2 a505*          3564 	br	.L3335
                        3565 .L3339:
                        3566 --1149:         } 
                        3567 --1150:         else 
                        3568 --1151:         {
                        3569 --1152:             err = 1u;
                        3570 --line1152
                        3571 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.153::
                        3572 .LDWlin153:
00000ed4 0172           3573 	mov	1,r14
                        3574 .L3335:
                        3575 --1153:         }
                        3576 --1154:     }

                                                                      Page 60
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3577 --1155:     
                        3578 --1156:     if (err == 0u)
00000ed6 e071           3579 	cmp	zero,r14
00000ed8 ea0d*          3580 	bne	.L3342
                        3581 --1157:     {
                        3582 --1158:         locblkindexlist = lochpmng->BlockIndexList;
                        3583 --line1158
                        3584 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.154::
                        3585 .LDWlin154:
00000eda 0865           3586 	sld.w	16[ep],r12
                        3587 --1159:         tmp = lochpmng->NbOfBlock - 1;
00000edc 025d           3588 	sld.w	4[ep],r11
00000ede 0b0effff       3589 	addi	-1,r11,r1
                        3590 --1160:         while(tmp >= 0)
00000ee2 f505*          3591 	br	.L3344
                        3592 .L3346:
                        3593 --1161:         {
                        3594 --1162:             locblkindexlist[tmp] = 0u;
                        3595 --line1162
                        3596 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.155::
                        3597 .LDWlin155:
00000ee4 0158           3598 	mov	r1,r11
00000ee6 c15a           3599 	shl	1,r11
00000ee8 cc59           3600 	add	r12,r11
00000eea 6b070000       3601 	st.h	zero,0[r11]
                        3602 --1163:             tmp--;
00000eee 5f0a           3603 	add	-1,r1
                        3604 .L3344:
00000ef0 e009           3605 	cmp	zero,r1
00000ef2 9efd*          3606 	bge	.L3346
                        3607 .L3342:
                        3608 --1164:         }
                        3609 --1165:     }
                        3610 --1166: #ifdef USE_ROS
                        3611 --1167:     R_OS_ThreadMutexUnlock(&locCdiMemLock);
                        3612 --1168: #endif
                        3613 --1169:     return err;
                        3614 --line1169
                        3615 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.156::
                        3616 .LDWlin156:
00000ef4 0e50           3617 	mov	r14,r10
                        3618 --	    .ef
                        3619 .LDW54:
00000ef6 7f00           3620 	jmp	[lp]
                        3621 	.type	_R_CDI_HeapFreeAll,@function
                        3622 	.size	_R_CDI_HeapFreeAll,.-_R_CDI_HeapFreeAll
                        3623 	.align	2
                        3624 .LDW64:
                        3625 --_err	r14	local
                        3626 --_tmp	r1	local
                        3627 --_lochpmng	ep	local
                        3628 --_locblkindexlist	r12	local
                        3629 
                        3630 --_type	r13	param
                        3631 
                        3632 	.data
                        3633 	.text
                        3634 
                        3635 --1170: }
                        3636 
                        3637 --1172: /*******************************************************************************

                                                                      Page 61
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3638 --1173:  Function: R_CDI_GetHeapSize
                        3639 --1174: */
                        3640 --1175: uint32_t R_CDI_GetHeapSize(uint32_t addr, r_cdi_HpType_t type)
                        3641 	.align	2
                        3642 	.align	2
                        3643 	.global	_R_CDI_GetHeapSize
                        3644 _R_CDI_GetHeapSize:
00000ef8 8007c100       3645 	prepare	{r28,r29},0
00000efc 07e0           3646 	mov	r7,r28
00000efe 06e8           3647 	mov	r6,r29
00000f00 210600000000*  3648 	mov	_locCpuHeapMng,r1
00000f06 213e1400       3649 	movea	20,r1,r7
                        3650 --	    .bf
                        3651 .LDW74:
                        3652 --1176: {
                        3653 --1177:     
                        3654 --1178:     uint32_t i;
                        3655 --1179:     uint32_t size = 0u;
00000f0a 0062           3656 	mov	0,r12
                        3657 --1180:     uint32_t blknb;
                        3658 --1181:     uint32_t vidsize;
                        3659 --1182:     r_cdi_HeapMng_t *lochpmng;
                        3660 --1183:     r_cdi_HpBlkIndex_t   *locblkindexlist;
                        3661 --1184:     r_cdi_HpBlkIndex_t    blkindex;
                        3662 --1186: #ifdef USE_ROS
                        3663 --1187:     R_OS_ThreadMutexLock(&locCdiMemLock);
                        3664 --1188: #endif
                        3665 --1189:     /* Check memory type and get the pointer to the corresponding heap manager.*/
                        3666 --1190:     /* if the type is incorrect then 1 is returned */
                        3667 --1191:     /* Have to add check on addr, because if short in CPU memory Video is allocated*/
                        3668 --1192:         /* No other way to know it... */
                        3669 --1193:     vidsize = locVidHeapMng.BlockSize*locVidHeapMng.NbOfBlock;
00000f0c 21471900       3670 	ld.w	24[r1],r8
00000f10 21771d00       3671 	ld.w	28[r1],r14
00000f14 e8772202       3672 	mulu	r8,r14,zero
00000f18 0e40           3673 	mov	r14,r8
                        3674 --1194:     if((type == VIDEO) || ((addr >= locVidHeapMng.BaseAddr) && (addr < (locVidHeapMng.BaseAddr + vidsize))))
00000f1a 61e2           3675 	cmp	1,r28
00000f1c a20d*          3676 	be	.L3521
00000f1e 21771500       3677 	ld.w	20[r1],r14
00000f22 eee9           3678 	cmp	r14,r29
00000f24 810d*          3679 	bl	.L3520
00000f26 21771500       3680 	ld.w	20[r1],r14
00000f2a c871           3681 	add	r8,r14
00000f2c eee9           3682 	cmp	r14,r29
00000f2e b905*          3683 	bnl	.L3520
                        3684 .L3521:
                        3685 --1195:     {
                        3686 --1196:         lochpmng = &locVidHeapMng;
                        3687 --line1196
                        3688 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.157::
                        3689 .LDWlin157:
00000f30 07f0           3690 	mov	r7,ep
00000f32 d50d*          3691 	br	.L3524
                        3692 .L3520:
                        3693 --1197:     } 
                        3694 --1198:     else 
                        3695 --1199:     {
                        3696 --1200:         if(type == CPU)
                        3697 --line1200
                        3698 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.158::

                                                                      Page 62
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3699 .LDWlin158:
00000f34 e0e1           3700 	cmp	zero,r28
00000f36 da05*          3701 	bne	.L3525
                        3702 --1201:         {
                        3703 --1202:             lochpmng   = &locCpuHeapMng;
                        3704 --line1202
                        3705 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.159::
                        3706 .LDWlin159:
00000f38 3e0600000000*  3707 	mov	_locCpuHeapMng,ep
00000f3e f505*          3708 	br	.L3524
                        3709 .L3525:
                        3710 --1203:         } 
                        3711 --1204:         else
                        3712 --1205:         {
                        3713 --1206:             if(type == SPECIAL_MODE)
                        3714 --line1206
                        3715 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.160::
                        3716 .LDWlin160:
00000f40 62e2           3717 	cmp	2,r28
00000f42 ca05*          3718 	bne	.L3528
                        3719 --1207:             {
                        3720 --1208:                 lochpmng   = &locSpecialModeHeapMng;
                        3721 --line1208
                        3722 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.161::
                        3723 .LDWlin161:
00000f44 21f62800       3724 	movea	40,r1,ep
00000f48 a505*          3725 	br	.L3524
                        3726 .L3528:
                        3727 --1209:             }
                        3728 --1210:             else
                        3729 --1211:             {
                        3730 --1212:                 lochpmng = 0u;
                        3731 --line1212
                        3732 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.162::
                        3733 .LDWlin162:
00000f4a 00f2           3734 	mov	0,ep
                        3735 .L3524:
                        3736 --1213:             }
                        3737 --1214:         }
                        3738 --1215:     }
                        3739 --1216:     
                        3740 --1217:     if (0 != lochpmng)
00000f4c e0f1           3741 	cmp	zero,ep
00000f4e 921d*          3742 	be	.L3531
                        3743 --1218:     {
                        3744 --1219:         /* Calculate block number from addr */
                        3745 --1220:         blknb = (addr - (lochpmng->BaseAddr)) / (lochpmng->BlockSize);
                        3746 --line1220
                        3747 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.163::
                        3748 .LDWlin163:
00000f50 0075           3749 	sld.w	0[ep],r14
00000f52 9d71           3750 	subr	r29,r14
00000f54 0e50           3751 	mov	r14,r10
00000f56 0475           3752 	sld.w	8[ep],r14
00000f58 ee57fe02       3753 	divqu	r14,r10,zero
                        3754 --1221:         locblkindexlist = lochpmng->BlockIndexList;
00000f5c 085d           3755 	sld.w	16[ep],r11
                        3756 --1222:         blkindex = locblkindexlist[blknb];
00000f5e 0a70           3757 	mov	r10,r14
00000f60 c172           3758 	shl	1,r14
00000f62 cb71           3759 	add	r11,r14

                                                                      Page 63
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000f64 ee4f0100       3760 	ld.hu	0[r14],r9
                        3761 --1223:         i = blknb;
00000f68 0a70           3762 	mov	r10,r14
                        3763 --1224:         while (locblkindexlist[i] == blkindex)
00000f6a c505*          3764 	br	.L3533
                        3765 .L3535:
                        3766 --1225:         {
                        3767 --1226:             size += lochpmng->BlockSize;
                        3768 --line1226
                        3769 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.164::
                        3770 .LDWlin164:
00000f6c 046d           3771 	sld.w	8[ep],r13
00000f6e cd61           3772 	add	r13,r12
                        3773 --1227:             i++;
00000f70 4172           3774 	add	1,r14
                        3775 .L3533:
00000f72 0e68           3776 	mov	r14,r13
00000f74 c16a           3777 	shl	1,r13
00000f76 cb69           3778 	add	r11,r13
00000f78 ed6f0100       3779 	ld.hu	0[r13],r13
00000f7c e969           3780 	cmp	r9,r13
00000f7e f2f5*          3781 	be	.L3535
                        3782 .L3531:
                        3783 --1228:         }
                        3784 --1229:         /* if no match found, then return size = 0 */
                        3785 --1230:     }
                        3786 --1231: #ifdef USE_ROS
                        3787 --1232:     R_OS_ThreadMutexUnlock(&locCdiMemLock);
                        3788 --1233: #endif
                        3789 --1234:     return size;
                        3790 --line1234
                        3791 ..lin.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory.165::
                        3792 .LDWlin165:
00000f80 0c68           3793 	mov	r12,r13
                        3794 --	    .ef
                        3795 .LDW84:
00000f82 0d50           3796 	mov	r13,r10
00000f84 4006df00       3797 	dispose	0,{r28,r29},[lp]
                        3798 	.type	_R_CDI_GetHeapSize,@function
                        3799 	.size	_R_CDI_GetHeapSize,.-_R_CDI_GetHeapSize
                        3800 	.align	2
                        3801 .LDW94:
                        3802 --_i	r14	local
                        3803 --_size	r12	local
                        3804 --_blknb	r10	local
                        3805 --_vidsize	r8	local
                        3806 --_lochpmng	ep	local
                        3807 --_locblkindexlist	r11	local
                        3808 --_blkindex	r9	local
                        3809 
                        3810 --_addr	r29	param
                        3811 --_type	r28	param
                        3812 
                        3813 	.data
                        3814 	.text
                        3815 
                        3816 --1235: }
                        3817 
                        3818 --1237: /*******************************************************************************
                        3819 --1238:  Function: R_CDI_GetVidHeapBlockSize
                        3820 --1239: */

                                                                      Page 64
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3821 --1240: uint32_t R_CDI_GetVidHeapBlockSize(void)
                        3822 	.align	2
                        3823 	.align	2
                        3824 	.global	_R_CDI_GetVidHeapBlockSize
                        3825 _R_CDI_GetVidHeapBlockSize:
                        3826 --	    .bf
                        3827 .LDW05:
                        3828 --1241: {
                        3829 --1242:     return locVidHeapMng.BlockSize;
00000f88 2a0600000000*  3830 	mov	_locVidHeapMng+8,r10
00000f8e 2a570100       3831 	ld.w	0[r10],r10
                        3832 --	    .ef
                        3833 .LDW15:
00000f92 7f00           3834 	jmp	[lp]
                        3835 	.type	_R_CDI_GetVidHeapBlockSize,@function
                        3836 	.size	_R_CDI_GetVidHeapBlockSize,.-_R_CDI_GetVidHeapBlockSize
                        3837 	.align	2
                        3838 .LDW25:
                        3839 
                        3840 	.data
                        3841 	.text
                        3842 
                        3843 --1243: }    
                        3844 
                        3845 --1245: /*******************************************************************************
                        3846 --1246:  Function: R_CDI_GetVidHeapBlockMax
                        3847 --1247: */
                        3848 --1248: uint32_t R_CDI_GetVidHeapBlockMax(void)
                        3849 	.align	2
                        3850 	.align	2
                        3851 	.global	_R_CDI_GetVidHeapBlockMax
                        3852 _R_CDI_GetVidHeapBlockMax:
                        3853 --	    .bf
                        3854 .LDW35:
                        3855 --1249: {
                        3856 --1250:     return locVidHeapMng.NbOfBlock;
00000f94 2a0600000000*  3857 	mov	_locVidHeapMng+4,r10
00000f9a 2a570100       3858 	ld.w	0[r10],r10
                        3859 --	    .ef
                        3860 .LDW45:
00000f9e 7f00           3861 	jmp	[lp]
                        3862 	.type	_R_CDI_GetVidHeapBlockMax,@function
                        3863 	.size	_R_CDI_GetVidHeapBlockMax,.-_R_CDI_GetVidHeapBlockMax
                        3864 	.align	2
                        3865 .LDW55:
                        3866 
                        3867 	.data
                        3868 	.text
                        3869 
                        3870 --1251: }
                        3871 
                        3872 --1253: /*******************************************************************************
                        3873 --1254:  Function: R_CDI_GetVidHeapBlockUsed
                        3874 --1255: */
                        3875 --1256: uint32_t R_CDI_GetVidHeapBlockUsed(void)
                        3876 	.align	2
                        3877 	.align	2
                        3878 	.global	_R_CDI_GetVidHeapBlockUsed
                        3879 _R_CDI_GetVidHeapBlockUsed:
                        3880 --	    .bf
                        3881 .LDW65:

                                                                      Page 65
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        3882 --1257: {
                        3883 --1258:     return (locVidHeapMng.NbOfBlock-locFreeVideoBlocks);
00000fa0 2e0600000000*  3884 	mov	_locFreeVideoBlocks,r14
00000fa6 210600000000*  3885 	mov	_locVidHeapMng+4,r1
00000fac 2e770100       3886 	ld.w	0[r14],r14
00000fb0 210f0100       3887 	ld.w	0[r1],r1
00000fb4 0150           3888 	mov	r1,r10
00000fb6 ae51           3889 	sub	r14,r10
                        3890 --	    .ef
                        3891 .LDW75:
00000fb8 7f00           3892 	jmp	[lp]
                        3893 	.type	_R_CDI_GetVidHeapBlockUsed,@function
                        3894 	.size	_R_CDI_GetVidHeapBlockUsed,.-_R_CDI_GetVidHeapBlockUsed
                        3895 	.align	2
                        3896 .LDW85:
                        3897 
                        3898 	.data
                        3899 	.text
                        3900 
                        3901 --1259: }
                        3902 
                        3903 --1261: /*******************************************************************************
                        3904 --1262:  Function: R_CDI_GetCpuHeapBlockSize
                        3905 --1263: */
                        3906 --1264: uint32_t R_CDI_GetCpuHeapBlockSize(void)
                        3907 	.align	2
                        3908 	.align	2
                        3909 	.global	_R_CDI_GetCpuHeapBlockSize
                        3910 _R_CDI_GetCpuHeapBlockSize:
                        3911 --	    .bf
                        3912 .LDW95:
                        3913 --1265: {
                        3914 --1266:     return locCpuHeapMng.BlockSize;
00000fba 2a0600000000*  3915 	mov	_locCpuHeapMng+8,r10
00000fc0 2a570100       3916 	ld.w	0[r10],r10
                        3917 --	    .ef
                        3918 .LDW06:
00000fc4 7f00           3919 	jmp	[lp]
                        3920 	.type	_R_CDI_GetCpuHeapBlockSize,@function
                        3921 	.size	_R_CDI_GetCpuHeapBlockSize,.-_R_CDI_GetCpuHeapBlockSize
                        3922 	.align	2
                        3923 .LDW16:
                        3924 
                        3925 	.data
                        3926 	.text
                        3927 
                        3928 --1267: }    
                        3929 
                        3930 --1269: /*******************************************************************************
                        3931 --1270:  Function: R_CDI_GetCpuHeapBlockMax
                        3932 --1271: */
                        3933 --1272: uint32_t R_CDI_GetCpuHeapBlockMax(void)
                        3934 	.align	2
                        3935 	.align	2
                        3936 	.global	_R_CDI_GetCpuHeapBlockMax
                        3937 _R_CDI_GetCpuHeapBlockMax:
                        3938 --	    .bf
                        3939 .LDW26:
                        3940 --1273: {
                        3941 --1274:     return locCpuHeapMng.NbOfBlock;
00000fc6 2a0600000000*  3942 	mov	_locCpuHeapMng+4,r10

                                                                      Page 66
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
00000fcc 2a570100       3943 	ld.w	0[r10],r10
                        3944 --	    .ef
                        3945 .LDW36:
00000fd0 7f00           3946 	jmp	[lp]
                        3947 	.type	_R_CDI_GetCpuHeapBlockMax,@function
                        3948 	.size	_R_CDI_GetCpuHeapBlockMax,.-_R_CDI_GetCpuHeapBlockMax
                        3949 	.align	2
                        3950 .LDW46:
                        3951 
                        3952 	.data
                        3953 	.text
                        3954 
                        3955 --1275: }
                        3956 
                        3957 --1277: /*******************************************************************************
                        3958 --1278:  Function: R_CDI_GetCpuHeapBlockUsed
                        3959 --1279: */
                        3960 --1280: uint32_t R_CDI_GetCpuHeapBlockUsed(void)
                        3961 	.align	2
                        3962 	.align	2
                        3963 	.global	_R_CDI_GetCpuHeapBlockUsed
                        3964 _R_CDI_GetCpuHeapBlockUsed:
                        3965 --	    .bf
                        3966 .LDW56:
                        3967 --1281: {
                        3968 --1282:     return (locCpuHeapMng.NbOfBlock-locFreeCPUBlocks);
00000fd2 2e0600000000*  3969 	mov	_locFreeCPUBlocks,r14
00000fd8 210600000000*  3970 	mov	_locCpuHeapMng+4,r1
00000fde 2e770100       3971 	ld.w	0[r14],r14
00000fe2 210f0100       3972 	ld.w	0[r1],r1
00000fe6 0150           3973 	mov	r1,r10
00000fe8 ae51           3974 	sub	r14,r10
                        3975 --	    .ef
                        3976 .LDW66:
00000fea 7f00           3977 	jmp	[lp]
                        3978 	.type	_R_CDI_GetCpuHeapBlockUsed,@function
                        3979 	.size	_R_CDI_GetCpuHeapBlockUsed,.-_R_CDI_GetCpuHeapBlockUsed
                        3980 	.align	2
                        3981 .LDW76:
                        3982 
                        3983 	.data
                        3984 	.text
                        3985 
                        3986 --1283: }
                        3987 	.align	2
                        3988 --_locCpuHeapMng	_locCpuHeapMng	static
                        3989 --_locVidHeapMng	_locVidHeapMng	static
                        3990 --_locSpecialModeHeapMng	_locSpecialModeHeapMng	static
                        3991 --_locNextCpuBlockIndex	_locNextCpuBlockIndex	static
                        3992 --_locNextVidBlockIndex	_locNextVidBlockIndex	static
                        3993 --_locNextSpecialModeBlockIndex	_locNextSpecialModeBlockIndex	static
                        3994 --_locFreeVideoBlocks	_locFreeVideoBlocks	static
                        3995 --_locFreeCPUBlocks	_locFreeCPUBlocks	static
                        3996 --_locFreeSpecialModeBlocks	_locFreeSpecialModeBlocks	static
                        3997 --_locNextCPUFreeBlockNb	_locNextCPUFreeBlockNb	static
                        3998 --_locNextVideoFreeBlockNb	_locNextVideoFreeBlockNb	static
                        3999 --_locNextSpecialModeFreeBlockNb	_locNextSpecialModeFreeBlockNb	static
                        4000 
                        4001 	.data
                        4002 	.ghsnote version,15
                        4003 	.ghsnote tools,3

                                                                      Page 67
                                                              C:\Users\Frank\AppData\Local\Temp\gh_0000pg41.si
                        4004 	.ghsnote options,144
                        4005 	.text
                        4006 	.align	2
                        4007 ..eof.C.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs.5Cobj.5Cr_cdi_memory...43.3A.5Cgit.5Crh850.5Csrc.5Capp.5Cgfx_apps.5Csimple_draw.5Ctarget.5Cd1mx_mango_ghs..5BC5D028..0::
                        4008 .rh850_flags REGMODE22,DATA_ALIGN8,GP_FIX,EP_NONFIX,TP_FIX,REG2_RESERVE,G3M
